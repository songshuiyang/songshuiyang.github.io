<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>宋水阳个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.songshuiyang.site/"/>
  <updated>2018-07-08T06:59:36.200Z</updated>
  <id>http://www.songshuiyang.site/</id>
  
  <author>
    <name>songshuiyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HashSet</title>
    <link href="http://www.songshuiyang.site/2018/07/08/Web%E5%90%8E%E5%8F%B0/Java/%E9%9B%86%E5%90%88%E5%AE%B9%E5%99%A8/HashSet/"/>
    <id>http://www.songshuiyang.site/2018/07/08/Web后台/Java/集合容器/HashSet/</id>
    <published>2018-07-08T06:24:12.000Z</published>
    <updated>2018-07-08T06:59:36.200Z</updated>
    
    <content type="html"><![CDATA[<h4 id="HashSet源码："><a href="#HashSet源码：" class="headerlink" title="HashSet源码："></a>HashSet源码：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashSet</span>&lt;<span class="title">E</span>&gt;  </span></span><br><span class="line"><span class="class">    <span class="keyword">extends</span> <span class="title">AbstractSet</span>&lt;<span class="title">E</span>&gt;  </span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">Set</span>&lt;<span class="title">E</span>&gt;, <span class="title">Cloneable</span>, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">5024744406713321676L</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 底层使用HashMap来保存HashSet中所有元素。  </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> HashMap&lt;E,Object&gt; map;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">// 定义一个虚拟的Object对象作为HashMap的value，将此对象定义为static final。  </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Object PRESENT = <span class="keyword">new</span> Object();  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 默认的无参构造器，构造一个空的HashSet。 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * 实际底层会初始化一个空的HashMap，并使用默认初始容量为16和加载因子0.75。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">      map = <span class="keyword">new</span> HashMap&lt;E,Object&gt;();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 构造一个包含指定collection中的元素的新set。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 实际底层使用默认的加载因子0.75和足以包含指定 </span></span><br><span class="line"><span class="comment">     * collection中所有元素的初始容量来创建一个HashMap。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> c 其中的元素将存放在此set中的collection。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;  </span><br><span class="line">      map = <span class="keyword">new</span> HashMap&lt;E,Object&gt;(Math.max((<span class="keyword">int</span>) (c.size()/.<span class="number">75f</span>) + <span class="number">1</span>, <span class="number">16</span>));  </span><br><span class="line">      addAll(c);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 以指定的initialCapacity和loadFactor构造一个空的HashSet。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 实际底层以相应的参数构造一个空的HashMap。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> initialCapacity 初始容量。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loadFactor 加载因子。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;  </span><br><span class="line">      map = <span class="keyword">new</span> HashMap&lt;E,Object&gt;(initialCapacity, loadFactor);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 以指定的initialCapacity构造一个空的HashSet。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 实际底层以相应的参数及加载因子loadFactor为0.75构造一个空的HashMap。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> initialCapacity 初始容量。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;  </span><br><span class="line">      map = <span class="keyword">new</span> HashMap&lt;E,Object&gt;(initialCapacity);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 以指定的initialCapacity和loadFactor构造一个新的空链接哈希集合。 </span></span><br><span class="line"><span class="comment">     * 此构造函数为包访问权限，不对外公开，实际只是是对LinkedHashSet的支持。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 实际底层会以指定的参数构造一个空LinkedHashMap实例来实现。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> initialCapacity 初始容量。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loadFactor 加载因子。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dummy 标记。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    HashSet(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor, <span class="keyword">boolean</span> dummy) &#123;  </span><br><span class="line">      map = <span class="keyword">new</span> LinkedHashMap&lt;E,Object&gt;(initialCapacity, loadFactor);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 返回对此set中元素进行迭代的迭代器。返回元素的顺序并不是特定的。 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * 底层实际调用底层HashMap的keySet来返回所有的key。 </span></span><br><span class="line"><span class="comment">     * 可见HashSet中的元素，只是存放在了底层HashMap的key上， </span></span><br><span class="line"><span class="comment">     * value使用一个static final的Object对象标识。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 对此set中元素进行迭代的Iterator。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Iterator&lt;E&gt; <span class="title">iterator</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">      <span class="keyword">return</span> map.keySet().iterator();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 返回此set中的元素的数量（set的容量）。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 底层实际调用HashMap的size()方法返回Entry的数量，就得到该Set中元素的个数。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 此set中的元素的数量（set的容量）。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">      <span class="keyword">return</span> map.size();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 如果此set不包含任何元素，则返回true。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 底层实际调用HashMap的isEmpty()判断该HashSet是否为空。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果此set不包含任何元素，则返回true。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">      <span class="keyword">return</span> map.isEmpty();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 如果此set包含指定元素，则返回true。 </span></span><br><span class="line"><span class="comment">     * 更确切地讲，当且仅当此set包含一个满足(o==null ? e==null : o.equals(e)) </span></span><br><span class="line"><span class="comment">     * 的e元素时，返回true。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 底层实际调用HashMap的containsKey判断是否包含指定key。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o 在此set中的存在已得到测试的元素。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果此set包含指定元素，则返回true。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(Object o)</span> </span>&#123;  </span><br><span class="line">      <span class="keyword">return</span> map.containsKey(o);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 如果此set中尚未包含指定元素，则添加指定元素。 </span></span><br><span class="line"><span class="comment">     * 更确切地讲，如果此 set 没有包含满足(e==null ? e2==null : e.equals(e2)) </span></span><br><span class="line"><span class="comment">     * 的元素e2，则向此set 添加指定的元素e。 </span></span><br><span class="line"><span class="comment">     * 如果此set已包含该元素，则该调用不更改set并返回false。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 底层实际将将该元素作为key放入HashMap。 </span></span><br><span class="line"><span class="comment">     * 由于HashMap的put()方法添加key-value对时，当新放入HashMap的Entry中key </span></span><br><span class="line"><span class="comment">     * 与集合中原有Entry的key相同（hashCode()返回值相等，通过equals比较也返回true）， </span></span><br><span class="line"><span class="comment">     * 新添加的Entry的value会将覆盖原来Entry的value，但key不会有任何改变， </span></span><br><span class="line"><span class="comment">     * 因此如果向HashSet中添加一个已经存在的元素时，新添加的集合元素将不会被放入HashMap中， </span></span><br><span class="line"><span class="comment">     * 原来的元素也不会有任何改变，这也就满足了Set中元素不重复的特性。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e 将添加到此set中的元素。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果此set尚未包含指定元素，则返回true。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;  </span><br><span class="line">      <span class="keyword">return</span> map.put(e, PRESENT)==<span class="keyword">null</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 如果指定元素存在于此set中，则将其移除。 </span></span><br><span class="line"><span class="comment">     * 更确切地讲，如果此set包含一个满足(o==null ? e==null : o.equals(e))的元素e， </span></span><br><span class="line"><span class="comment">     * 则将其移除。如果此set已包含该元素，则返回true </span></span><br><span class="line"><span class="comment">     * （或者：如果此set因调用而发生更改，则返回true）。（一旦调用返回，则此set不再包含该元素）。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 底层实际调用HashMap的remove方法删除指定Entry。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o 如果存在于此set中则需要将其移除的对象。 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果set包含指定元素，则返回true。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(Object o)</span> </span>&#123;  </span><br><span class="line">      <span class="keyword">return</span> map.remove(o)==PRESENT;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 从此set中移除所有元素。此调用返回后，该set将为空。 </span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 底层实际调用HashMap的clear方法清空Entry中所有元素。 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">      map.clear();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 返回此HashSet实例的浅表副本：并没有复制这些元素本身。 </span></span><br><span class="line"><span class="comment">     *</span></span><br></pre></td></tr></table></figure><h4 id="HashSet保证元素不重复"><a href="#HashSet保证元素不重复" class="headerlink" title="HashSet保证元素不重复"></a>HashSet保证元素不重复</h4><p>HashSet使用HashMap进行存放数据<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> putVal(hash(key), key, value, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>putVal方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Implements Map.put and related methods</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> hash hash for key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key the key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value the value to put</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> onlyIfAbsent if true, don't change existing value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> evict if false, the table is in creation mode.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> previous value, or null if none</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> V <span class="title">putVal</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">boolean</span> onlyIfAbsent,</span></span></span><br><span class="line"><span class="function"><span class="params">               <span class="keyword">boolean</span> evict)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="keyword">int</span> n, i;</span><br><span class="line">    <span class="keyword">if</span> ((tab = table) == <span class="keyword">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">        n = (tab = resize()).length; <span class="comment">// 重新计算一下大小</span></span><br><span class="line">    <span class="comment">// 获取要插入元素在 哈希桶中的位置</span></span><br><span class="line">    <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="keyword">null</span>) <span class="comment">// 如果这个位置没有Node</span></span><br><span class="line">        tab[i] = newNode(hash, key, value, <span class="keyword">null</span>); <span class="comment">// 直接创建一个新的Node</span></span><br><span class="line">    <span class="keyword">else</span> &#123; <span class="comment">// 说明此时在对应的索引位置已经有对象了</span></span><br><span class="line">        Node&lt;K,V&gt; e; K k;</span><br><span class="line">        <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">            ((k = p.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">            e = p; <span class="comment">// 判断原对象与插入的对象的key是否一样</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode) <span class="comment">// 如果 你定位到的元素是一个TreeNode(Node的一个子类，也是HashMap的一个内部类)</span></span><br><span class="line">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="keyword">this</span>, tab, hash, key, value); <span class="comment">// 那么就插入一TreeNode节点 定位到这个hash桶了 但是这里面是链表（没有进行过树化）</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> binCount = <span class="number">0</span>; ; ++binCount) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((e = p.next) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    p.next = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">                        treeifyBin(tab, hash);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                p = e;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123; <span class="comment">//说明原对象与插入的对象的key相同</span></span><br><span class="line">            V oldValue = e.value;</span><br><span class="line">            <span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="keyword">null</span>)</span><br><span class="line">                e.value = value; <span class="comment">//将新插入的entry的value覆盖掉原来的entry的value</span></span><br><span class="line">            afterNodeAccess(e);</span><br><span class="line">            <span class="keyword">return</span> oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ++modCount; <span class="comment">// 修改次数+1 和fastRemove()有关也和并发修改有关</span></span><br><span class="line">    <span class="keyword">if</span> (++size &gt; threshold) <span class="comment">// 如果大于了阙值 需要扩容的大小</span></span><br><span class="line">        resize(); <span class="comment">// 重新设置hash桶的大小，也有可能进行树化，见后面代码</span></span><br><span class="line">    afterNodeInsertion(evict);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;HashSet源码：&quot;&gt;&lt;a href=&quot;#HashSet源码：&quot; class=&quot;headerlink&quot; title=&quot;HashSet源码：&quot;&gt;&lt;/a&gt;HashSet源码：&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>HashMap理解笔记</title>
    <link href="http://www.songshuiyang.site/2018/06/07/Web%E5%90%8E%E5%8F%B0/Java/HashMap%E7%90%86%E8%A7%A3%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.songshuiyang.site/2018/06/07/Web后台/Java/HashMap理解笔记/</id>
    <published>2018-06-07T11:21:12.000Z</published>
    <updated>2018-07-08T07:02:02.867Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是HashMap"><a href="#什么是HashMap" class="headerlink" title="什么是HashMap"></a>什么是HashMap</h3><p>HashMap分为俩个词理解，一个是Hash，另一个是Map</p><p>Hash: 散列将一个任意长度通过某种hash函数算法转化成一个固定的值</p><p>Map：可以理解为地图点的位置</p><p>我们如果想要找到地图上的某个点，就需要通过经纬度来定位，Hash就是这个值，我们可以通过这个值，找到我们所要的位置</p><h3 id="HashMap-简介"><a href="#HashMap-简介" class="headerlink" title="HashMap 简介"></a>HashMap 简介</h3><p>HashMap 是一个散列表，它存储的内容是键值对(key-value)映射。</p><p>HashMap 继承于AbstractMap，实现了Map、Cloneable、java.io.Serializable接口。</p><p>HashMap 的实现不是同步的，这意味着它不是线程安全的。它的key、value都可以为null。此外，HashMap中的映射不是有序的。</p><p>HashMap 的实例有两个参数影响其性能：“初始容量” 和 “加载因子”。容量 是哈希表中桶的数量，初始容量 只是哈希表在创建时的容量。加载因子 是哈希表在其容量自动增加之前可以达到多满的一种尺度。当哈希表中的条目数超出了加载因子与当前容量的乘积时，则要对该哈希表进行 rehash 操作（即重建内部数据结构），从而哈希表将具有大约两倍的桶数。<br>通常，默认加载因子是 0.75, 这是在时间和空间成本上寻求一种折衷。加载因子过高虽然减少了空间开销，但同时也增加了查询成本（在大多数 HashMap 类的操作中，包括 get 和 put 操作，都反映了这一点）。在设置初始容量时应该考虑到映射中所需的条目数及其加载因子，以便最大限度地减少 rehash 操作次数。如果初始容量大于最大条目数除以加载因子，则不会发生 rehash 操作。</p><h3 id="HashMap源码笔记"><a href="#HashMap源码笔记" class="headerlink" title="HashMap源码笔记"></a>HashMap源码笔记</h3><h4 id="HashMap-常量定义"><a href="#HashMap-常量定义" class="headerlink" title="HashMap 常量定义"></a>HashMap 常量定义</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The default initial capacity - MUST be a power of two.</span></span><br><span class="line"><span class="comment"> * 默认初始容量，为16个</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // aka 16</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The maximum capacity, used if a higher value is implicitly specified</span></span><br><span class="line"><span class="comment"> * by either of the constructors with arguments.</span></span><br><span class="line"><span class="comment"> * MUST be a power of two &lt;= 1&lt;&lt;30.</span></span><br><span class="line"><span class="comment"> * 最大容量： 1073741824</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The load factor used when none specified in constructor.</span></span><br><span class="line"><span class="comment"> * 加载因子，当容量达到3/4的时候进行容量扩容, 不是满的时候再扩容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">static final float DEFAULT_LOAD_FACTOR = 0.75f;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The bin count threshold for using a tree rather than list for a</span></span><br><span class="line"><span class="comment"> * bin.  Bins are converted to trees when adding an element to a</span></span><br><span class="line"><span class="comment"> * bin with at least this many nodes. The value must be greater</span></span><br><span class="line"><span class="comment"> * than 2 and should be at least 8 to mesh with assumptions in</span></span><br><span class="line"><span class="comment"> * tree removal about conversion back to plain bins upon</span></span><br><span class="line"><span class="comment"> * shrinkage.</span></span><br><span class="line"><span class="comment"> * .由链表转换成树的阈值TREEIFY_THRESHOLD 一个桶中bin（箱子）的存储方式由链表转换成树的阈值。即当桶中bin的数量超过TREEIFY_THRESHOLD时使用树来代替链表。默认值是8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> static final int TREEIFY_THRESHOLD = 8;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The bin count threshold for untreeifying a (split) bin during a</span></span><br><span class="line"><span class="comment"> * resize operation. Should be less than TREEIFY_THRESHOLD, and at</span></span><br><span class="line"><span class="comment"> * most 6 to mesh with shrinkage detection under removal.</span></span><br><span class="line"><span class="comment"> * 当执行resize操作时，当桶中bin的数量少于UNTREEIFY_THRESHOLD时使用链表来代替树。默认值是6 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> static final int UNTREEIFY_THRESHOLD = 6;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The smallest table capacity for which bins may be treeified.</span></span><br><span class="line"><span class="comment"> * (Otherwise the table is resized if too many nodes in a bin.)</span></span><br><span class="line"><span class="comment"> * Should be at least 4 * TREEIFY_THRESHOLD to avoid conflicts</span></span><br><span class="line"><span class="comment"> * between resizing and treeification thresholds.</span></span><br><span class="line"><span class="comment"> * 当桶中的bin被树化时最小的hash表容量。（如果没有达到这个阈值，即hash表容量小于MIN_TREEIFY_CAPACITY，当桶中bin的数量太多时会执行resize扩容操作）这个MIN_TREEIFY_CAPACITY的值至少是TREEIFY_THRESHOLD的4倍。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">static final int MIN_TREEIFY_CAPACITY = 64;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是HashMap&quot;&gt;&lt;a href=&quot;#什么是HashMap&quot; class=&quot;headerlink&quot; title=&quot;什么是HashMap&quot;&gt;&lt;/a&gt;什么是HashMap&lt;/h3&gt;&lt;p&gt;HashMap分为俩个词理解，一个是Hash，另一个是Map&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 笔记</title>
    <link href="http://www.songshuiyang.site/2018/06/05/Web%E5%90%8E%E5%8F%B0/centos/Nginx%20%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.songshuiyang.site/2018/06/05/Web后台/centos/Nginx 笔记/</id>
    <published>2018-06-05T13:48:12.000Z</published>
    <updated>2018-06-06T13:06:57.964Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-为什么使用Nginx"><a href="#一-为什么使用Nginx" class="headerlink" title="一. 为什么使用Nginx"></a>一. 为什么使用Nginx</h3><p>Nginx 是一个高性能的 Web 和反向代理服务器, 它具有有很多非常优越的特性:</p><ol><li><p>作为 Web 服务器：相比 Apache，Nginx 使用更少的资源，支持更多的并发连接，体现更高的效率，这点使 Nginx 尤其受到虚拟主机提供商的欢迎。能够支持高达 50,000 个并发连接数的响应，感谢 Nginx 为我们选择了 epoll and kqueue 作为开发模型.</p></li><li><p>作为负载均衡服务器：Nginx 既可以在内部直接支持 Rails 和 PHP，也可以支持作为 HTTP代理服务器 对外进行服务。Nginx 用 C 编写, 不论是系统资源开销还是 CPU 使用效率都比 Perlbal 要好的多。</p></li><li><p>作为邮件代理服务器: Nginx 同时也是一个非常优秀的邮件代理服务器（最早开发这个产品的目的之一也是作为邮件代理服务器），Last.fm 描述了成功并且美妙的使用经验。</p></li><li><p>Nginx 安装非常的简单，配置文件 非常简洁（还能够支持perl语法），Bugs非常少的服务器: Nginx 启动特别容易，并且几乎可以做到7*24不间断运行，即使运行数个月也不需要重新启动。你还能够在 不间断服务的情况下进行软件版本的升级。<br>基础功能</p></li></ol><h3 id="二-基础功能"><a href="#二-基础功能" class="headerlink" title="二. 基础功能"></a>二. 基础功能</h3><ol><li><p>处理静态文件，索引文件以及自动索引；</p></li><li><p>反向代理加速(无缓存)，简单的负载均衡和容错；</p></li><li><p>FastCGI，简单的负载均衡和容错；</p></li><li><p>模块化的结构。过滤器包括gzipping, byte ranges, chunked responses, 以及 SSI-filter 。在SSI过滤器中，到同一个 proxy 或者 FastCGI 的多个子请求并发处理；<br>SSL 和 TLS SNI 支持；</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一-为什么使用Nginx&quot;&gt;&lt;a href=&quot;#一-为什么使用Nginx&quot; class=&quot;headerlink&quot; title=&quot;一. 为什么使用Nginx&quot;&gt;&lt;/a&gt;一. 为什么使用Nginx&lt;/h3&gt;&lt;p&gt;Nginx 是一个高性能的 Web 和反向代理服务器, 
      
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="nginx" scheme="http://www.songshuiyang.site/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建 Nginx 服务</title>
    <link href="http://www.songshuiyang.site/2018/06/05/Web%E5%90%8E%E5%8F%B0/centos/%E5%9F%BA%E4%BA%8E%20CentOS%20%E6%90%AD%E5%BB%BA%20Nginx%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.songshuiyang.site/2018/06/05/Web后台/centos/基于 CentOS 搭建 Nginx服务/</id>
    <published>2018-06-05T13:48:12.000Z</published>
    <updated>2018-06-06T13:06:57.969Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装使用Nginx"><a href="#1-安装使用Nginx" class="headerlink" title="1.安装使用Nginx"></a>1.安装使用Nginx</h3><h4 id="1-1-yum安装"><a href="#1-1-yum安装" class="headerlink" title="1.1 yum安装"></a>1.1 yum安装</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> nginx</span><br></pre></td></tr></table></figure><h4 id="1-2-提供目录权限"><a href="#1-2-提供目录权限" class="headerlink" title="1.2 提供目录权限"></a>1.2 提供目录权限</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">提供目录权限:</span><br><span class="line">　　我需要访问的目录是 /var/ftp, 用户是root, 所以修改如下配置:</span><br><span class="line">[root@S205 conf.d]# cat /etc/nginx/nginx.conf |grep user</span><br><span class="line">user root;</span><br><span class="line"></span><br><span class="line">否则会出现这样的错误:</span><br><span class="line">[root@S205 conf.d]# tail /var/log/nginx/error.log </span><br><span class="line">2017/10/13 16:51:09 [error] 13383#0: *1 open() "/home/data" failed (13: Permission denied), client: 192.168.50.20, server: _, request: "GET /data HTTP/1.1", host: "192.168.10.205:8080"</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-Nginx-命令"><a href="#2-Nginx-命令" class="headerlink" title="2.Nginx 命令"></a>2.Nginx 命令</h3><h4 id="2-1-启动重启"><a href="#2-1-启动重启" class="headerlink" title="2.1 启动重启"></a>2.1 启动重启</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@S205 conf.d]# systemctl enable nginx</span><br><span class="line"></span><br><span class="line">[root@S205 conf.d]# systemctl restart nginx</span><br><span class="line"></span><br><span class="line">[root@S205 conf.d]# vi /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h4 id="2-2"><a href="#2-2" class="headerlink" title="2.2"></a>2.2</h4><h3 id="3-Nginx-启用对文件目录的http访问"><a href="#3-Nginx-启用对文件目录的http访问" class="headerlink" title="3.Nginx 启用对文件目录的http访问"></a>3.Nginx 启用对文件目录的http访问</h3><p>解决以ftp路径形式的图片，在谷歌浏览器上不能正常访问的问题，所以使用http的形式访问文件</p><h4 id="3-1-配置如下："><a href="#3-1-配置如下：" class="headerlink" title="3.1 配置如下："></a>3.1 配置如下：</h4><p>采用： <a href="http://ip/uploadfile/文件路径的形式访问" target="_blank" rel="noopener">http://ip/uploadfile/文件路径的形式访问</a> 或者 直接 <a href="http://ip/文件路径的形式访问" target="_blank" rel="noopener">http://ip/文件路径的形式访问</a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80 default_server;</span><br><span class="line">    listen       [::]:80 default_server;</span><br><span class="line">    server_name  _;</span><br><span class="line">    root        /var/ftp/pub;</span><br><span class="line"></span><br><span class="line">    # Load configuration files for the default server block.</span><br><span class="line">    include /etc/nginx/default.d<span class="comment">/*.conf;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    location / &#123;</span></span><br><span class="line"><span class="comment">      autoindex on;</span></span><br><span class="line"><span class="comment">      autoindex_localtime on;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    location /uploadfile &#123;</span></span><br><span class="line"><span class="comment">       alias /var/ftp/pub;</span></span><br><span class="line"><span class="comment">       autoindex on;</span></span><br><span class="line"><span class="comment">       autoindex_localtime on;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    error_page 404 /404.html;</span></span><br><span class="line"><span class="comment">        location = /40x.html &#123;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    error_page 500 502 503 504 /50x.html;</span></span><br><span class="line"><span class="comment">        location = /50x.html &#123;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure></p><h4 id="3-2-autoindex-和-autoindex-localtime-生成目录索引"><a href="#3-2-autoindex-和-autoindex-localtime-生成目录索引" class="headerlink" title="3.2 autoindex 和 autoindex_localtime 生成目录索引"></a>3.2 autoindex 和 autoindex_localtime 生成目录索引</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">autoindex  on;                        #自动显示目录</span><br><span class="line">autoindex_exact_size  off;            #改为off后，显示出文件的大概大小，单位是kB或者MB或者GB；即人性化方式显示文件大小否则以byte显示</span><br><span class="line">autoindex_localtime on;               #显示的文件时间为文件的服务器时间；即按服务器时间显示</span><br><span class="line">limit_rate_after 10m;                 #10m之后下载速度为10k</span><br></pre></td></tr></table></figure><p>参考:<a href="http://blog.licess.com/nginx-autoindex/" target="_blank" rel="noopener">http://blog.licess.com/nginx-autoindex/</a></p><h4 id="3-2-解决目录列表文件名乱码问题"><a href="#3-2-解决目录列表文件名乱码问题" class="headerlink" title="3.2 解决目录列表文件名乱码问题"></a>3.2 解决目录列表文件名乱码问题</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/nginx/nginx.conf </span><br><span class="line"></span><br><span class="line">加上 charset utf-8,gbk即可解决;</span><br><span class="line"></span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">                      '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    #gzip  on;</span><br><span class="line">    include /etc/nginx/conf.d<span class="comment">/*.conf;</span></span><br><span class="line"><span class="comment">    autoindex on;</span></span><br><span class="line"><span class="comment">    autoindex_exact_size off;</span></span><br><span class="line"><span class="comment">    autoindex_localtime on;</span></span><br><span class="line"><span class="comment">    charset utf-8,gbk;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4-Nginx-配置反向代理"><a href="#4-Nginx-配置反向代理" class="headerlink" title="4.Nginx 配置反向代理"></a>4.Nginx 配置反向代理</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#error_log /usr/local/etcinx/logs/error.log  warn;</span><br><span class="line">#pid        logsinx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">    #                  '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">    #                  '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    </span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    gzip  on;</span><br><span class="line">    gzip_min_length     1k;</span><br><span class="line">    gzip_comp_level     3;</span><br><span class="line">    gzip_buffers     4 16k;</span><br><span class="line">    gzip_vary on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost 192.168.0.252 songshuiyang.com;</span><br><span class="line">        </span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass   http://127.0.0.1:4080;</span><br><span class="line">            proxy_set_header  Host $http_host;</span><br><span class="line">            proxy_set_header  X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    client_max_body_size 100m;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /uploadfile &#123;</span><br><span class="line">           alias /var/ftp/pub ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /webapp &#123;</span><br><span class="line">proxy_pass   http://127.0.0.1:8068;</span><br><span class="line">proxy_set_header  Host $http_host;</span><br><span class="line">            proxy_set_header  X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /admin-webapp &#123;</span><br><span class="line">            alias html/test-admin-webapp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">location = /favicon.ico &#123;</span><br><span class="line">alias /var/ftp/pub/favicon.ico;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#  include servers/*;</span><br></pre></td></tr></table></figure><h3 id="5-Nginx-简单的负载均衡的示例"><a href="#5-Nginx-简单的负载均衡的示例" class="headerlink" title="5.Nginx 简单的负载均衡的示例"></a>5.Nginx 简单的负载均衡的示例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">  upstream myproject &#123;</span><br><span class="line">  server 127.0.0.1:8000 weight=3;</span><br><span class="line">  server 127.0.0.1:8001;</span><br><span class="line">  server 127.0.0.1:8002;</span><br><span class="line">  server 127.0.0.1:8003;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name www.domain.com;</span><br><span class="line">  location / &#123;</span><br><span class="line">   proxy_pass http://myproject;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本文参考： <a href="http://www.bubuko.com/infodetail-2349571.html" target="_blank" rel="noopener">http://www.bubuko.com/infodetail-2349571.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-安装使用Nginx&quot;&gt;&lt;a href=&quot;#1-安装使用Nginx&quot; class=&quot;headerlink&quot; title=&quot;1.安装使用Nginx&quot;&gt;&lt;/a&gt;1.安装使用Nginx&lt;/h3&gt;&lt;h4 id=&quot;1-1-yum安装&quot;&gt;&lt;a href=&quot;#1-1-yum安装&quot; class=&quot;headerlink&quot; title=&quot;1.1 yum安装&quot;&gt;&lt;/a&gt;1.1 yum安装&lt;/h4&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;1-2-提供目录权限&quot;&gt;&lt;a href=&quot;#1-2-提供目录权限&quot; class=&quot;headerlink&quot; title=&quot;1.2 提供目录权限&quot;&gt;&lt;/a&gt;1.2 提供目录权限&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;提供目录权限:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　我需要访问的目录是 /var/ftp, 用户是root, 所以修改如下配置:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@S205 conf.d]# cat /etc/nginx/nginx.conf |grep user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user root;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;否则会出现这样的错误:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@S205 conf.d]# tail /var/log/nginx/error.log &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2017/10/13 16:51:09 [error] 13383#0: *1 open() &quot;/home/data&quot; failed (13: Permission denied), client: 192.168.50.20, server: _, request: &quot;GET /data HTTP/1.1&quot;, host: &quot;192.168.10.205:8080&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="nginx" scheme="http://www.songshuiyang.site/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建 FTP 文件服务</title>
    <link href="http://www.songshuiyang.site/2018/06/05/Web%E5%90%8E%E5%8F%B0/centos/%E5%9F%BA%E4%BA%8E%20CentOS%20%E6%90%AD%E5%BB%BA%20FTP%20%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.songshuiyang.site/2018/06/05/Web后台/centos/基于 CentOS 搭建 FTP 文件服务/</id>
    <published>2018-06-05T12:48:12.000Z</published>
    <updated>2018-06-06T13:06:57.967Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装并启动-FTP-服务"><a href="#1-安装并启动-FTP-服务" class="headerlink" title="1.安装并启动 FTP 服务"></a>1.安装并启动 FTP 服务</h3><h4 id="1-1-使用-yum-安装-vsftpd"><a href="#1-1-使用-yum-安装-vsftpd" class="headerlink" title="1.1 使用 yum 安装 vsftpd"></a>1.1 使用 yum 安装 vsftpd</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># yum默认都是安装最新版的软件</span><br><span class="line">yum <span class="keyword">install</span> -y vsftpd</span><br></pre></td></tr></table></figure><h4 id="1-2-启动-vsftpd"><a href="#1-2-启动-vsftpd" class="headerlink" title="1.2 启动 vsftpd"></a>1.2 启动 vsftpd</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">安装完成后，启动 FTP 服务：</span><br><span class="line">service vsftpd <span class="keyword">start</span></span><br><span class="line"></span><br><span class="line">启动后，可以看到系统已经监听了 <span class="number">21</span> 端口：</span><br><span class="line">netstat -nltp | grep <span class="number">21</span></span><br><span class="line"></span><br><span class="line">此时，访问 <span class="keyword">ftp</span>://主机ip 可浏览机器上的 /<span class="keyword">var</span>/<span class="keyword">ftp</span>目录了。</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-配置-FTP-权限"><a href="#2-配置-FTP-权限" class="headerlink" title="2.配置 FTP 权限"></a>2.配置 FTP 权限</h3><h4 id="2-1-了解-VSFTP-配置"><a href="#2-1-了解-VSFTP-配置" class="headerlink" title="2.1 了解 VSFTP 配置"></a>2.1 了解 VSFTP 配置</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vsftpd 的配置目录为 /etc/vsftpd，包含下列的配置文件：</span><br><span class="line"></span><br><span class="line">vsftpd.conf 为主要配置文件</span><br><span class="line">ftpusers 配置禁止访问 FTP 服务器的用户列表</span><br><span class="line">user_list 配置用户访问控制</span><br></pre></td></tr></table></figure><h4 id="2-1-创建-FTP-用户"><a href="#2-1-创建-FTP-用户" class="headerlink" title="2.1 创建 FTP 用户"></a>2.1 创建 FTP 用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建一个用户 ftpuser</span><br><span class="line">useradd ftpuser</span><br><span class="line">为用户 ftpuser 设置密码</span><br><span class="line">echo "password" | passwd ftpuser <span class="comment">--stdin</span></span><br></pre></td></tr></table></figure><h4 id="2-2-限制该用户仅能通过-FTP-访问"><a href="#2-2-限制该用户仅能通过-FTP-访问" class="headerlink" title="2.2 限制该用户仅能通过 FTP 访问"></a>2.2 限制该用户仅能通过 FTP 访问</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">限制用户 ftpuser只能通过 FTP 访问服务器，而不能直接登录服务器：</span><br><span class="line">usermod -s /sbin/nologin ftpuser</span><br></pre></td></tr></table></figure><p> 命令笔记:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">用于修改用户的基本信息。usermod命令不允许你改变正在线上的使用者帐号名称。当usermod命令用来改变user id，必须确认这名user没在电脑上执行任何程序。你需手动更改使用者的crontab档。也需手动更改使用者的at工作档。采用NIS server须在server上更动相关的NIS设定。</span><br><span class="line">-c&lt;备注&gt;：修改用户帐号的备注文字；</span><br><span class="line">-d&lt;登入目录&gt;：修改用户登入时的目录；</span><br><span class="line">-e&lt;有效期限&gt;：修改帐号的有效期限；</span><br><span class="line">-f&lt;缓冲天数&gt;：修改在密码过期后多少天即关闭该帐号；</span><br><span class="line">-g&lt;群组&gt;：修改用户所属的群组；</span><br><span class="line">-G&lt;群组&gt;；修改用户所属的附加群组；</span><br><span class="line">-l&lt;帐号名称&gt;：修改用户帐号名称；</span><br><span class="line">-L：锁定用户密码，使密码无效；</span><br><span class="line">-s&lt;shell&gt;：修改用户登入后所使用的shell；</span><br><span class="line">-u&lt;uid&gt;：修改用户ID；</span><br><span class="line">-U:解除密码锁定。</span><br></pre></td></tr></table></figure></p><h4 id="2-3-创建登录欢迎文件"><a href="#2-3-创建登录欢迎文件" class="headerlink" title="2.3 创建登录欢迎文件"></a>2.3 创建登录欢迎文件</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "Welcome to <span class="keyword">use</span> <span class="keyword">FTP</span> service.<span class="string">" &gt; /var/ftp/welcome.txt</span></span><br></pre></td></tr></table></figure><h4 id="2-4-配置权限"><a href="#2-4-配置权限" class="headerlink" title="2.4 配置权限"></a>2.4 配置权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">设置访问权限</span><br><span class="line">chmod a-w /var/ftp &amp;&amp; chmod 777 -R /var/ftp/pub</span><br><span class="line"></span><br><span class="line">设置为用户的主目录：</span><br><span class="line">usermod -d /var/ftp ftpuser</span><br></pre></td></tr></table></figure><p>命令笔记:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">权限范围的表示法如下：</span><br><span class="line">u User，即文件或目录的拥有者；</span><br><span class="line">g Group，即文件或目录的所属群组；</span><br><span class="line">o Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；</span><br><span class="line">a All，即全部的用户，包含拥有者，所属群组以及其他用户；</span><br><span class="line">r 读取权限，数字代号为“4”;</span><br><span class="line">w 写入权限，数字代号为“2”；</span><br><span class="line">x 执行或切换权限，数字代号为“1”；</span><br><span class="line">- 不具任何权限，数字代号为“0”；</span><br><span class="line">s 特殊功能说明：变更文件或目录的权限。</span><br><span class="line"></span><br><span class="line">-c或——changes：效果类似“-v”参数，但仅回报更改的部分；</span><br><span class="line">-f或<span class="comment">--quiet或——silent：不显示错误信息；</span></span><br><span class="line">-R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；</span><br><span class="line">-v或——verbose：显示指令执行过程；</span><br><span class="line"><span class="comment">--reference=&lt;参考文件或目录&gt;：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；</span></span><br><span class="line">&lt;权限范围&gt;+&lt;权限设置&gt;：开启权限范围的文件或目录的该选项权限设置；</span><br><span class="line">&lt;权限范围&gt;-&lt;权限设置&gt;：关闭权限范围的文件或目录的该选项权限设置；</span><br><span class="line">&lt;权限范围&gt;=&lt;权限设置&gt;：指定权限范围的文件或目录的该选项权限设置；</span><br><span class="line"></span><br><span class="line">Linux用 户分为：拥有者、组群(Group)、其他（other），Linux系统中，预设的情況下，系统中所有的帐号与一般身份使用者，以及root的相关信 息， 都是记录在/etc/passwd文件中。每个人的密码则是记录在/etc/shadow文件下。 此外，所有的组群名称记录在/etc/group內！</span><br><span class="line"></span><br><span class="line">例：rwx　rw-　r<span class="comment">--</span></span><br><span class="line"></span><br><span class="line">r=读取属性　　//值＝4</span><br><span class="line">w=写入属性　　//值＝2</span><br><span class="line">x=执行属性　　//值＝1</span><br><span class="line"></span><br><span class="line">chmod u+x,g+w f01　　//为文件f01设置自己可以执行，组员可以写入的权限</span><br><span class="line">chmod u=rwx,g=rw,o=r f01</span><br><span class="line">chmod 764 f01</span><br><span class="line">chmod a+x f01　　//对文件f01的u,g,o都设置可执行属性</span><br><span class="line">文件的属主和属组属性设置</span><br><span class="line"></span><br><span class="line">chown user:market f01　　//把文件f01给uesr，添加到market组</span><br><span class="line">ll -d f1  查看目录f1的属性</span><br></pre></td></tr></table></figure></p><h4 id="2-5-备注"><a href="#2-5-备注" class="headerlink" title="2.5 备注"></a>2.5 备注</h4><p>一： 以上配置是匿名用户可以通过ftp://主机ip 即可访问文件，但不能上传文件，所以需要添加一个<code>ftpuser</code>用户ftp上传操作，这样做有俩个好处</p><ol><li>访问文件可以通过一个ftp绝对路径访问(也可以通过nginx代理通过http的形式访问)，不需要输入用户名及密码</li><li>上传修改文件只能通过该(ftpuser)用户才能进行操作，保证了其安全性</li></ol><p>二： 阻止匿名访问和切换根目录<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">匿名访问和切换根目录都会给服务器带来安全风险，我们把这两个功能关闭。</span><br><span class="line">编辑 /etc/vsftpd/vsftpd.conf，找到下面两处配置并修改：</span><br><span class="line">vi /etc/vsftpd/vsftpd.conf</span><br><span class="line"> </span><br><span class="line"># 禁用匿名用户  12 YES 改为NO</span><br><span class="line">anonymous_enable=NO</span><br><span class="line"></span><br><span class="line"># 禁止切换根目录 101 行 删除#</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">编辑完成后保存配置，重新启动 FTP 服务</span><br><span class="line">service vsftpd restart</span><br></pre></td></tr></table></figure></p><p>本文参考： <a href="https://www.baidu.com/link?url=3FcSvP44zFbo33EoJBucNlE1ZKKkncTuckfxuvNFJhCPvQuZmlebtZRzRAW3-W0SH8Ep8dShtJ8NSjWlozkrPa&amp;wd=&amp;eqid=edc2684700001d70000000065b17479b" target="_blank" rel="noopener">https://www.baidu.com/link?url=3FcSvP44zFbo33EoJBucNlE1ZKKkncTuckfxuvNFJhCPvQuZmlebtZRzRAW3-W0SH8Ep8dShtJ8NSjWlozkrPa&amp;wd=&amp;eqid=edc2684700001d70000000065b17479b</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-安装并启动-FTP-服务&quot;&gt;&lt;a href=&quot;#1-安装并启动-FTP-服务&quot; class=&quot;headerlink&quot; title=&quot;1.安装并启动 FTP 服务&quot;&gt;&lt;/a&gt;1.安装并启动 FTP 服务&lt;/h3&gt;&lt;h4 id=&quot;1-1-使用-yum-安装-vsftpd&quot;&gt;&lt;a href=&quot;#1-1-使用-yum-安装-vsftpd&quot; class=&quot;headerlink&quot; title=&quot;1.1 使用 yum 安装 vsftpd&quot;&gt;&lt;/a&gt;1.1 使用 yum 安装 vsftpd&lt;/h4&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# yum默认都是安装最新版的软件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -y vsftpd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;1-2-启动-vsftpd&quot;&gt;&lt;a href=&quot;#1-2-启动-vsftpd&quot; class=&quot;headerlink&quot; title=&quot;1.2 启动 vsftpd&quot;&gt;&lt;/a&gt;1.2 启动 vsftpd&lt;/h4&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;安装完成后，启动 FTP 服务：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;service vsftpd &lt;span class=&quot;keyword&quot;&gt;start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;启动后，可以看到系统已经监听了 &lt;span class=&quot;number&quot;&gt;21&lt;/span&gt; 端口：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;netstat -nltp | grep &lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;此时，访问 &lt;span class=&quot;keyword&quot;&gt;ftp&lt;/span&gt;://主机ip 可浏览机器上的 /&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;ftp&lt;/span&gt;目录了。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="ftp" scheme="http://www.songshuiyang.site/tags/ftp/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建 FTP 文件服务</title>
    <link href="http://www.songshuiyang.site/2018/06/05/Web%E5%90%8E%E5%8F%B0/centos/%E5%9F%BA%E4%BA%8E%20CentOS%20%E6%90%AD%E5%BB%BA%20Jenkins%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.songshuiyang.site/2018/06/05/Web后台/centos/基于 CentOS 搭建 Jenkins服务/</id>
    <published>2018-06-05T12:48:12.000Z</published>
    <updated>2018-07-08T07:02:02.890Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装jenkins"><a href="#1-安装jenkins" class="headerlink" title="1.安装jenkins"></a>1.安装jenkins</h3><h4 id="1-1-拉取库的配置到本地对应文件"><a href="#1-1-拉取库的配置到本地对应文件" class="headerlink" title="1.1 拉取库的配置到本地对应文件"></a>1.1 拉取库的配置到本地对应文件</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo</span><br><span class="line"></span><br><span class="line">jenkins.repo内容是这样：</span><br><span class="line"></span><br><span class="line">[jenkins]</span><br><span class="line">name=Jenkins-stable</span><br><span class="line">baseurl=http://pkg.jenkins.io/redhat-stable</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure><h4 id="1-2-导入公钥"><a href="#1-2-导入公钥" class="headerlink" title="1.2 导入公钥"></a>1.2 导入公钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key</span><br></pre></td></tr></table></figure><h4 id="1-3-安装jenkins"><a href="#1-3-安装jenkins" class="headerlink" title="1.3 安装jenkins"></a>1.3 安装jenkins</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装jenkins＃`-y`参数：回答全部问题为是</span><br><span class="line">sudo yum -y <span class="keyword">install</span> jenkins</span><br></pre></td></tr></table></figure><h3 id="2-配置jenkins"><a href="#2-配置jenkins" class="headerlink" title="2.配置jenkins"></a>2.配置jenkins</h3><h4 id="2-1-配置端口"><a href="#2-1-配置端口" class="headerlink" title="2.1 配置端口"></a>2.1 配置端口</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/jenkins</span><br><span class="line"></span><br><span class="line">JENKINS_PORT="8080"</span><br></pre></td></tr></table></figure><h3 id="3-启动jenkins"><a href="#3-启动jenkins" class="headerlink" title="3.启动jenkins"></a>3.启动jenkins</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service jenkins <span class="keyword">start</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装jenkins&quot;&gt;&lt;a href=&quot;#1-安装jenkins&quot; class=&quot;headerlink&quot; title=&quot;1.安装jenkins&quot;&gt;&lt;/a&gt;1.安装jenkins&lt;/h3&gt;&lt;h4 id=&quot;1-1-拉取库的配置到本地对应文件&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="ftp" scheme="http://www.songshuiyang.site/tags/ftp/"/>
    
  </entry>
  
  <entry>
    <title>Shiro记事</title>
    <link href="http://www.songshuiyang.site/2018/06/05/Web%E5%90%8E%E5%8F%B0/Shiro/Shiro%E8%AE%B0%E4%BA%8B/"/>
    <id>http://www.songshuiyang.site/2018/06/05/Web后台/Shiro/Shiro记事/</id>
    <published>2018-06-05T12:48:12.000Z</published>
    <updated>2018-06-06T13:06:57.950Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Shiro内置了默认的拦截器"><a href="#Shiro内置了默认的拦截器" class="headerlink" title="Shiro内置了默认的拦截器"></a>Shiro内置了默认的拦截器</h3><h3 id="配置Shiro使得多个角色可以访问同一URL"><a href="#配置Shiro使得多个角色可以访问同一URL" class="headerlink" title="配置Shiro使得多个角色可以访问同一URL"></a>配置Shiro使得多个角色可以访问同一URL</h3><p>在Shiro配置中，如果对某一URL作如下配置：</p><p><code>/a.jsp = roles[&quot;role1, role2&quot;]</code></p><p>其效果等效于hasAllRoles，即要求所有角色都满足才可访问。</p><p>但在实际中，可能只需满足任一角色即可访问。在这种情况下，需要自己重载RolesAuthorizationFilter的isAccessAllowed，实现或的关系。具体实现如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.shiro.subject.Subject;</span><br><span class="line">import org.apache.shiro.web.filter.authz.RolesAuthorizationFilter;</span><br><span class="line">import javax.servlet.ServletRequest;</span><br><span class="line">import javax.servlet.ServletResponse;</span><br><span class="line"></span><br><span class="line">public class AnyOfRolesAuthorizationFilter extends RolesAuthorizationFilter &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public boolean isAccessAllowed(ServletRequest request, ServletResponse response,</span><br><span class="line">                                   Object mappedValue) throws IOException &#123;</span><br><span class="line">        final Subject subject = getSubject(request, response);</span><br><span class="line">        final String[] rolesArray = (String[]) mappedValue;</span><br><span class="line">        if (rolesArray == null || rolesArray.length == 0) &#123;</span><br><span class="line"></span><br><span class="line">            //no roles specified, so nothing to check - allow access.</span><br><span class="line"></span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        for (String roleName : rolesArray) &#123;</span><br><span class="line"></span><br><span class="line">            if (subject.hasRole(roleName)) &#123;</span><br><span class="line"></span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>相应地，在INI文件中作如下配置：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[main]</span><br><span class="line">...</span><br><span class="line">anyofroles = com.your.package.AnyOfRolesAuthorizationFilter</span><br><span class="line">[urls]</span><br><span class="line">...</span><br><span class="line">/path/to/some/url = anyofroles["role1,role2"]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Shiro内置了默认的拦截器&quot;&gt;&lt;a href=&quot;#Shiro内置了默认的拦截器&quot; class=&quot;headerlink&quot; title=&quot;Shiro内置了默认的拦截器&quot;&gt;&lt;/a&gt;Shiro内置了默认的拦截器&lt;/h3&gt;&lt;h3 id=&quot;配置Shiro使得多个角色可以访问
      
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="shiro" scheme="http://www.songshuiyang.site/tags/shiro/"/>
    
  </entry>
  
  <entry>
    <title>使用微软提供的Office Online实现Office文档的在线查看,编辑等功能</title>
    <link href="http://www.songshuiyang.site/2018/05/08/Web%E5%90%8E%E5%8F%B0/%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/%E4%BD%BF%E7%94%A8%E5%BE%AE%E8%BD%AF%E6%8F%90%E4%BE%9B%E7%9A%84Office%20Online%E5%AE%9E%E7%8E%B0Office%E6%96%87%E6%A1%A3%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%9F%A5%E7%9C%8B,%E7%BC%96%E8%BE%91%E7%AD%89%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.songshuiyang.site/2018/05/08/Web后台/相关技术/使用微软提供的Office Online实现Office文档的在线查看,编辑等功能/</id>
    <published>2018-05-08T12:54:12.000Z</published>
    <updated>2018-05-08T15:07:08.195Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用微软提供的Office-Online实现Office文档的在线查看-编辑"><a href="#使用微软提供的Office-Online实现Office文档的在线查看-编辑" class="headerlink" title="使用微软提供的Office Online实现Office文档的在线查看,编辑"></a>使用微软提供的Office Online实现Office文档的在线查看,编辑</h3><p>使用微软提供的Office Online平台只需要一个网址即可在线查看Xls,doc,PPT等文档</p><h4 id="在线预览"><a href="#在线预览" class="headerlink" title="在线预览"></a>在线预览</h4><p><a href="http://view.officeapps.live.com/op/view.aspx?src=要查看的文档地址" target="_blank" rel="noopener">http://view.officeapps.live.com/op/view.aspx?src=要查看的文档地址</a></p><h4 id="在线编辑"><a href="#在线编辑" class="headerlink" title="在线编辑"></a>在线编辑</h4><p>在线编辑需要登录<a href="https://www.office.com并从onedrive中打开或新建文档也可以来自在线模板(下面的Excel来自Excel" target="_blank" rel="noopener">https://www.office.com并从onedrive中打开或新建文档也可以来自在线模板(下面的Excel来自Excel</a> Online模板，编辑后的文件会保存到你的onedrive中)<br>在线编辑Xls文档(部分功能不支持,但已经够用)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用微软提供的Office-Online实现Office文档的在线查看-编辑&quot;&gt;&lt;a href=&quot;#使用微软提供的Office-Online实现Office文档的在线查看-编辑&quot; class=&quot;headerlink&quot; title=&quot;使用微软提供的Office On
      
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>freemaker模板框架</title>
    <link href="http://www.songshuiyang.site/2018/04/14/Web%E5%90%8E%E5%8F%B0/%E6%A8%A1%E6%9D%BF%E6%A1%86%E6%9E%B6/freemaker%E6%A8%A1%E6%9D%BF%E6%A1%86%E6%9E%B6/"/>
    <id>http://www.songshuiyang.site/2018/04/14/Web后台/模板框架/freemaker模板框架/</id>
    <published>2018-04-14T15:35:12.000Z</published>
    <updated>2018-04-14T15:46:52.508Z</updated>
    
    <content type="html"><![CDATA[<h3 id="freemaker-语法笔记"><a href="#freemaker-语法笔记" class="headerlink" title="freemaker 语法笔记"></a>freemaker 语法笔记</h3><ul><li><p>if 条件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#if</span> <span class="attr">entity.columnName</span> == <span class="string">'id'</span> &gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">#elseif</span> <span class="attr">entity.columnName</span> == <span class="string">'id'</span> &gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">#else</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">#if</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>list 遍历元素</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">1. 遍历</span><br><span class="line">要想在Freemarker中遍历list,必须通过使用list指令,即<span class="tag">&lt;<span class="name">#list</span> <span class="attr">sequence</span> <span class="attr">as</span> <span class="attr">item</span>&gt;</span>…<span class="tag">&lt;/<span class="name">#list</span>&gt;</span></span><br><span class="line">sequence是集合(collection)的表达式，item是循环变量的名字，不能是表达式。</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">#list</span> <span class="attr">userList</span> <span class="attr">as</span> <span class="attr">user</span>&gt;</span></span><br><span class="line">  …</span><br><span class="line"><span class="tag">&lt;/<span class="name">#list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">List指令还隐含了两个循环变量：</span><br><span class="line">    item_index:当前迭代项在所有迭代项中的位置，是数字值。</span><br><span class="line">    item_has_next:用于判断当前迭代项是否是所有迭代项中的最后一项。</span><br><span class="line">    注意：在使用上述两个循环变量时，一定要将item换成你自己定义的循环变量名,item其实就是前缀罢了。</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">#--Freemarker遍历list并应用list隐含变量item_index--</span>&gt;</span></span><br><span class="line">        item_index使用：</span><br><span class="line">        <span class="tag">&lt;<span class="name">#list</span> <span class="attr">userList</span> <span class="attr">as</span> <span class="attr">user</span>&gt;</span></span><br><span class="line">        第$&#123;user_index+1&#125;个用户</span><br><span class="line">          用户名：$&#123;user.userName&#125;</span><br><span class="line">          密  码：$&#123;user.userPassword&#125;</span><br><span class="line">          年  龄: $&#123;user.age&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">#list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">#--Freemarker遍历list并应用list隐含变量item_has_next--</span>&gt;</span></span><br><span class="line">        item_has_next,size使用：</span><br><span class="line">        <span class="tag">&lt;<span class="name">#list</span> <span class="attr">userList</span> <span class="attr">as</span> <span class="attr">user</span>&gt;</span></span><br><span class="line">          用户名：$&#123;user.userName&#125;</span><br><span class="line">          密  码：$&#123;user.userPassword&#125;</span><br><span class="line">          年  龄: $&#123;user.age&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">#if</span> !<span class="attr">user_has_next</span>&gt;</span></span><br><span class="line">          共有$&#123;userList?size&#125;最后一个用户是:$&#123;user.userName&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">#if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">#list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">2. 排序</span><br><span class="line"></span><br><span class="line">sort升序排序函数</span><br><span class="line">    sort对序列(sequence)进行排序，要求序列中的变量必须是：字符串（按首字母排序）,数字，日期值。</span><br><span class="line">    <span class="tag">&lt;<span class="name">#list</span> <span class="attr">list</span>?<span class="attr">sort</span> <span class="attr">as</span> <span class="attr">l</span>&gt;</span>…<span class="tag">&lt;/<span class="name">#list</span>&gt;</span></span><br><span class="line">sort_by函数</span><br><span class="line">    sort_by有一个参数,该参数用于指定想要排序的子变量，排序是按照变量对应的值进行排序,如：</span><br><span class="line">    <span class="tag">&lt;<span class="name">#list</span> <span class="attr">userList</span>?<span class="attr">sort_by</span>(“<span class="attr">age</span>”) <span class="attr">as</span> <span class="attr">user</span>&gt;</span>…<span class="tag">&lt;/<span class="name">#list</span>&gt;</span></span><br><span class="line">    age是User对象的属性，排序是按age的值进行的。</span><br><span class="line">reverse降序排序函数</span><br><span class="line">    <span class="tag">&lt;<span class="name">#list</span> <span class="attr">list</span>? <span class="attr">reverse</span> <span class="attr">as</span> <span class="attr">l</span>&gt;</span>…<span class="tag">&lt;/<span class="name">#list</span>&gt;</span>。reverse使用同sort相同。reverse还可以同sort_by一起使用</span><br><span class="line">    如：想让用户按年龄降序排序，那么可以这个样写<span class="tag">&lt;<span class="name">#list</span> <span class="attr">userList</span>?<span class="attr">sort_by</span>(“<span class="attr">age</span>”)?<span class="attr">reverse</span> <span class="attr">as</span> <span class="attr">user</span>&gt;</span>…<span class="tag">&lt;/<span class="name">#list</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;freemaker-语法笔记&quot;&gt;&lt;a href=&quot;#freemaker-语法笔记&quot; class=&quot;headerlink&quot; title=&quot;freemaker 语法笔记&quot;&gt;&lt;/a&gt;freemaker 语法笔记&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if 条件&lt;/p&gt;
&lt;fi
      
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java获取数据表元数据</title>
    <link href="http://www.songshuiyang.site/2018/04/14/Web%E5%90%8E%E5%8F%B0/Java/Java%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E8%A1%A8%E5%85%83%E6%95%B0%E6%8D%AE/"/>
    <id>http://www.songshuiyang.site/2018/04/14/Web后台/Java/Java获取数据表元数据/</id>
    <published>2018-04-14T09:00:12.000Z</published>
    <updated>2018-04-14T09:25:27.186Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Spring 集成Redis</title>
    <link href="http://www.songshuiyang.site/2018/04/08/Web%E5%90%8E%E5%8F%B0/%E7%BC%93%E5%AD%98%E6%8A%80%E6%9C%AF/Redis/"/>
    <id>http://www.songshuiyang.site/2018/04/08/Web后台/缓存技术/Redis/</id>
    <published>2018-04-08T14:02:12.000Z</published>
    <updated>2018-04-09T14:07:01.475Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一：Redis"><a href="#一：Redis" class="headerlink" title="一：Redis"></a>一：Redis</h2><h3 id="1-什么是Redis"><a href="#1-什么是Redis" class="headerlink" title="1. 什么是Redis"></a>1. 什么是Redis</h3><p>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。从2010年3月15日起，Redis的开发工作由VMware主持。从2013年5月开始，Redis的开发由Pivotal赞助。</p><p>官网: <a href="https://redis.io/" target="_blank" rel="noopener">https://redis.io/</a></p><p>中文教程网: <a href="http://www.redis.net.cn/tutorial/3501.html" target="_blank" rel="noopener">http://www.redis.net.cn/tutorial/3501.html</a></p><h3 id="2-基本介绍"><a href="#2-基本介绍" class="headerlink" title="2. 基本介绍"></a>2. 基本介绍</h3><h4 id="Redis-简介"><a href="#Redis-简介" class="headerlink" title="Redis 简介"></a>Redis 简介</h4><ul><li>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。</li><li>Redis 与其他 key - value 缓存产品有以下三个特点：</li><li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li><li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</li><li>Redis支持数据的备份，即master-slave模式的数据备份。</li></ul><h4 id="Redis-优势"><a href="#Redis-优势" class="headerlink" title="Redis 优势"></a>Redis 优势</h4><ul><li>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</li><li>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</li><li>原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。</li><li>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</li></ul><h4 id="Redis与其他key-value存储有什么不同？"><a href="#Redis与其他key-value存储有什么不同？" class="headerlink" title="Redis与其他key-value存储有什么不同？"></a>Redis与其他key-value存储有什么不同？</h4><ul><li>Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。</li><li>Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。</li></ul><a id="more"></a><h3 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h3><h4 id="3-1-windows环境"><a href="#3-1-windows环境" class="headerlink" title="3.1 windows环境"></a>3.1 windows环境</h4><p>下载地址: <a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="noopener">https://github.com/MicrosoftArchive/redis/releases</a></p><h4 id="3-1-1-修改配置文件"><a href="#3-1-1-修改配置文件" class="headerlink" title="3.1.1 修改配置文件"></a>3.1.1 修改配置文件</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis.windows.conf 文件 配置密码 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># requirepass foobared</span><br><span class="line">requirepass shuiyang</span><br></pre></td></tr></table></figure><h4 id="3-1-2-常用命令"><a href="#3-1-2-常用命令" class="headerlink" title="3.1.2 常用命令"></a>3.1.2 常用命令</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis服务安装成windows服务: redis-server --service-install redis.windows.conf</span><br><span class="line"></span><br><span class="line">开启服务：redis-server --service-start</span><br><span class="line"></span><br><span class="line">停止服务：redis-server --service-stop</span><br><span class="line"></span><br><span class="line">卸载服务：redis-server --service-uninstall</span><br></pre></td></tr></table></figure><h4 id="3-1-3-Redis可视化管理工具"><a href="#3-1-3-Redis可视化管理工具" class="headerlink" title="3.1.3 Redis可视化管理工具"></a>3.1.3 Redis可视化管理工具</h4><ul><li>RedisStudio，百度云连接：<a href="http://pan.baidu.com/s/1gfIbLar" target="_blank" rel="noopener">http://pan.baidu.com/s/1gfIbLar</a>  密码：mpne</li><li>Redis Desktop Manager <a href="https://redisdesktop.com/download" target="_blank" rel="noopener">https://redisdesktop.com/download</a></li></ul><h4 id="3-2-Linux环境"><a href="#3-2-Linux环境" class="headerlink" title="3.2 Linux环境"></a>3.2 Linux环境</h4><p>下载地址：<a href="http://www.redis.net.cn/download/，下载最新文档版本。" target="_blank" rel="noopener">http://www.redis.net.cn/download/，下载最新文档版本。</a></p><h4 id="3-2-1-安装"><a href="#3-2-1-安装" class="headerlink" title="3.2.1 安装"></a>3.2.1 安装</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://download.redis.io/releases/redis-2.8.17.tar.gz</span><br><span class="line">$ tar xzf redis-2.8.17.tar.gz</span><br><span class="line">$ cd redis-2.8.17</span><br><span class="line">$ make</span><br></pre></td></tr></table></figure><p>make完后 redis-2.8.17目录下会出现编译后的redis服务程序redis-server,还有用于测试的客户端程序redis-cli</p><h4 id="3-2-1-启动服务"><a href="#3-2-1-启动服务" class="headerlink" title="3.2.1 启动服务"></a>3.2.1 启动服务</h4><p>下面启动redis服务.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./redis-server</span><br></pre></td></tr></table></figure><p>注意这种方式启动redis 使用的是默认配置。也可以通过启动参数告诉redis使用指定配置文件使用下面命令启动。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server redis.conf</span><br></pre></td></tr></table></figure><p>redis.conf是一个默认的配置文件。我们可以根据需要使用自己的配置文件。</p><h4 id="3-2-1-测试客户端程序"><a href="#3-2-1-测试客户端程序" class="headerlink" title="3.2.1 测试客户端程序"></a>3.2.1 测试客户端程序</h4><p>启动redis服务进程后，就可以使用测试客户端程序redis-cli和redis服务交互了。 比如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ./redis-cli</span><br><span class="line">redis&gt; set foo bar</span><br><span class="line">OK</span><br><span class="line">redis&gt; get foo</span><br><span class="line">"bar"</span><br></pre></td></tr></table></figure><h3 id="4-与Spring-集成"><a href="#4-与Spring-集成" class="headerlink" title="4. 与Spring 集成"></a>4. 与Spring 集成</h3><h4 id="4-1-导入maven"><a href="#4-1-导入maven" class="headerlink" title="4.1 导入maven"></a>4.1 导入maven</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-新建-redis-config-properties"><a href="#4-2-新建-redis-config-properties" class="headerlink" title="4.2 新建 redis-config.properties"></a>4.2 新建 <code>redis-config.properties</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Redis settings</span><br><span class="line">redis.host=127.0.0.1</span><br><span class="line">redis.port=6379</span><br><span class="line">redis.pass=shuiyang</span><br><span class="line">redis.dbIndex=0</span><br><span class="line">redis.expiration=3000</span><br><span class="line">#最大空闲数</span><br><span class="line">redis.maxIdle=300</span><br><span class="line">#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal</span><br><span class="line">redis.maxActive=600</span><br><span class="line">#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。</span><br><span class="line">redis.maxWait=1000</span><br><span class="line">#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个</span><br><span class="line">redis.testOnBorrow=true</span><br></pre></td></tr></table></figure><h4 id="4-3-新建-applicationContext-redis-xml"><a href="#4-3-新建-applicationContext-redis-xml" class="headerlink" title="4.3 新建 applicationContext-redis.xml"></a>4.3 新建 <code>applicationContext-redis.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:cache</span>=<span class="string">"http://www.springframework.org/schema/cache"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">            http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">            http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">            http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 启用缓存注解开关 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache:annotation-driven</span> <span class="attr">cache-manager</span>=<span class="string">"cacheManager"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置JedisPoolConfig实例 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"poolConfig"</span> <span class="attr">class</span>=<span class="string">"redis.clients.jedis.JedisPoolConfig"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.maxIdle&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxTotal"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.maxActive&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWaitMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.maxWait&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.testOnBorrow&#125;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置JedisConnectionFactory --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jedisConnectionFactory"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.connection.jedis.JedisConnectionFactory"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hostName"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.host&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"port"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.port&#125;"</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.pass&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"database"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.dbIndex&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolConfig"</span> <span class="attr">ref</span>=<span class="string">"poolConfig"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置RedisTemplate --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"redisTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.core.RedisTemplate"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span> <span class="attr">ref</span>=<span class="string">"jedisConnectionFactory"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置RedisCacheManager --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cacheManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.cache.RedisCacheManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"redisOperations"</span> <span class="attr">ref</span>=<span class="string">"redisTemplate"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultExpiration"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.expiration&#125;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置RedisCacheManager --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cacheManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.cache.support.SimpleCacheManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"caches"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 这里可以配置多个redis --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.ecut.core.config.RedisCache"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"redisTemplate"</span> <span class="attr">ref</span>=<span class="string">"redisTemplate"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"articlesDetail"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.ecut.core.config.RedisCache"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"redisTemplate"</span> <span class="attr">ref</span>=<span class="string">"redisTemplate"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"getHotArticlesInCache"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.ecut.core.config.RedisCache"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"redisTemplate"</span> <span class="attr">ref</span>=<span class="string">"redisTemplate"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"articlesList"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-4-引入-applicationContext-redis-xml-redis-config-properties"><a href="#4-4-引入-applicationContext-redis-xml-redis-config-properties" class="headerlink" title="4.4 引入 applicationContext-redis.xml redis-config.properties"></a>4.4 引入 <code>applicationContext-redis.xml redis-config.properties</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--使标注Spring注解的类生效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.ecut"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 将多个配置文件读取到容器中，交给Spring管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"propertyConfigurer"</span> <span class="attr">class</span>=<span class="string">"com.ecut.core.spring.PropertyPlaceholderConfigurerFilter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"locations"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 这里支持多种寻址方式：classpath和file --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:project.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 推荐使用file的方式引入，这样可以将配置和代码分离 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:jdbc.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:redis-config.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"applicationContext-dao.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"applicationContext-shiro.xml"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--encache redis选择一种缓存--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;import resource="applicationContext-encache.xml"/&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"applicationContext-redis.xml"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-5-新建-RedisCache-java-Cache接口实现类-Spring对于缓存只是提供了抽象的接口，并且通过接口来调用功能，没有具体的实现类，所以需要我们自己实现具体的操作。"><a href="#4-5-新建-RedisCache-java-Cache接口实现类-Spring对于缓存只是提供了抽象的接口，并且通过接口来调用功能，没有具体的实现类，所以需要我们自己实现具体的操作。" class="headerlink" title="4.5 新建 RedisCache.java Cache接口实现类 Spring对于缓存只是提供了抽象的接口，并且通过接口来调用功能，没有具体的实现类，所以需要我们自己实现具体的操作。"></a>4.5 新建 <code>RedisCache.java</code> Cache接口实现类 Spring对于缓存只是提供了抽象的接口，并且通过接口来调用功能，没有具体的实现类，所以需要我们自己实现具体的操作。</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ecut.core.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.SerializationUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.support.SimpleValueWrapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.dao.DataAccessException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnection;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisCallback;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cache接口实现类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 　Spring对于缓存只是提供了抽象的接口，并且通过接口来调用功能，没有具体的实现类，所以需要我们自己实现具体的操作。</span></span><br><span class="line"><span class="comment"> 　　在上面配置中可知，每个实现类都会注入一个redisTemplate实例，我们就可以通过redisTemplate来操作redis</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> songshuiyang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/4/9 20:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisCache</span> <span class="keyword">implements</span> <span class="title">Cache</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"----------------------------RedisCache  緩存清理-------------------------"</span>);</span><br><span class="line">        redisTemplate.execute(<span class="keyword">new</span> RedisCallback&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">doInRedis</span><span class="params">(RedisConnection connection)</span> <span class="keyword">throws</span> DataAccessException </span>&#123;</span><br><span class="line">                connection.flushDb();</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">evict</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"----------------------------RedisCache  緩存刪除-------------------------"</span>);</span><br><span class="line">        <span class="keyword">final</span> String keyf=key.toString();</span><br><span class="line">        redisTemplate.execute(<span class="keyword">new</span> RedisCallback&lt;Long&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Long <span class="title">doInRedis</span><span class="params">(RedisConnection connection)</span> <span class="keyword">throws</span> DataAccessException </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> connection.del(keyf.getBytes());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ValueWrapper <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"----------------------------RedisCache  缓存获取-------------------------"</span>);</span><br><span class="line">        <span class="keyword">final</span> String keyf = key.toString();</span><br><span class="line">        Object object = <span class="keyword">null</span>;</span><br><span class="line">        object = redisTemplate.execute(<span class="keyword">new</span> RedisCallback&lt;Object&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">doInRedis</span><span class="params">(RedisConnection connection)</span> <span class="keyword">throws</span> DataAccessException </span>&#123;</span><br><span class="line">                <span class="keyword">byte</span>[] key = keyf.getBytes();</span><br><span class="line">                <span class="keyword">byte</span>[] value = connection.get(key);</span><br><span class="line">                <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    logger.info(<span class="string">"----------------------------RedisCache 缓存不存在-------------------------"</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> SerializationUtils.deserialize(value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        ValueWrapper obj=(object != <span class="keyword">null</span> ? <span class="keyword">new</span> SimpleValueWrapper(object) : <span class="keyword">null</span>);</span><br><span class="line">        logger.info(<span class="string">"----------------------------RedisCache 获取到内容-------------------------"</span>);</span><br><span class="line">        <span class="keyword">return</span>  obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(Object key, Object value)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"-------加入缓存------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"key----:"</span>+key);</span><br><span class="line">        System.out.println(<span class="string">"key----:"</span>+value);</span><br><span class="line">        <span class="keyword">final</span> String keyString = key.toString();</span><br><span class="line">        <span class="keyword">final</span> Object valuef = value;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">long</span> liveTime = <span class="number">86400</span>;</span><br><span class="line">        redisTemplate.execute(<span class="keyword">new</span> RedisCallback&lt;Long&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Long <span class="title">doInRedis</span><span class="params">(RedisConnection connection)</span> <span class="keyword">throws</span> DataAccessException </span>&#123;</span><br><span class="line">                <span class="keyword">byte</span>[] keyb = keyString.getBytes();</span><br><span class="line">                <span class="keyword">byte</span>[] valueb = SerializationUtils.serialize((Serializable) valuef);</span><br><span class="line">                connection.set(keyb, valueb);</span><br><span class="line">                <span class="keyword">if</span> (liveTime &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    connection.expire(keyb, liveTime);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1L</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">get</span><span class="params">(Object arg0, Class&lt;T&gt; arg1)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getNativeCache</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ValueWrapper <span class="title">putIfAbsent</span><span class="params">(Object arg0, Object arg1)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">getRedisTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedisTemplate</span><span class="params">(RedisTemplate&lt;String, Object&gt; redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-6-完成以上的配置之后就可以使用-Spring-Cache注解来使用缓存了"><a href="#4-6-完成以上的配置之后就可以使用-Spring-Cache注解来使用缓存了" class="headerlink" title="4.6 完成以上的配置之后就可以使用 Spring Cache注解来使用缓存了"></a>4.6 完成以上的配置之后就可以使用 Spring Cache注解来使用缓存了</h4><p>首先使用注解标记方法，相当于定义了切点，然后使用Aop技术在这个方法的调用前、调用后获取方法的入参和返回值，进而实现了缓存的逻辑。</p><ul><li>@Cacheable</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">表明所修饰的方法是可以缓存的：当第一次调用这个方法时，它的结果会被缓存下来，在缓存的有效时间内，以后访问这个方法都直接返回缓存结果，不再执行方法中的代码段。 </span><br><span class="line">这个注解可以用condition属性来设置条件，如果不满足条件，就不使用缓存能力，直接执行方法。 </span><br><span class="line">可以使用key属性来指定key的生成规则。</span><br><span class="line"></span><br><span class="line">@Cacheable 支持如下几个参数：</span><br><span class="line"></span><br><span class="line">  value：缓存位置名称，不能为空，如果使用EHCache，就是ehcache.xml中声明的<span class="keyword">cache</span>的<span class="keyword">name</span>, 指明将值缓存到哪个<span class="keyword">Cache</span>中</span><br><span class="line">  <span class="keyword">key</span>：缓存的<span class="keyword">key</span>，默认为空，既表示使用方法的参数类型及参数值作为<span class="keyword">key</span>，支持SpEL，如果要引用参数值使用井号加参数名，如：#userId，</span><br><span class="line"></span><br><span class="line">  一般来说，我们的更新操作只需要刷新缓存中某一个值，所以定义缓存的<span class="keyword">key</span>值的方式就很重要，最好是能够唯一，因为这样可以准确的清除掉特定的缓存，而不会影响到其它缓存值 ， </span><br><span class="line">  本例子中使用实体加冒号再加<span class="keyword">ID</span>组合成键的名称，如”<span class="keyword">user</span>:<span class="number">1</span>”、”<span class="keyword">order</span>:<span class="number">223123</span>”等</span><br><span class="line"></span><br><span class="line">  condition：触发条件，只有满足条件的情况才会加入缓存，默认为空，既表示全部都加入缓存，支持SpEL</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  // 将缓存保存到名称为UserCache中，键为<span class="string">"user:"</span>字符串加上userId值，如 <span class="string">'user:1'</span></span><br><span class="line">  @Cacheable(<span class="keyword">value</span>=<span class="string">"UserCache"</span>, <span class="keyword">key</span>=<span class="string">"'user:' + #userId"</span>)    </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">User</span> findById(<span class="keyword">String</span> userId) &#123;    </span><br><span class="line">      <span class="keyword">return</span> (<span class="keyword">User</span>) <span class="keyword">new</span> <span class="keyword">User</span>(<span class="string">"1"</span>, <span class="string">"mengdee"</span>);           </span><br><span class="line">  &#125;    </span><br><span class="line">  </span><br><span class="line">  // 将缓存保存进UserCache中，并当参数userId的长度小于12时才保存进缓存，默认使用参数值及类型作为缓存的key</span><br><span class="line">  // 保存缓存需要指定key，value， value的数据类型，不指定key默认和参数名一样如："1"</span><br><span class="line">  @Cacheable(value="UserCache", condition="#userId.length() &lt; 12")    </span><br><span class="line">  public boolean isReserved(String userId) &#123;    </span><br><span class="line">      System.out.println("UserCache:"+userId);    </span><br><span class="line">      return false;    </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>@CachePut</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">与@Cacheable不同，@CachePut不仅会缓存方法的结果，还会执行方法的代码段。它支持的属性和用法都与@Cacheable一致。</span><br></pre></td></tr></table></figure><ul><li><p>@CacheEvict</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">与@Cacheable功能相反，@CacheEvict表明所修饰的方法是用来删除失效或无用的缓存数据。</span><br><span class="line"></span><br><span class="line">@CacheEvict 支持如下几个参数：</span><br><span class="line"></span><br><span class="line">  value：缓存位置名称，不能为空，同上</span><br><span class="line">  key：缓存的key，默认为空，同上</span><br><span class="line">  condition：触发条件，只有满足条件的情况才会清除缓存，默认为空，支持SpEL</span><br><span class="line">  allEntries：true表示清除value中的全部缓存，默认为false</span><br><span class="line"></span><br><span class="line">  //清除掉UserCache中某个指定key的缓存    </span><br><span class="line">  @CacheEvict(value="UserCache",key="'user:' + #userId")    </span><br><span class="line">  public void removeUser(User user) &#123;    </span><br><span class="line">      System.out.println("UserCache"+user.getUserId());    </span><br><span class="line">  &#125;    </span><br><span class="line">  </span><br><span class="line">  //清除掉UserCache中全部的缓存    </span><br><span class="line">  @CacheEvict(value="UserCache", allEntries=true)    </span><br><span class="line">  public final void setReservedUsers(String[] reservedUsers) &#123;    </span><br><span class="line">     System.out.println("UserCache deleteall");    </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>@Caching</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果需要使用同一个缓存注解（@Cacheable、@CacheEvict或@CachePut）多次修饰一个方法，就需要用到@Caching。</span><br><span class="line"></span><br><span class="line">@Caching(evict = &#123; @CacheEvict("primary"), @CacheEvict(cacheNames="secondary", key="#p0") &#125;)</span><br><span class="line">public Book importBooks(String deposit, Date date)</span><br></pre></td></tr></table></figure></li><li><p>@CacheConfig</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">与前面的缓存注解不同，这是一个类级别的注解。</span><br><span class="line"> 如果类的所有操作都是缓存操作，你可以使用@CacheConfig来指定类，省去一些配置。</span><br><span class="line"></span><br><span class="line">@CacheConfig("books")</span><br><span class="line">public class BookRepositoryImpl implements BookRepository &#123;</span><br><span class="line">    @Cacheable</span><br><span class="line">    public Book findBook(ISBN isbn) &#123;...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="遇到的问题："><a href="#遇到的问题：" class="headerlink" title="遇到的问题："></a>遇到的问题：</h2><ul><li><p>spring+redis报错org.springframework.core.serializer.support.DeserializingConverter.<init>(Ljava/lang/ClassLoader;)V</init></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">这个问题的原因大概就是spring-data-redis.jar包版本不对 ，下面版本可以正常启动</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.6.2.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;redis.clients&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jedis&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.9.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li><p>Spring Cache 注解问题，使用redis缓存会出现类型转化的问题 ,还未解决</p></li></ul><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://www.cnblogs.com/panter/p/6801210.html" target="_blank" rel="noopener">https://www.cnblogs.com/panter/p/6801210.html</a><br><a href="http://www.redis.net.cn/tutorial/3503.html" target="_blank" rel="noopener">http://www.redis.net.cn/tutorial/3503.html</a><br><a href="https://www.cnblogs.com/hello-daocaoren/p/7891907.html" target="_blank" rel="noopener">https://www.cnblogs.com/hello-daocaoren/p/7891907.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一：Redis&quot;&gt;&lt;a href=&quot;#一：Redis&quot; class=&quot;headerlink&quot; title=&quot;一：Redis&quot;&gt;&lt;/a&gt;一：Redis&lt;/h2&gt;&lt;h3 id=&quot;1-什么是Redis&quot;&gt;&lt;a href=&quot;#1-什么是Redis&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是Redis&quot;&gt;&lt;/a&gt;1. 什么是Redis&lt;/h3&gt;&lt;p&gt;Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。从2010年3月15日起，Redis的开发工作由VMware主持。从2013年5月开始，Redis的开发由Pivotal赞助。&lt;/p&gt;
&lt;p&gt;官网: &lt;a href=&quot;https://redis.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://redis.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;中文教程网: &lt;a href=&quot;http://www.redis.net.cn/tutorial/3501.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.redis.net.cn/tutorial/3501.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-基本介绍&quot;&gt;&lt;a href=&quot;#2-基本介绍&quot; class=&quot;headerlink&quot; title=&quot;2. 基本介绍&quot;&gt;&lt;/a&gt;2. 基本介绍&lt;/h3&gt;&lt;h4 id=&quot;Redis-简介&quot;&gt;&lt;a href=&quot;#Redis-简介&quot; class=&quot;headerlink&quot; title=&quot;Redis 简介&quot;&gt;&lt;/a&gt;Redis 简介&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。&lt;/li&gt;
&lt;li&gt;Redis 与其他 key - value 缓存产品有以下三个特点：&lt;/li&gt;
&lt;li&gt;Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。&lt;/li&gt;
&lt;li&gt;Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。&lt;/li&gt;
&lt;li&gt;Redis支持数据的备份，即master-slave模式的数据备份。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Redis-优势&quot;&gt;&lt;a href=&quot;#Redis-优势&quot; class=&quot;headerlink&quot; title=&quot;Redis 优势&quot;&gt;&lt;/a&gt;Redis 优势&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。&lt;/li&gt;
&lt;li&gt;丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。&lt;/li&gt;
&lt;li&gt;原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。&lt;/li&gt;
&lt;li&gt;丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Redis与其他key-value存储有什么不同？&quot;&gt;&lt;a href=&quot;#Redis与其他key-value存储有什么不同？&quot; class=&quot;headerlink&quot; title=&quot;Redis与其他key-value存储有什么不同？&quot;&gt;&lt;/a&gt;Redis与其他key-value存储有什么不同？&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。&lt;/li&gt;
&lt;li&gt;Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号实现输入兑换码自动发红包功能</title>
    <link href="http://www.songshuiyang.site/2018/04/03/Web%E5%90%8E%E5%8F%B0/%E6%94%AF%E4%BB%98/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E9%80%9A%E5%8F%91%E7%BA%A2%E5%8C%85%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.songshuiyang.site/2018/04/03/Web后台/支付/微信公众号开通发红包功能/</id>
    <published>2018-04-03T14:15:12.000Z</published>
    <updated>2018-04-03T15:59:05.984Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p> 公司积分抽奖活动有红包奖项(虽然基本上都是这个奖)，但是用户兑奖的过程十分麻烦: 需要先联系公司客服，然后加客服微信，加完之后客服发一个微信红包作为兑换。所以决定简化这个兑奖过程，能不能将这个兑奖的过程改为由用户自己兑换，不用联系公司客服也能兑奖。</p><h3 id="初步想法"><a href="#初步想法" class="headerlink" title="初步想法"></a>初步想法</h3><p> 公司有微信公众号，可以通过微信公众号进行发红包操作，一方面可以实现发送红包的功能，另一方面也可以推广公司的微信公众号。初步想法是用户在微信公众号里输入一个兑换码，然后微信自动发送一个红包给用户，用户只要点一下红包，红包就进用户自己口袋了</p><h3 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h3><p>如果用户抽奖中了红包奖励，系统弹出一个提示框，里面有公司的微信公众号二维码图片（微信公众平台可以获取），及兑奖的兑换码，提示用户关注微信公众号，在公众号里面输入兑换码就可以获取红包</p><a id="more"></a><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>1、先介绍几个平台</p><p>I.微信公众平台:是微信公众账号申请入口和管理后台。商户可以在公众平台提交基本资料、业务资料、财务资料申请开通微信支付功能。</p><p>平台入口：<a href="http://mp.weixin.qq.com。" target="_blank" rel="noopener">http://mp.weixin.qq.com。</a></p><p>II.微信商户平台:微信商户平台是微信支付相关的商户功能集合，包括参数配置、支付数据查询与统计、在线退款、代金券或立减优惠运营等功能。</p><p>平台入口：<a href="http://pay.weixin.qq.com" target="_blank" rel="noopener">http://pay.weixin.qq.com</a></p><p>III. 红包接口地址： <a href="https://pay.weixin.qq.com/wiki/doc/api/tools/cash_coupon.php?chapter=13_4&amp;index=3" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/tools/cash_coupon.php?chapter=13_4&amp;index=3</a></p><p>2、 在微信公众平台获取公众号二维码图片（提供了多种尺寸大小），该二维码是提供给用户扫描， 及公众账号appid</p><p>3、 在微信商户平台上下载证书（账户中心 - 账户设置 - API安全 - API证书（下载zip压缩包格式即可，无须解压），获取 商户号（账户中心 - 账户设置 - 商户信息 - 基本账户信息 - 微信支付商户号），API密钥（账户中心 - 账户设置 - API安全 - API密钥 - 设置密钥（密钥为32位，需要自行重新设置，记录并保存好，实在没记住也可以更改） 这些参数</p><p>4、 开通红包功能，以及充值红包金额，红包金额与充值交易金额是区分开来的，所以需要单独充值，发放现金红包将扣除商户的可用余额，请注意，可用余额并不是微信支付交易额，需要预先充值，确保可用余额充足。查看可用余额、充值、提现请登录微信支付商户平台，进入“资金管理”菜单，进行操作</p><p>5、 介绍<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">现金红包简介</span><br><span class="line">微信红包，<span class="number">2014</span>年春节一经推出即受到广大用户好评，引发全民抢红包热潮。现将微信红包打造成“现金红包”，成为一款定向资金发放的营销工具，供商户使用。</span><br><span class="line"></span><br><span class="line">申请红包条件</span><br><span class="line"><span class="number">1</span>、T+<span class="number">0</span> 结算商户需满足两个条件：<span class="number">1</span>、入驻满<span class="number">90</span>天，<span class="number">2</span>、截止今日往回推<span class="number">30</span>天内连续正常交易。</span><br><span class="line"><span class="number">2</span>、其余结算周期的商户无限制，可立即前往【商户平台】-&gt;【产品中心】申请开通。</span><br><span class="line"></span><br><span class="line">发放方式介绍</span><br><span class="line">商户发放现金红包有<span class="number">3</span>种发放方式：</span><br><span class="line"><span class="number">1</span>）接口发放</span><br><span class="line">商户根据文档”【商户平台】现金红包API文档V2“进行开发，一次调用可以给一个指定用户发送一个指定金额的红包，满足多元化的运营需求；</span><br><span class="line"><span class="number">2</span>）通过上传openid文件发放</span><br><span class="line">收集要发送红包对象的openid，将openid编辑成txt文件，登录微信支付商户平台，使用上传文件功能发放。一份文件对应一个红包模板，便于管理；</span><br><span class="line">为了防止商户手误重复操作发送红包，创建的同一个文件只能上传一次。若需要重复发放则需要修改文件名称或重新创建。</span><br><span class="line"><span class="number">3</span>）配置营销规则“满额送”发放</span><br><span class="line">配置的规则不可使用红包模版进行发放，商户须在【产品中心】-【现金红包】-【前往功能】中创建红包后配置自助规则：用户使用微信支付发生交易满足一定条件，立送现金红包。</span><br><span class="line"></span><br><span class="line">税务和发票问题</span><br><span class="line">商户给用户发红包，微信支付按照商户指定红包金额扣除完全对等的充值资金，资金最终进入用户零钱。微信支付并未从中收取资金作为营收，所以不予开具发票。</span><br><span class="line">发放现金红包请商户遵照国家法律依法纳税，在商户充值之前，我们默认商户已经合法上税，商户使用本功能的行为若涉及纳税或代扣代缴税款的义务，由商户自行承担该义务，我们不会替商户缴纳税款 。</span><br></pre></td></tr></table></figure></p><h3 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h3><p>1、用户抽奖中了红包奖励, 生成一笔抽奖记录，同时生成一笔红包记录，所以需要新建一个红包记录表(表结构如下图)，一开始生成的记录中红包状态是 0-未发放的状态，同时生成兑换码。</p><p>兑换码规则：</p><p>10位大写字母：3位固定字母开头 + 7位随机字母（大写字母是为了防止【数字0 与字母o O】【 1与字母l】混淆导致用户兑换不了奖， 3位固定字母是为了防止恶意用户无限次输入兑换码导致老是触发红包处理程序，如果不是以这个三个字母开头的文字，统一回复欢迎关注本微信公众号）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`ge_lottery_redpack_record`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`ge_lottery_redpack_record`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`created_by`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`created_date`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`last_modified_by`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`last_modified_date`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`remarks`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`version`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`locked`</span> <span class="built_in">bit</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> b<span class="string">'0'</span>,</span><br><span class="line">  <span class="string">`enable`</span> <span class="built_in">bit</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> b<span class="string">'0'</span>,</span><br><span class="line">  <span class="string">`fd_lottery_record_id`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'中奖纪录id 作为外键'</span>,</span><br><span class="line">  <span class="string">`fd_status`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'红包状态 0:未发放 1：已发放待领取 2：发放失败 3：已领取 4：未领取已退款'</span>,</span><br><span class="line">  <span class="string">`fd_redpack_send_date`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'红包发送时间(非微信)'</span>,</span><br><span class="line">  <span class="string">`fd_redpack_order_id`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'微信红包订单单号'</span>,</span><br><span class="line">  <span class="string">`fd_redpack_openid`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'微信红包订单用户在wxappid下的openid'</span>,</span><br><span class="line">  <span class="string">`fd_redeem_code`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'兑换码'</span>,</span><br><span class="line">  <span class="string">`fd_redpack_price`</span> <span class="built_in">decimal</span>(<span class="number">19</span>,<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'红包金额'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'抽奖红包纪录表'</span>;</span><br></pre></td></tr></table></figure><p>2、用户得到兑换码之后，就是在微信公众号里输入兑换码，当用户输入兑换码之后，用户信息会发到我们自己服务器后台中, 这里用户触发的是文本事件，我们需要的是三个参数</p><p>(1) 用户微信OpenID（用户在本微信公众号的唯一标识）</p><p>(2) 用户发的兑换码</p><p>(3) HttpServletRequest（用于获取用户ip，发红包接口入参需要）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文本事件</span></span><br><span class="line"><span class="keyword">if</span> (WechatBindUtil.MESSAGE_TEXT.equals(msgType)) &#123;</span><br><span class="line">    String content = map.get(<span class="string">"Content"</span>).trim();</span><br><span class="line">    <span class="comment">// 如果输入的文本是是以RED开头的, 执行发红包操作</span></span><br><span class="line">    <span class="keyword">if</span> (content.startsWith(<span class="string">"RED"</span>)) &#123;</span><br><span class="line">        String resultContent = lotteryRedpackRecordService.sendRedpackByRedeemCode(fromUserName,content,req);</span><br><span class="line">        message = WechatBindUtil.initText(toUserName, fromUserName, resultContent);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        message = WechatBindUtil.initText(toUserName, fromUserName, <span class="string">"欢迎关注本微信公众号"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、如果输入的文本是是以RED开头的, 执行发红包操作, 首先是查询红包记录表有没有该兑换码且红包状态为未发放，如果有的话调用微信发红包接口，同时更改红包状态，记录<br>红包发送时间，微信红包订单单号，微信红包订单用户在wxappid下的openid，没有的话给出提示，实现如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据兑换码发送微信红包</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> openid</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> redeemCode</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sendRedpackByRedeemCode</span> <span class="params">(String openid, String redeemCode, HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">    Page&lt;LotteryRedpackRecord&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">0</span>);</span><br><span class="line">    page.setParams(<span class="string">"fdRedeemCode"</span>,redeemCode);</span><br><span class="line">    List&lt;LotteryRedpackRecord&gt; redpackRecords = findAutoByPage(page);</span><br><span class="line">    <span class="keyword">if</span> (redpackRecords.size() != <span class="number">0</span>) &#123;</span><br><span class="line">        LotteryRedpackRecord oldRecord = redpackRecords.get(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 调用微信红包查询接口, 先更新红包纪录状态</span></span><br><span class="line">        updateRedpackState(oldRecord.getId());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新完成之后获取新的红包纪录</span></span><br><span class="line">        LotteryRedpackRecord record = findById(oldRecord.getId());</span><br><span class="line">        Integer fdStatus = record.getFdStatus();</span><br><span class="line">        <span class="keyword">if</span> (fdStatus.equals(R.LotteryRedpackRecord.FdStatus.未发放.getIndex())) &#123;</span><br><span class="line">            RedpackDTO redpackDTO = <span class="keyword">new</span> RedpackDTO();</span><br><span class="line">            <span class="comment">// 以红包纪录id作为 微信红包接口请求的商品订单号 截取28位</span></span><br><span class="line">            String mchBillNo = record.getId();</span><br><span class="line">            mchBillNo= mchBillNo.substring(<span class="number">0</span>,<span class="number">28</span>);</span><br><span class="line">            redpackDTO.setMchBillNo(mchBillNo);</span><br><span class="line">            <span class="comment">// 指定哪一个微信用户</span></span><br><span class="line">            redpackDTO.setReOpenid(openid);</span><br><span class="line">            <span class="comment">// 红包价格</span></span><br><span class="line">            redpackDTO.setTotalAmount(record.getFdRedpackPrice());</span><br><span class="line">            <span class="comment">// 调用接口的机器Ip地址</span></span><br><span class="line">            String clientIp = WxUtils.getRemoteIp(request);</span><br><span class="line">            redpackDTO.setClientIp(clientIp);</span><br><span class="line">            Map&lt;String,String&gt; sendredpackResult = weixinPayService.sendredpack(redpackDTO);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新红包纪录表</span></span><br><span class="line">            LotteryRedpackRecord lotteryRedpackRecord = findById(record.getId());</span><br><span class="line">            lotteryRedpackRecord.setFdRedpackOpenid(openid);</span><br><span class="line">            <span class="keyword">if</span> (sendredpackResult.get(<span class="string">"status"</span>).equals(<span class="string">"success"</span>)) &#123;</span><br><span class="line">                lotteryRedpackRecord.setFdStatus(R.LotteryRedpackRecord.FdStatus.已发放待领取.getIndex());</span><br><span class="line">                <span class="comment">// 红包订单的微信单号-微信服务器上红包纪录的唯一标识</span></span><br><span class="line">                String redpackOrderId = sendredpackResult.get(<span class="string">"sendListid"</span>);</span><br><span class="line">                lotteryRedpackRecord.setFdRedpackOrderId(redpackOrderId);</span><br><span class="line">                lotteryRedpackRecord.setFdRedpackSendDate(<span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 更新抽奖纪录表, 变为已兑换</span></span><br><span class="line">                LotteryRecord lotteryRecord = lotteryRecordService.findById(record.getFdLotteryRecordId());</span><br><span class="line">                lotteryRecord.setFdStatus(R.LotteryRecordItem.FdStatus.已兑换.getIndex());</span><br><span class="line">                lotteryRecordService.saveSelective(lotteryRecord);</span><br><span class="line">                saveSelective(lotteryRedpackRecord);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                lotteryRedpackRecord.setFdStatus(R.LotteryRedpackRecord.FdStatus.发放失败.getIndex());</span><br><span class="line">                lotteryRedpackRecord.setRemarks(sendredpackResult.get(<span class="string">"message"</span>));</span><br><span class="line">                saveSelective(lotteryRedpackRecord);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"红包发送失败, 请及时联系对应的客服!"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fdStatus.equals(R.LotteryRedpackRecord.FdStatus.已发放待领取.getIndex())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"该兑换码对应的红包已发送! 请注意查收"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fdStatus.equals(R.LotteryRedpackRecord.FdStatus.发放失败.getIndex())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"红包发送失败, 请及时联系对应的客服!"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fdStatus.equals(R.LotteryRedpackRecord.FdStatus.已领取.getIndex())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"该兑换码对应的红包已领取"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"该兑换码对应的红包已过时, 请及时联系对应的客服"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"该兑换码无效, 请输入正确的兑换码!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"红包已发送请注意查收! 注: 24小时后未领取该红包失效"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4、调用微信红包接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 微信公众号发红包接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> redpackDTO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String,String&gt; <span class="title">sendredpack</span><span class="params">(RedpackDTO redpackDTO)</span> </span>&#123;</span><br><span class="line">    Map&lt;String,String&gt; resultMap = Maps.newHashMap();</span><br><span class="line">    Map&lt;String,String&gt; wxResultMap = Maps.newHashMap();</span><br><span class="line">    <span class="comment">// 请求参数</span></span><br><span class="line">    Map&lt;String, String&gt; reqData = Maps.newHashMap();</span><br><span class="line">    logger.info(<span class="string">"---------------------&gt;&gt;&gt; 开始发送红包start"</span>, redpackDTO);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 随机字符串</span></span><br><span class="line">        reqData.put(<span class="string">"nonce_str"</span>, WXPayUtil.generateNonceStr());</span><br><span class="line">        <span class="comment">// 商户订单号</span></span><br><span class="line">        reqData.put(<span class="string">"mch_billno"</span>,redpackDTO.getMchBillNo());</span><br><span class="line">        <span class="comment">// 商户号</span></span><br><span class="line">        reqData.put(<span class="string">"mch_id"</span>, WxPcPayConfigImpl.MCH_ID);</span><br><span class="line">        <span class="comment">// 公众账号appid</span></span><br><span class="line">        reqData.put(<span class="string">"wxappid"</span>, WxPcPayConfigImpl.SENDREDPACK_WX_APPID);</span><br><span class="line">        <span class="comment">// 商户名称</span></span><br><span class="line">        reqData.put(<span class="string">"send_name"</span>, WxPcPayConfigImpl.SENDREDPACK_SEND_NAME);</span><br><span class="line">        <span class="comment">// 用户openid</span></span><br><span class="line">        reqData.put(<span class="string">"re_openid"</span>,redpackDTO.getReOpenid());</span><br><span class="line">        <span class="comment">// 付款金额</span></span><br><span class="line">        reqData.put(<span class="string">"total_amount"</span>, AmountUtils.transAmountToCent(redpackDTO.getTotalAmount()));</span><br><span class="line">        <span class="comment">// 红包发放总人数</span></span><br><span class="line">        reqData.put(<span class="string">"total_num"</span>, WxPcPayConfigImpl.SENDREDPACK_TOTAL_NUM);</span><br><span class="line">        <span class="comment">// 红包祝福语</span></span><br><span class="line">        reqData.put(<span class="string">"wishing"</span>, WxPcPayConfigImpl.SENDREDPACK_WISHING);</span><br><span class="line">        <span class="comment">// Ip地址</span></span><br><span class="line">        reqData.put(<span class="string">"client_ip"</span>, redpackDTO.getClientIp());</span><br><span class="line">        <span class="comment">// 活动名称</span></span><br><span class="line">        reqData.put(<span class="string">"act_name"</span>, WxPcPayConfigImpl.SENDREDPACK_ACT_NAME);</span><br><span class="line">        <span class="comment">//备注</span></span><br><span class="line">        reqData.put(<span class="string">"remark"</span>, WxPcPayConfigImpl.SENDREDPACK_REMARK);</span><br><span class="line">        <span class="comment">// 生成签名</span></span><br><span class="line">        reqData.put(<span class="string">"sign"</span>, WXPayUtil.generateSignature(reqData, WxPcPayConfigImpl.API_KEY, WXPayConstants.SignType.MD5 ));</span><br><span class="line">        String respXml = wxpay.requestWithCert(WxPcPayConfigImpl.SENDREDPACK_URL,reqData , <span class="number">10000</span>, <span class="number">10000</span>);</span><br><span class="line">        wxResultMap = WXPayUtil.xmlToMap(respXml);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        logger.info(<span class="string">"---------------------&gt;&gt;&gt; 微信公众号发送红包异常"</span>);</span><br><span class="line">        resultMap.put(<span class="string">"message"</span>, e.getMessage());</span><br><span class="line">        resultMap.put(<span class="string">"status"</span>, <span class="string">"failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通信标识结果</span></span><br><span class="line">    String returnCode = wxResultMap.get(<span class="string">"return_code"</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"SUCCESS"</span>.equals(returnCode)) &#123;</span><br><span class="line">        String resultCode = wxResultMap.get(<span class="string">"result_code"</span>);</span><br><span class="line">        <span class="comment">// 业务处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"SUCCESS"</span>.equals(resultCode)) &#123;</span><br><span class="line">            logger.info(<span class="string">"---------------------&gt;&gt;&gt; 微信公众号发送红包成功"</span>);</span><br><span class="line">            <span class="comment">// 红包订单的微信单号</span></span><br><span class="line">            String sendListid = wxResultMap.get(<span class="string">"send_listid"</span>);</span><br><span class="line">            resultMap.put(<span class="string">"sendListid"</span>,sendListid);</span><br><span class="line">            resultMap.put(<span class="string">"message"</span>,<span class="string">"操作成功"</span>);</span><br><span class="line">            resultMap.put(<span class="string">"status"</span>, <span class="string">"success"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            logger.info(<span class="string">"---------------------&gt;&gt;&gt; 微信公众号发送红包失败, 原因: "</span> + wxResultMap.get(<span class="string">"err_code_des"</span>));</span><br><span class="line">            String errCodeDes = wxResultMap.get(<span class="string">"err_code_des"</span>);</span><br><span class="line">            resultMap.put(<span class="string">"message"</span>,errCodeDes);</span><br><span class="line">            resultMap.put(<span class="string">"status"</span>, <span class="string">"failed"</span>);</span><br><span class="line">            <span class="keyword">return</span> resultMap;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        String returnMsg = wxResultMap.get(<span class="string">"return_msg"</span>);</span><br><span class="line">        logger.info(<span class="string">"---------------------&gt;&gt;&gt; 微信公众号发送红包失败, 原因: "</span> + returnMsg);</span><br><span class="line">        resultMap.put(<span class="string">"message"</span>, returnMsg);</span><br><span class="line">        resultMap.put(<span class="string">"status"</span>, <span class="string">"failed"</span>);</span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resultMap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结及注意事项"><a href="#总结及注意事项" class="headerlink" title="总结及注意事项"></a>总结及注意事项</h3><p>1.红包是以分为单位，必须大于100分，小于20000分之间，这个很重要,不要一不小心把公司的钱都转出去了</p><p>2.需要对请求参数进行加签操作，wxpay里面封装了方法</p><p>3.现金红包接口请求是需要证书的，因为是出账，不像充值是属于进账不用证书， 需要调用<code>requestWithCert</code> 这个请求接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 需要证书的请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> strUrl String</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> reqData 向wxpay post的请求数据  Map</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> connectTimeoutMs 超时时间，单位是毫秒</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> readTimeoutMs 超时时间，单位是毫秒</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> API返回数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">requestWithCert</span><span class="params">(String strUrl, Map&lt;String, String&gt; reqData,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="keyword">int</span> connectTimeoutMs, <span class="keyword">int</span> readTimeoutMs)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br></pre></td></tr></table></figure><p>4.由于红包发出去了不知道用户有没有领取，所以可以用一个定时任务或者一个按钮调用微信红包状态查询接口，以更新红包的最新状态</p><p>5.可以借助第三方平台，如摇摇啦应用平台，借助这些平台可以不用开发接口，只要配置好参数就可以使用了，但唯一的缺点是要钱</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt; 公司积分抽奖活动有红包奖项(虽然基本上都是这个奖)，但是用户兑奖的过程十分麻烦: 需要先联系公司客服，然后加客服微信，加完之后客服发一个微信红包作为兑换。所以决定简化这个兑奖过程，能不能将这个兑奖的过程改为由用户自己兑换，不用联系公司客服也能兑奖。&lt;/p&gt;
&lt;h3 id=&quot;初步想法&quot;&gt;&lt;a href=&quot;#初步想法&quot; class=&quot;headerlink&quot; title=&quot;初步想法&quot;&gt;&lt;/a&gt;初步想法&lt;/h3&gt;&lt;p&gt; 公司有微信公众号，可以通过微信公众号进行发红包操作，一方面可以实现发送红包的功能，另一方面也可以推广公司的微信公众号。初步想法是用户在微信公众号里输入一个兑换码，然后微信自动发送一个红包给用户，用户只要点一下红包，红包就进用户自己口袋了&lt;/p&gt;
&lt;h3 id=&quot;业务流程&quot;&gt;&lt;a href=&quot;#业务流程&quot; class=&quot;headerlink&quot; title=&quot;业务流程&quot;&gt;&lt;/a&gt;业务流程&lt;/h3&gt;&lt;p&gt;如果用户抽奖中了红包奖励，系统弹出一个提示框，里面有公司的微信公众号二维码图片（微信公众平台可以获取），及兑奖的兑换码，提示用户关注微信公众号，在公众号里面输入兑换码就可以获取红包&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="支付" scheme="http://www.songshuiyang.site/tags/%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>Docelver接口管理平台</title>
    <link href="http://www.songshuiyang.site/2018/04/03/Web%E5%90%8E%E5%8F%B0/%E6%B5%8B%E8%AF%95/Docelver%E6%8E%A5%E5%8F%A3%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/"/>
    <id>http://www.songshuiyang.site/2018/04/03/Web后台/测试/Docelver接口管理平台/</id>
    <published>2018-04-03T12:07:12.000Z</published>
    <updated>2018-06-06T13:06:57.972Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>在项目开发过程中，开发一个功能模块，需要前后端开发进行接口定义并形成文档，如果使用doc这些文档去维护接口，多会出现纰漏，特别是在多人开发的项目中，缺点尤为明显，所以需要一个像代码版本控制（git svn）类型的平台去维护这些文档，方便开发人员进行接口维护，前后端开发人员联调接口，测试人员编写测试用例</p><h4 id="市场上常用的接口管理平台"><a href="#市场上常用的接口管理平台" class="headerlink" title="市场上常用的接口管理平台"></a>市场上常用的接口管理平台</h4><h5 id="1-Rap-阿里出品"><a href="#1-Rap-阿里出品" class="headerlink" title="1. Rap 阿里出品"></a>1. Rap 阿里出品</h5><p>官网地址：  <a href="http://rapapi.org/org/index.do" target="_blank" rel="noopener">http://rapapi.org/org/index.do</a></p><p>官网介绍：</p><p>RAP是一个可视化接口管理工具 通过分析接口结构，动态生成模拟数据，校验真实接口正确性， 围绕接口定义，通过一系列自动化工具提升我们的协作效率。我们的口号：提高效率，回家吃晚饭！</p><p>使用体验：</p><ol><li>RAP的应用范围非常明确，是一个面向开发人员自测和联调的工具性平台，它更适合以开发为核心对接口进行维护</li></ol><h5 id="2-DOClever"><a href="#2-DOClever" class="headerlink" title="2. DOClever"></a>2. DOClever</h5><p>官网地址： <a href="http://www.doclever.cn/controller/index/index.html" target="_blank" rel="noopener">http://www.doclever.cn/controller/index/index.html</a></p><p>可以对接口信息进行编辑管理，支持get,post,put,delete,patch 五种方法，支持 https 和 https 协议，并且支持 query，body，json，raw，rest，formdata 的参数可视化编辑。同时对 json 可以进行无限层次可视化编辑。并且，状态码，代码注入，markdown 文档等附加功能应有尽有。</p><p>接口调试运行，可以对参数进行加密，从md5 到 aes 一应俱全，返回参数与模型实时分析对比，给出不一致的地方，找出接口可能出现的问题。如果你不想手写文档，那么试试接口的数据生成功能，可以对接口运行的数据一键生成文档信息。</p><p>mock 的无缝整合，DOClever 自己就是一个 mock 服务器，当你把接口的开发状态设置成已完成，本地 mock 便会自动请求真实接口数据，否则返回事先定义好的 mock 数据。</p><p>支持 postman，rap，swagger 的导入，方便你做无缝迁移，同时也支持 html 文件的导出，方便你离线浏览！</p><p>项目版本和接口快照功能并行，你可以为一个项目定义 1.0，1.1，1.2 版本，并且可以自由的在不同版本间切换回滚，再也不怕接口信息的遗失，同时接口也有快照功能，当你接口开发到一半或者接口需求变更的时候，可以随时查看之前编辑的接口信息。</p><p>自动化测试功能，目前市面上类似平台的接口自动化测试大部分都是伪自动化，对于一个复杂的场景，比如获取验证码，登陆，获取订单列表，获取某个特定订单详情这样一个上下文关联的一系列操作无能为力。而 DOClever 独创的自动化测试功能，只需要你编写极少量的 javascript 代码便可以在网页里完成这样一系列操作，同时，DOClever 还提供了后台定时批量执行测试用例并把结果发送到团队成员邮箱的功能，你可以及时获取接口的运行状态。</p><p>团队协作功能，很多类似的平台这样的功能是收费的，但是 DOClever 觉得好东西需要共享出来，你可以新建一个团队，并且把团队内的成员都拉进来，给他们分组，给他们分配相关的项目以及权限，发布团队公告等等。</p><p>DOClever 开源免费，支持内网部署，很多公司考虑到数据的安全性，不愿意把接口放到公网上，没有关系，DOClever 给出一个方便快捷的解决方案，你可以把平台放到自己的内网上，完全不需要连接外网，同时功能一样也不少，即便是对于产品的升级，DOClever 也提供了很便捷的升级方案！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;在项目开发过程中，开发一个功能模块，需要前后端开发进行接口定义并形成文档，如果使用doc这些文档去维护接口，多会出现纰漏，特别是在多人开发的
      
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="测试" scheme="http://www.songshuiyang.site/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Windows批处理(cmd/bat)常用命令</title>
    <link href="http://www.songshuiyang.site/2018/03/24/Web%E5%90%8E%E5%8F%B0/windows%20bat/"/>
    <id>http://www.songshuiyang.site/2018/03/24/Web后台/windows bat/</id>
    <published>2018-03-24T07:54:12.000Z</published>
    <updated>2018-03-24T08:07:37.530Z</updated>
    
    <content type="html"><![CDATA[<h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>在使用hexo写博客的时候, hexo d 老是不能把代码push上去，网上找了好多方法都不能解决, 只能自己手动把<code>public</code>文件下生成的文件自己敲git命令push上传, 每次写博客的时候都要执行这种操作, 次数多了会感觉厌烦, 所有想windows不是有批处理脚本吗, 所以自己查阅了一些资料, 写了一个草鸡简单的脚本</p><ul><li>auto.bat<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 文件上传commit</span><br><span class="line">git add -A</span><br><span class="line"></span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">"auto commit"</span></span><br><span class="line"></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line">echo copy <span class="keyword">file</span></span><br><span class="line">xcopy D:\workspace\hexo-<span class="keyword">log</span>-bak\hexo-<span class="keyword">log</span>-bak\<span class="keyword">public</span>\*.* D:\workspace\hexo-<span class="keyword">log</span>-upload\songshuiyang.github.io /s /y</span><br><span class="line"></span><br><span class="line">echo 提交songshuiyang.github.io 文件</span><br><span class="line">cd ../../hexo-<span class="keyword">log</span>-upload\songshuiyang.github.io</span><br><span class="line"></span><br><span class="line">git <span class="keyword">add</span> -A</span><br><span class="line"></span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">"auto commit"</span></span><br><span class="line"></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line">cd ../../hexo-<span class="keyword">log</span>-bak/hexo-<span class="keyword">log</span>-bak</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h4 id="批处理文件"><a href="#批处理文件" class="headerlink" title="批处理文件"></a>批处理文件</h4><p>批处理文件（batch file）包含一系列 DOS命令，通常用于自动执行重复性任务。用户只需双击批处理文件便可执行任务，而无需重复输入相同指令。编写批处理文件非常简单，但难点在于确保一切按顺序执行。编写严谨的批处理文件可以极大程度地节省时间，在应对重复性工作时尤其有效。</p><p>在Windows中善用批处理可以简化很多重复工作</p><h5 id="常用DOS命令"><a href="#常用DOS命令" class="headerlink" title="常用DOS命令"></a>常用DOS命令</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">文件夹管理</span><br><span class="line"></span><br><span class="line">    cd 显示当前目录名或改变当前目录。</span><br><span class="line">    md 创建目录。</span><br><span class="line">    rd 删除一个目录。</span><br><span class="line">    dir 显示目录中的文件和子目录列表。</span><br><span class="line">    tree 以图形显示驱动器或路径的文件夹结构。</span><br><span class="line">    path 为可执行文件显示或设置一个搜索路径。</span><br><span class="line">    xcopy 复制文件和目录树。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">文件管理</span><br><span class="line"></span><br><span class="line">    type 显示文本文件的内容。</span><br><span class="line">    copy 将一份或多份文件复制到另一个位置。</span><br><span class="line">    del 删除一个或数个文件。</span><br><span class="line">    move 移动文件并重命名文件和目录。(Windows XP Home Edition中没有)</span><br><span class="line">    ren 重命名文件。</span><br><span class="line">    <span class="keyword">replace</span> 替换文件。</span><br><span class="line">    <span class="keyword">attrib</span> 显示或更改文件属性。</span><br><span class="line">    find 搜索字符串。</span><br><span class="line">    fc 比较两个文件或两个文件集并显示它们之间的不同</span><br><span class="line">网络命令</span><br><span class="line"></span><br><span class="line">    ping 进行网络连接测试、名称解析</span><br><span class="line">    <span class="keyword">ftp</span> 文件传输</span><br><span class="line">    net 网络命令集及用户管理</span><br><span class="line">    telnet 远程登陆</span><br><span class="line">    ipconfig显示、修改TCP/IP设置</span><br><span class="line">    msg 给用户发送消息</span><br><span class="line">    arp 显示、修改局域网的IP地址-物理地址映射列表</span><br><span class="line">    </span><br><span class="line">系统管理</span><br><span class="line"></span><br><span class="line">    <span class="keyword">at</span> 安排在特定日期和时间运行命令和程序</span><br><span class="line">    <span class="keyword">shutdown</span>立即或定时关机或重启</span><br><span class="line">    tskill 结束进程</span><br><span class="line">    taskkill结束进程(比tskill高级，但WinXPHome版中无该命令)</span><br><span class="line">    tasklist显示进程列表(Windows XP Home <span class="keyword">Edition</span>中没有)</span><br><span class="line">    sc 系统服务设置与控制</span><br><span class="line">    reg 注册表控制台工具</span><br><span class="line">    powercfg控制系统上的电源设置</span><br></pre></td></tr></table></figure><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h4&gt;&lt;p&gt;在使用hexo写博客的时候, hexo d 老是不能把代码push上去，网上找了好多方法都不能解决, 只能自己手动把&lt;code&gt;public&lt;/code&gt;文件下生成的文件自己敲git命令push上传, 每次写博客的时候都要执行这种操作, 次数多了会感觉厌烦, 所有想windows不是有批处理脚本吗, 所以自己查阅了一些资料, 写了一个草鸡简单的脚本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;auto.bat&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 文件上传commit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add -A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;auto commit&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo copy &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xcopy D:\workspace\hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-bak\hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-bak\&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;\*.* D:\workspace\hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-upload\songshuiyang.github.io /s /y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo 提交songshuiyang.github.io 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd ../../hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-upload\songshuiyang.github.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;add&lt;/span&gt; -A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;auto commit&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd ../../hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-bak/hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-bak&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Spring 集成Encache</title>
    <link href="http://www.songshuiyang.site/2018/03/24/Web%E5%90%8E%E5%8F%B0/%E7%BC%93%E5%AD%98%E6%8A%80%E6%9C%AF/Encache/"/>
    <id>http://www.songshuiyang.site/2018/03/24/Web后台/缓存技术/Encache/</id>
    <published>2018-03-24T03:41:12.000Z</published>
    <updated>2018-04-08T15:02:40.632Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一：Encache"><a href="#一：Encache" class="headerlink" title="一：Encache"></a>一：Encache</h3><h4 id="1-什么是Encache"><a href="#1-什么是Encache" class="headerlink" title="1. 什么是Encache"></a>1. 什么是Encache</h4><p>EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。</p><p>官网: <a href="http://www.ehcache.org/" target="_blank" rel="noopener">http://www.ehcache.org/</a></p><h4 id="2-基本介绍"><a href="#2-基本介绍" class="headerlink" title="2. 基本介绍"></a>2. 基本介绍</h4><p>Ehcache是一种广泛使用的开源Java分布式缓存。主要面向通用缓存,Java EE和轻量级容器。它具有内存和磁盘存储，缓存加载器,缓存扩展,缓存异常处理程序,一个gzip缓存servlet过滤器,支持REST和SOAP api等特点。</p><p>Ehcache最初是由Greg Luck于2003年开始开发。2009年,该项目被Terracotta购买。软件仍然是开源,但一些新的主要功能(例如，快速可重启性之间的一致性的)只能在商业产品中使用，例如Enterprise EHCache and BigMemory。维基媒体Foundationannounced目前使用的就是Ehcache技术。</p><a id="more"></a><h4 id="3-特点"><a href="#3-特点" class="headerlink" title="3. 特点"></a>3. 特点</h4><p>主要的特性有：</p><ol><li>快速</li><li>简单</li><li>多种缓存策略</li><li>缓存数据有两级：内存和磁盘，因此无需担心容量问题</li><li>缓存数据会在虚拟机重启的过程中写入磁盘</li><li>可以通过RMI、可插入API等方式进行分布式缓存</li><li>具有缓存和缓存管理器的侦听接口</li><li>支持多缓存管理器实例，以及一个实例的多个缓存区域</li><li>提供Hibernate的缓存实现</li></ol><h4 id="ehcache与redis的区别"><a href="#ehcache与redis的区别" class="headerlink" title="ehcache与redis的区别"></a>ehcache与redis的区别</h4><p>1.redis的数据结构比较丰富，有key-value、hash、set等；ehcache比较简单，只有key-value</p><p>2.ehcache直接在jvm虚拟机中缓存，速度快，效率高；但是缓存共享麻烦，集群分布式应用不方便。redis是通过socket访问到缓存服务，效率ecache低，比数据库要快很多，处理集群和分布式缓存方便，有成熟的方案。如果是单个应用或者对缓存访问要求很高的应用，用ehcache。如果是大型系统，存在缓存共享、分布式部署、缓存内容很大的，建议用redis。</p><h3 id="二-Encache与Spring-集成"><a href="#二-Encache与Spring-集成" class="headerlink" title="二: Encache与Spring 集成"></a>二: Encache与Spring 集成</h3><h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h4><p>Spring自身并没有实现缓存解决方案，但是对缓存管理功能提供了声明式的支持，能够与多种流行的缓存实现进行集成。</p><p>Spring Cache是作用在方法上的（不能理解为只注解在方法上），其核心思想是：当我们在调用一个缓存方法时会把该方法参数和返回结果作为一个键值存放在缓存中，等到下次利用同样的参数调用该方法时将不再执行该方法，而是直接从缓存中获取结果进行返回。所以在使用Spring Cache的时候我们要保证我们的缓存的方法对于相同的方法参数要有相同的返回结果。</p><h4 id="2-开始集成"><a href="#2-开始集成" class="headerlink" title="2. 开始集成"></a>2. 开始集成</h4><ul><li><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写ehcache.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">"http://ehcache.org/ehcache.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 磁盘缓存位置 在Windows的缓存目录为：C:\Users\登录用户~1\AppData\Local\Temp\    Linux：/tmp --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"java.io.tmpdir/ehcache"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--name：缓存名称。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--maxElementsInMemory：缓存最大个数。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--timeToIdleSeconds：置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--timeToLiveSeconds：缓存数据的生存时间（TTL），也就是一个元素从构建到消亡的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--maxEntriesLocalDisk：当内存中对象数量达到maxElementsInMemory时，Ehcache将会对象写到磁盘中。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--overflowToDisk：内存不足时，是否启用磁盘缓存。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--maxElementsOnDisk：硬盘最大缓存个数。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--diskPersistent：是否在VM重启时存储硬盘的缓存数据。默认值是false。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--clearOnFlush：内存数量最大时是否清除。--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--@Cacheable(value = "users", condition = "#user.getId() &lt;= 2")--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--@CachePut(value = "users", key = "#user.getId()")--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--@CacheEvict(value = "users", allEntries = true)--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 默认缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">eternal</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToIdleSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToLiveSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxEntriesLocalDisk</span>=<span class="string">"10000000"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">persistence</span> <span class="attr">strategy</span>=<span class="string">"localTempSwap"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 博客文章详情缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"articlesDetail"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">eternal</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- hotArticles缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"articlesDetail"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">eternal</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在需要缓存的地方加上缓存注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 第一次执行会缓存文章,以id作为key, 第二次会直接取缓存的数据(需要在缓存有效期,过期会重新查询数据库)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Cacheable</span>(value = <span class="string">"articlesDetail"</span>, key = <span class="string">"#id"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> BlogArticles <span class="title">selectByPrimaryKey</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getMappser().selectByPrimaryKey(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 保存文章，同时删除record.getId()该已存的缓存数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> record</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@CacheEvict</span>(value = <span class="string">"articlesDetail"</span>, key = <span class="string">"#record.getId()"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByPrimaryKeySelective</span><span class="params">(BlogArticles record)</span> </span>&#123;</span><br><span class="line">    setCurrentOperator(record);</span><br><span class="line">    <span class="keyword">return</span> getMappser().updateByPrimaryKeySelective(record);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-注解讲解"><a href="#3-注解讲解" class="headerlink" title="3. 注解讲解"></a>3. 注解讲解</h4><p>首先使用注解标记方法，相当于定义了切点，然后使用Aop技术在这个方法的调用前、调用后获取方法的入参和返回值，进而实现了缓存的逻辑。</p><ul><li>@Cacheable</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">表明所修饰的方法是可以缓存的：当第一次调用这个方法时，它的结果会被缓存下来，在缓存的有效时间内，以后访问这个方法都直接返回缓存结果，不再执行方法中的代码段。 </span><br><span class="line">这个注解可以用condition属性来设置条件，如果不满足条件，就不使用缓存能力，直接执行方法。 </span><br><span class="line">可以使用key属性来指定key的生成规则。</span><br><span class="line"></span><br><span class="line">@Cacheable 支持如下几个参数：</span><br><span class="line"></span><br><span class="line">  value：缓存位置名称，不能为空，如果使用EHCache，就是ehcache.xml中声明的<span class="keyword">cache</span>的<span class="keyword">name</span>, 指明将值缓存到哪个<span class="keyword">Cache</span>中</span><br><span class="line">  <span class="keyword">key</span>：缓存的<span class="keyword">key</span>，默认为空，既表示使用方法的参数类型及参数值作为<span class="keyword">key</span>，支持SpEL，如果要引用参数值使用井号加参数名，如：#userId，</span><br><span class="line"></span><br><span class="line">  一般来说，我们的更新操作只需要刷新缓存中某一个值，所以定义缓存的<span class="keyword">key</span>值的方式就很重要，最好是能够唯一，因为这样可以准确的清除掉特定的缓存，而不会影响到其它缓存值 ， </span><br><span class="line">  本例子中使用实体加冒号再加<span class="keyword">ID</span>组合成键的名称，如”<span class="keyword">user</span>:<span class="number">1</span>”、”<span class="keyword">order</span>:<span class="number">223123</span>”等</span><br><span class="line"></span><br><span class="line">  condition：触发条件，只有满足条件的情况才会加入缓存，默认为空，既表示全部都加入缓存，支持SpEL</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  // 将缓存保存到名称为UserCache中，键为<span class="string">"user:"</span>字符串加上userId值，如 <span class="string">'user:1'</span></span><br><span class="line">  @Cacheable(<span class="keyword">value</span>=<span class="string">"UserCache"</span>, <span class="keyword">key</span>=<span class="string">"'user:' + #userId"</span>)    </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">User</span> findById(<span class="keyword">String</span> userId) &#123;    </span><br><span class="line">      <span class="keyword">return</span> (<span class="keyword">User</span>) <span class="keyword">new</span> <span class="keyword">User</span>(<span class="string">"1"</span>, <span class="string">"mengdee"</span>);           </span><br><span class="line">  &#125;    </span><br><span class="line">  </span><br><span class="line">  // 将缓存保存进UserCache中，并当参数userId的长度小于12时才保存进缓存，默认使用参数值及类型作为缓存的key</span><br><span class="line">  // 保存缓存需要指定key，value， value的数据类型，不指定key默认和参数名一样如："1"</span><br><span class="line">  @Cacheable(value="UserCache", condition="#userId.length() &lt; 12")    </span><br><span class="line">  public boolean isReserved(String userId) &#123;    </span><br><span class="line">      System.out.println("UserCache:"+userId);    </span><br><span class="line">      return false;    </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>@CachePut</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">与@Cacheable不同，@CachePut不仅会缓存方法的结果，还会执行方法的代码段。它支持的属性和用法都与@Cacheable一致。</span><br></pre></td></tr></table></figure><ul><li><p>@CacheEvict</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">与@Cacheable功能相反，@CacheEvict表明所修饰的方法是用来删除失效或无用的缓存数据。</span><br><span class="line"></span><br><span class="line">@CacheEvict 支持如下几个参数：</span><br><span class="line"></span><br><span class="line">  value：缓存位置名称，不能为空，同上</span><br><span class="line">  key：缓存的key，默认为空，同上</span><br><span class="line">  condition：触发条件，只有满足条件的情况才会清除缓存，默认为空，支持SpEL</span><br><span class="line">  allEntries：true表示清除value中的全部缓存，默认为false</span><br><span class="line"></span><br><span class="line">  //清除掉UserCache中某个指定key的缓存    </span><br><span class="line">  @CacheEvict(value="UserCache",key="'user:' + #userId")    </span><br><span class="line">  public void removeUser(User user) &#123;    </span><br><span class="line">      System.out.println("UserCache"+user.getUserId());    </span><br><span class="line">  &#125;    </span><br><span class="line">  </span><br><span class="line">  //清除掉UserCache中全部的缓存    </span><br><span class="line">  @CacheEvict(value="UserCache", allEntries=true)    </span><br><span class="line">  public final void setReservedUsers(String[] reservedUsers) &#123;    </span><br><span class="line">     System.out.println("UserCache deleteall");    </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>@Caching</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果需要使用同一个缓存注解（@Cacheable、@CacheEvict或@CachePut）多次修饰一个方法，就需要用到@Caching。</span><br><span class="line"></span><br><span class="line">@Caching(evict = &#123; @CacheEvict("primary"), @CacheEvict(cacheNames="secondary", key="#p0") &#125;)</span><br><span class="line">public Book importBooks(String deposit, Date date)</span><br></pre></td></tr></table></figure></li><li><p>@CacheConfig</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">与前面的缓存注解不同，这是一个类级别的注解。</span><br><span class="line"> 如果类的所有操作都是缓存操作，你可以使用@CacheConfig来指定类，省去一些配置。</span><br><span class="line"></span><br><span class="line">@CacheConfig("books")</span><br><span class="line">public class BookRepositoryImpl implements BookRepository &#123;</span><br><span class="line">    @Cacheable</span><br><span class="line">    public Book findBook(ISBN isbn) &#123;...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-创建Cache工具类-方便对cache进行管理"><a href="#4-创建Cache工具类-方便对cache进行管理" class="headerlink" title="4. 创建Cache工具类, 方便对cache进行管理"></a>4. 创建Cache工具类, 方便对cache进行管理</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ecut.core.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.CacheManager;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 缓存工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> songshuiyang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/3/24 12:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CacheUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(CacheUtils.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> CacheManager cacheManager = (CacheManager) SpringContextUtils.getBean(<span class="string">"cacheManager"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取缓存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cacheName 缓存名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">get</span><span class="params">(String cacheName, Object key)</span> </span>&#123;</span><br><span class="line">        Cache cache = cacheManager.getCache(cacheName);</span><br><span class="line">        <span class="keyword">if</span> (cache != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//这里需要判断是否null</span></span><br><span class="line">            <span class="keyword">if</span>(cache.get(key) != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> cache.get(key).get();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加缓存</span></span><br><span class="line"><span class="comment">     * 存在则更新</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cacheName 缓存名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(String cacheName, Object key, Object value)</span> </span>&#123;</span><br><span class="line">        Cache cache = cacheManager.getCache(cacheName);</span><br><span class="line">        <span class="keyword">if</span>(cache != <span class="keyword">null</span>)&#123;</span><br><span class="line">            cache.put(key, value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清除缓存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cacheName 缓存名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(String cacheName, Object key)</span> </span>&#123;</span><br><span class="line">        Cache cache = cacheManager.getCache(cacheName);</span><br><span class="line">        <span class="keyword">if</span> (cache != <span class="keyword">null</span>) &#123;</span><br><span class="line">            cache.evict(key);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            logger.warn(<span class="string">"this key is not in Cache"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://blog.csdn.net/vbirdbest/article/details/72763048" target="_blank" rel="noopener">https://blog.csdn.net/vbirdbest/article/details/72763048</a><br><a href="http://www.cnblogs.com/jingmoxukong/p/5975994.html" target="_blank" rel="noopener">http://www.cnblogs.com/jingmoxukong/p/5975994.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一：Encache&quot;&gt;&lt;a href=&quot;#一：Encache&quot; class=&quot;headerlink&quot; title=&quot;一：Encache&quot;&gt;&lt;/a&gt;一：Encache&lt;/h3&gt;&lt;h4 id=&quot;1-什么是Encache&quot;&gt;&lt;a href=&quot;#1-什么是Encache&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是Encache&quot;&gt;&lt;/a&gt;1. 什么是Encache&lt;/h4&gt;&lt;p&gt;EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。&lt;/p&gt;
&lt;p&gt;官网: &lt;a href=&quot;http://www.ehcache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.ehcache.org/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-基本介绍&quot;&gt;&lt;a href=&quot;#2-基本介绍&quot; class=&quot;headerlink&quot; title=&quot;2. 基本介绍&quot;&gt;&lt;/a&gt;2. 基本介绍&lt;/h4&gt;&lt;p&gt;Ehcache是一种广泛使用的开源Java分布式缓存。主要面向通用缓存,Java EE和轻量级容器。它具有内存和磁盘存储，缓存加载器,缓存扩展,缓存异常处理程序,一个gzip缓存servlet过滤器,支持REST和SOAP api等特点。&lt;/p&gt;
&lt;p&gt;Ehcache最初是由Greg Luck于2003年开始开发。2009年,该项目被Terracotta购买。软件仍然是开源,但一些新的主要功能(例如，快速可重启性之间的一致性的)只能在商业产品中使用，例如Enterprise EHCache and BigMemory。维基媒体Foundationannounced目前使用的就是Ehcache技术。&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hover.css</title>
    <link href="http://www.songshuiyang.site/2018/03/20/Web%E5%89%8D%E7%AB%AF/hover/"/>
    <id>http://www.songshuiyang.site/2018/03/20/Web前端/hover/</id>
    <published>2018-03-20T12:52:12.000Z</published>
    <updated>2018-03-20T15:08:21.018Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hover-css"><a href="#Hover-css" class="headerlink" title="Hover.css"></a>Hover.css</h3><p>A collection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and so on. Easily apply to your own elements, modify or just use for inspiration. Available in CSS, Sass, and LESS.</p><p>官网地址: <a href="http://ianlunn.github.io/Hover/" target="_blank" rel="noopener">http://ianlunn.github.io/Hover/</a></p><p>演示地址: <a href="http://wow.techbrood.com/fiddle/852" target="_blank" rel="noopener">http://wow.techbrood.com/fiddle/852</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hover-css&quot;&gt;&lt;a href=&quot;#Hover-css&quot; class=&quot;headerlink&quot; title=&quot;Hover.css&quot;&gt;&lt;/a&gt;Hover.css&lt;/h3&gt;&lt;p&gt;A collection of CSS3 powered hover effects
      
    
    </summary>
    
      <category term="client" scheme="http://www.songshuiyang.site/categories/client/"/>
    
    
      <category term="css" scheme="http://www.songshuiyang.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命令笔记</title>
    <link href="http://www.songshuiyang.site/2018/03/08/Web%E5%90%8E%E5%8F%B0/Linux/linux%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.songshuiyang.site/2018/03/08/Web后台/Linux/linux笔记/</id>
    <published>2018-03-08T09:30:44.000Z</published>
    <updated>2018-07-08T07:02:02.887Z</updated>
    
    <content type="html"><![CDATA[<ol><li>出现问题 <code>bash: service: command not found</code>, </li></ol><p>解决方法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> initscripts</span><br></pre></td></tr></table></figure></p><ol><li>查看端口<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 查看80端口占用情况</span><br><span class="line">lsof -i tcp:80</span><br><span class="line"></span><br><span class="line"># 列出所有端口</span><br><span class="line">netstat -ntlp</span><br><span class="line"></span><br><span class="line"># 查看端口状态</span><br><span class="line">netstat -lnp|grep 88   #88请换为你的apache需要的端口，如：80</span><br><span class="line"></span><br><span class="line"># SSH执行以上命令，可以查看到88端口正在被哪个进程使用。如下图，进程号为 1777 。</span><br><span class="line"></span><br><span class="line"># 查看进程的详细信息</span><br><span class="line">ps 1777</span><br><span class="line"></span><br><span class="line"># 杀掉进程</span><br><span class="line"><span class="keyword">kill</span> <span class="number">-9</span> <span class="number">1777</span>        #杀掉编号为<span class="number">1777</span>的进程（请根据实际情况输入）</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;出现问题 &lt;code&gt;bash: service: command not found&lt;/code&gt;, &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解决方法：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
      <category term="服务器" scheme="http://www.songshuiyang.site/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
      <category term="server" scheme="http://www.songshuiyang.site/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>Docker笔记</title>
    <link href="http://www.songshuiyang.site/2018/03/08/Web%E5%90%8E%E5%8F%B0/Linux/Docker%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.songshuiyang.site/2018/03/08/Web后台/Linux/Docker笔记/</id>
    <published>2018-03-08T06:30:44.000Z</published>
    <updated>2018-03-10T02:17:01.895Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是Docker"><a href="#什么是Docker" class="headerlink" title="什么是Docker"></a>什么是Docker</h4><p>Docker 是一种“轻量级”容器技术，它几乎动摇了传统虚拟化技术的地位，现在国内外已经有越来越多的公司开始逐步使用 Docker 来替换现有的虚拟化平台了。作为一名 Java 程序员，我们是时候一起把 Docker 学起来了！</p><p>1.传统虚拟化技术的体系架构：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/server/docker/virtual" alt="logo" title="mechine.png">                </div>                <div class="image-caption">mechine.png</div>            </figure> <p>可见，我们在宿主机的操作系统上，可安装了多个虚拟机，而在每个虚拟机中，通过虚拟化技术，实现了一个虚拟操作系统，随后，就可以在该虚拟操作系统上，安装自己所需的应用程序了。这一切看似非常简单，但其中的技术细节是相当高深莫测的，大神级人物都不一定说得清楚。<br><a id="more"></a></p><p>凡是使用过虚拟机的同学，应该都知道，启动虚拟机就像启动一台计算机，初始化过程是相当慢的，我们需要等很久，才能看到登录界面。一旦虚拟机启动以后，就可以与宿主机建立网络连接，确保虚拟机与宿主机之间是互联互通的。不同的虚拟机之间却是相互隔离的，也就是说，彼此并不知道对方的存在，但每个虚拟机占用的都是宿主机的硬件与网络资源。</p><p>2.Docker 技术的体系架构</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/server/docker/virtual" alt="logo" title="mechine.png">                </div>                <div class="image-caption">mechine.png</div>            </figure> <p>可见，在宿主机的操作系统上，有一个 Docker 服务在运行（或者称为“Docker 引擎”），在此服务上，我们可开启多个 Docker 容器，而每个 Docker 容器中可运行自己所需的应用程序，Docker 容器之间也是相互隔离的，同样地，都是占用的宿主机的硬件与网络资源。、</p><p>Docker 容器相对于虚拟机而言，除了在技术实现上完全不一样以外，启动速度较虚拟机而言有本质的飞跃，启动一个容器只在眨眼瞬间。不管是虚拟机还是 Docker 容器，它们都是为了隔离应用程序的运行环境，节省我们的硬件资源，为我们开发人员提供福利。</p><p>3.Docker 的 Logo:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/server/docker/docker" alt="logo" title="logo.png">                </div>                <div class="image-caption">logo.png</div>            </figure> <p>很明显，这是一只鲸鱼，它托着许多集装箱。我们可以把宿主机可当做这只鲸鱼，把相互隔离的容器可看成集装箱，每个集装箱中都包含自己的应用程序。这 Logo 简直的太形象了！</p><p>4.Docker的应用场景<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. Web 应用的自动化打包和发布。</span><br><span class="line"></span><br><span class="line">2. 自动化测试和持续集成、发布。</span><br><span class="line"></span><br><span class="line">3. 在服务型环境中部署和调整数据库或其他的后台应用。</span><br></pre></td></tr></table></figure></p><p>5.Docker 的优点<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、简化程序：</span><br><span class="line">Docker 让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，便可以实现虚拟化。Docker改变了虚拟化的方式，使开发者可以直接将自己的成果放入Docker中进行管理。方便快捷已经是 Docker的最大优势，过去需要用数天乃至数周的任务，在Docker容器的处理下，只需要数秒就能完成。</span><br><span class="line"></span><br><span class="line">2、避免选择恐惧症：</span><br><span class="line">如果你有选择恐惧症，还是资深患者。Docker 帮你打包你的纠结！比如 Docker 镜像；Docker 镜像中包含了运行环境和配置，所以 Docker 可以简化部署多种应用实例工作。比如 Web 应用、后台应用、数据库应用、大数据应用比如 Hadoop 集群、消息队列等等都可以打包成一个镜像部署。</span><br><span class="line"></span><br><span class="line">3、节省开支：</span><br><span class="line">一方面，云计算时代到来，使开发者不必为了追求效果而配置高额的硬件，Docker 改变了高性能必然高价格的思维定势。Docker 与云的结合，让云空间得到更充分的利用。不仅解决了硬件管理的问题，也改变了虚拟化的方式。</span><br></pre></td></tr></table></figure></p><h4 id="Docker-术语"><a href="#Docker-术语" class="headerlink" title="Docker 术语"></a>Docker 术语</h4><table><thead><tr><th>术语</th><th style="text-align:right">说明</th></tr></thead><tbody><tr><td>Docker 镜像(Images)</td><td style="text-align:right">Docker 镜像是用于创建 Docker 容器的模板。</td></tr><tr><td>Docker 容器(Container)</td><td style="text-align:right">容器是独立运行的一个或一组应用。</td></tr><tr><td>Docker 客户端(Client)</td><td style="text-align:right">Docker 客户端通过命令行或者其他工具使用 Docker API (<a href="https://docs.docker.com/reference/api/docker_remote_api" target="_blank" rel="noopener">https://docs.docker.com/reference/api/docker_remote_api</a>) 与 Docker 的守护进程通信。</td></tr><tr><td>Docker 主机(Host)</td><td style="text-align:right">一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。</td></tr><tr><td>Docker 仓库(Registry)</td><td style="text-align:right">Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。Docker Hub(<a href="https://hub.docker.com" target="_blank" rel="noopener">https://hub.docker.com</a>) 提供了庞大的镜像集合供使用。</td></tr><tr><td>Docker Machine</td><td style="text-align:right">Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。</td></tr></tbody></table><h4 id="使用Docker前先配置-Docker国内镜像或者使用registry-mirrors配置加速"><a href="#使用Docker前先配置-Docker国内镜像或者使用registry-mirrors配置加速" class="headerlink" title="使用Docker前先配置 Docker国内镜像或者使用registry-mirrors配置加速"></a>使用Docker前先配置 Docker国内镜像或者使用registry-mirrors配置加速</h4><p>由于国内访问直接访问Docker hub网速比较慢，拉取镜像的时间就会比较长。一般我们会使用镜像加速或者直接从国内的一些平台镜像仓库上拉取。 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">方法一： 网易镜像中心：https://c.163.com/hub#/m/home/ </span><br><span class="line"></span><br><span class="line">拉取镜像的命令是： docker pull 镜像名字 所以我们可以按照给出的镜像名字或者命令直接拉取。</span><br><span class="line"></span><br><span class="line">eg: docker pull hub.c.163.com/library/tomcat:latest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法二： daocloud镜像市场：https://hub.daocloud.io/</span><br><span class="line"></span><br><span class="line">如果说还是想从dockerhub上拉取，那么使用加速器修改docker的registry-mirrors。这里使用的是DaoCloud的加速器。 </span><br><span class="line"></span><br><span class="line">首先在http://www.daocloud.io/进行注册登录。然后点击加速器，得到如下脚本</span><br><span class="line"></span><br><span class="line">    curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://24524c4f.m.daocloud.io Copy</span><br><span class="line">    该脚本可以将 <span class="comment">--registry-mirror 加入到你的 Docker 配置文件 /etc/docker/daemon.json 中。适用于 Ubuntu14.04、Debian、CentOS6 、CentOS7、Fedora、Arch Linux、openSUSE Leap 42.1，其他版本可能有细微不同。更多详情请访问文档。</span></span><br><span class="line"> </span><br><span class="line">也可以自己手动修改 /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"> "registry-mirrors": ["http://ef017c13.m.daocloud.io"],</span><br><span class="line"> "live-<span class="keyword">restore</span><span class="string">": true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">最后重启docker service docker restart</span></span><br></pre></td></tr></table></figure><h4 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h4><p>1.前提条件<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用 yum 安装（CentOS 7下）</span><br><span class="line"></span><br><span class="line">Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。</span><br><span class="line">通过 uname -r 命令查看你当前的内核版本</span><br></pre></td></tr></table></figure></p><p>2.安装<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> docker</span><br></pre></td></tr></table></figure></p><p>3.启动服务<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker <span class="keyword">start</span></span><br></pre></td></tr></table></figure></p><p>4.测试运行 hello-world<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure></p><h4 id="Docker中使用CentOS7镜像"><a href="#Docker中使用CentOS7镜像" class="headerlink" title="Docker中使用CentOS7镜像"></a>Docker中使用CentOS7镜像</h4><p>1.启动容器服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker.service</span><br></pre></td></tr></table></figure></p><p>2.下载CentOS7 镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@JD docker]# docker pull centos:7.3.1611</span><br><span class="line">Trying to pull repository docker.io/library/centos ... </span><br><span class="line">7.3.1611: Pulling from docker.io/library/centos</span><br><span class="line"></span><br><span class="line">版本: https://hub.docker.com/_/centos/ 可以在这个网站上选择自己想要的版本</span><br><span class="line">  latest, centos7, 7 (docker/Dockerfile)</span><br><span class="line">  centos6, 6 (docker/Dockerfile)</span><br><span class="line">  centos7.4.1708, 7.4.1708 (docker/Dockerfile)</span><br><span class="line">  centos7.3.1611, 7.3.1611 (docker/Dockerfile)</span><br><span class="line">  centos7.2.1511, 7.2.1511 (docker/Dockerfile)</span><br><span class="line">  centos7.1.1503, 7.1.1503 (docker/Dockerfile)</span><br><span class="line">  centos7.0.1406, 7.0.1406 (docker/Dockerfile)</span><br><span class="line">  centos6.9, 6.9 (docker/Dockerfile)</span><br><span class="line">  centos6.8, 6.8 (docker/Dockerfile)</span><br><span class="line">  centos6.7, 6.7 (docker/Dockerfile)</span><br><span class="line">  centos6.6, 6.6 (docker/Dockerfile)</span><br></pre></td></tr></table></figure></p><p>3.下载成功之后查看本地所有的镜像，得到centos的 IMAGE ID: 66ee80d59a68<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@JD ~]# docker images</span><br><span class="line">REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">docker.io/tomcat        latest              108db0e7c85e        2 weeks ago         557.4 MB</span><br><span class="line">docker.io/hello-world   latest              f2a91732366c        3 months ago        1.848 kB</span><br><span class="line">docker.io/centos        7.3.1611            66ee80d59a68        4 months ago        191.8 MB</span><br></pre></td></tr></table></figure></p><p>4.启动docker中的CentOS7<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker run -ti 66ee /bin/bash</span><br><span class="line">#6866 是 IMAGE ID 前四位数字-能区分出是哪个image即可</span><br><span class="line"></span><br><span class="line">root@b4ad1d1c87da /]# </span><br><span class="line">#登录成功，接下来就可以为所欲为啦。</span><br><span class="line"></span><br><span class="line">命令笔记</span><br><span class="line">  容器是在镜像的基础上来运行的，一旦容器启动了，我们就可以登录到容器中，安装自己所需的软件或应用程序。既然镜像已经下载到本地，那么如何才能启动容器呢</span><br><span class="line">  </span><br><span class="line">  docker run -i -t -v /root/software/:/mnt/software/ 25c5298b1a36 /bin/bash</span><br><span class="line"></span><br><span class="line">  docker run &lt;相关参数&gt; &lt;镜像 ID&gt; &lt;初始命令&gt;</span><br><span class="line"></span><br><span class="line">    -i：表示以“交互模式”运行容器</span><br><span class="line">    -t：表示容器启动后会进入其命令行</span><br><span class="line">    -v：表示需要将本地哪个目录挂载到容器中，格式：-v &lt;宿主机目录&gt;:&lt;容器目录&gt;</span><br><span class="line">    假设我们的所有安装程序都放在了宿主机的/root/software/目录下，现在需要将其挂载到容器的/mnt/software/目录下。</span><br><span class="line">    </span><br><span class="line">  初始命令表示一旦容器启动，需要运行的命令，此时使用“/bin/bash”，表示什么也不做，只需进入命令行即可。</span><br></pre></td></tr></table></figure></p><p>5.检查CentOS7系统<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@b4ad1d1c87da  /]# uname -a</span><br><span class="line">Linux b4ad1d1c87da 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@b4ad1d1c87da /]# cat /etc/redhat-release </span><br><span class="line">CentOS Linux <span class="keyword">release</span> <span class="number">7.2</span><span class="number">.1511</span> (Core)</span><br></pre></td></tr></table></figure></p><p>6.退出<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ctrl+d 退出容器且关闭, </span><br><span class="line">docker ps 查看无,</span><br><span class="line">ctrl+p+q 退出容器但不关闭, </span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure></p><p>7.再进入CentOS7<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@wxtest1607 ~]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">b4ad1d1c87da        6866                "/bin/bash"         12 seconds ago      Up 9 seconds                            mad_swanson</span><br><span class="line">                  drunk_hypatia</span><br><span class="line">得到 CONTAINER ID         </span><br><span class="line">[root@wxtest1607 ~]# docker exec -ti b4ad /bin/bash  </span><br><span class="line">[root@b4ad1d1c87da /]#</span><br></pre></td></tr></table></figure></p><p>8.安装tomcat<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. yum -y <span class="keyword">install</span> tomcat</span><br><span class="line"></span><br><span class="line">注：</span><br><span class="line">       在docker中通过systemctl 启动服务的时候总是报<span class="keyword">Failed</span> <span class="keyword">to</span> <span class="keyword">get</span> D-Bus <span class="keyword">connection</span>: Operation <span class="keyword">not</span> permitted 这样的错误提示。</span><br><span class="line">    解决方法：</span><br><span class="line">       解决办法就是在docker run 的时候运行/usr/sbin/init 。比如：</span><br><span class="line">       docker run -ti <span class="number">66</span>ee /usr/sbin/init</span><br><span class="line"><span class="number">2.</span> 在Centos使用yum安装后，Tomcat相关的目录都已采用符号链接到/usr/<span class="keyword">share</span>/tomcat6目录，包含webapps等，这很方便我们配置管理</span><br></pre></td></tr></table></figure></p><p>转载：<a href="http://www.runoob.com/docker/docker-tutorial.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-tutorial.html</a></p><p>转载：<a href="http://developer.51cto.com/art/201702/529956.htm" target="_blank" rel="noopener">http://developer.51cto.com/art/201702/529956.htm</a></p><p>转载：<a href="http://www.jb51.net/article/112921.htm" target="_blank" rel="noopener">http://www.jb51.net/article/112921.htm</a></p><p>转载：<a href="https://www.jianshu.com/p/0aa535e681f5" target="_blank" rel="noopener">https://www.jianshu.com/p/0aa535e681f5</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;什么是Docker&quot;&gt;&lt;a href=&quot;#什么是Docker&quot; class=&quot;headerlink&quot; title=&quot;什么是Docker&quot;&gt;&lt;/a&gt;什么是Docker&lt;/h4&gt;&lt;p&gt;Docker 是一种“轻量级”容器技术，它几乎动摇了传统虚拟化技术的地位，现在国内外已经有越来越多的公司开始逐步使用 Docker 来替换现有的虚拟化平台了。作为一名 Java 程序员，我们是时候一起把 Docker 学起来了！&lt;/p&gt;
&lt;p&gt;1.传统虚拟化技术的体系架构：&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;/images/server/docker/virtual&quot; alt=&quot;logo&quot; title=&quot;mechine.png&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;mechine.png&lt;/div&gt;
            &lt;/figure&gt; 
&lt;p&gt;可见，我们在宿主机的操作系统上，可安装了多个虚拟机，而在每个虚拟机中，通过虚拟化技术，实现了一个虚拟操作系统，随后，就可以在该虚拟操作系统上，安装自己所需的应用程序了。这一切看似非常简单，但其中的技术细节是相当高深莫测的，大神级人物都不一定说得清楚。&lt;br&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.songshuiyang.site/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
      <category term="server" scheme="http://www.songshuiyang.site/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>mysql 用户及权限管理</title>
    <link href="http://www.songshuiyang.site/2018/03/07/Web%E5%90%8E%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql%20%E7%94%A8%E6%88%B7%E5%8F%8A%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    <id>http://www.songshuiyang.site/2018/03/07/Web后台/数据库/mysql 用户及权限管理/</id>
    <published>2018-03-07T14:24:12.000Z</published>
    <updated>2018-03-07T15:35:08.167Z</updated>
    
    <content type="html"><![CDATA[<h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><p>授权语法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">privileges</span> (<span class="keyword">columns</span>) <span class="keyword">ON</span> what <span class="keyword">TO</span> <span class="keyword">user</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">"password"</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span></span><br><span class="line"></span><br><span class="line">权限列表:</span><br><span class="line"><span class="keyword">ALTER</span>: 修改表和索引。</span><br><span class="line"><span class="keyword">CREATE</span>: 创建数据库和表。</span><br><span class="line"><span class="keyword">DELETE</span>: 删除表中已有的记录。</span><br><span class="line"><span class="keyword">DROP</span>: 抛弃(删除)数据库和表。</span><br><span class="line"><span class="keyword">INDEX</span>: 创建或抛弃索引。</span><br><span class="line"><span class="keyword">INSERT</span>: 向表中插入新行。</span><br><span class="line"><span class="keyword">REFERENCE</span>: 未用。</span><br><span class="line"><span class="keyword">SELECT</span>: 检索表中的记录。</span><br><span class="line"><span class="keyword">UPDATE</span>: 修改现存表记录。</span><br><span class="line"><span class="keyword">FILE</span>: 读或写服务器上的文件。</span><br><span class="line">PROCESS: 查看服务器中执行的线程信息或杀死线程。</span><br><span class="line">RELOAD: 重载授权表或清空日志、主机缓存或表缓存。</span><br><span class="line"><span class="keyword">SHUTDOWN</span>: 关闭服务器。</span><br><span class="line">ALL: 所有权限，ALL <span class="keyword">PRIVILEGES</span>同义词。</span><br><span class="line"><span class="keyword">USAGE</span>: 特殊的 <span class="string">"无权限"</span> 权限。</span><br><span class="line">用 户账户包括 <span class="string">"username"</span> 和 <span class="string">"host"</span> 两部分，后者表示该用户被允许从何地接入。tom@<span class="string">'%'</span> 表示任何地址，默认可以省略。还可以是 <span class="string">"tom@192.168.1.%"</span>、<span class="string">"tom@%.abc.com"</span> 等。数据库格式为 db@<span class="keyword">table</span>，可以是 <span class="string">"test.*"</span> 或 <span class="string">"*.*"</span>，前者表示 <span class="keyword">test</span> 数据库的所有表，后者表示所有数据库的所有表。</span><br><span class="line">子句 <span class="string">"WITH GRANT OPTION"</span> 表示该用户可以为其他用户分配权限。</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>实例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 新建用户, 并赋予所有数据库权限</span><br><span class="line">  <span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'host'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span><br><span class="line"></span><br><span class="line">  说明:</span><br><span class="line">    1. username - 你将创建的用户名, host - 指定该用户在哪个主机上可以登陆,如果是本地用户可用localhost, 如果想让该用户可以从任意远程主机登陆,可以使用通配符%. password - 该用户的登陆密码,密码可以为空,如果为空则该用户可以不需要密码登陆服务器.</span><br><span class="line">    2. 指定helloworld数据库: <span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> helloword.* <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'host'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span><br><span class="line"></span><br><span class="line">2. 指定该用户只能执行 <span class="keyword">select</span> 和 <span class="keyword">update</span> 命令</span><br><span class="line">  <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">UPDATE</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</span><br><span class="line"></span><br><span class="line">3. 另外每当调整权限后，通常需要执行以下语句刷新权限：</span><br><span class="line">  <span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br><span class="line"></span><br><span class="line">4. <span class="keyword">grant</span> 普通数据用户，查询、插入、更新、删除 数据库中所有表数据的权利。</span><br><span class="line">  <span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</span><br><span class="line">  <span class="keyword">grant</span> <span class="keyword">insert</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</span><br><span class="line">  <span class="keyword">grant</span> <span class="keyword">update</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</span><br><span class="line">  <span class="keyword">grant</span> <span class="keyword">delete</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</span><br><span class="line">  或者，用一条 MySQL 命令来替代：</span><br><span class="line">  <span class="keyword">grant</span> <span class="keyword">select</span>, <span class="keyword">insert</span>, <span class="keyword">update</span>, <span class="keyword">delete</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</span><br></pre></td></tr></table></figure><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1. 删除刚才创建的用户：</span><br><span class="line">  <span class="keyword">DROP</span> <span class="keyword">USER</span> username@localhost;</span><br><span class="line"></span><br><span class="line">2. 查看用户创建是否成功</span><br><span class="line">  <span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> <span class="keyword">user</span> ;</span><br><span class="line">  </span><br><span class="line">  +<span class="comment">-----------+-----------+</span></span><br><span class="line">  | user      | host      |</span><br><span class="line">  +<span class="comment">-----------+-----------+</span></span><br><span class="line">  | root      | %         |</span><br><span class="line">  | <span class="keyword">select</span>    | %         |</span><br><span class="line">  | <span class="keyword">server</span>    | %         |</span><br><span class="line">  | shuiyang  | %         |</span><br><span class="line">  | <span class="keyword">user</span>      | %         |</span><br><span class="line">  | mysql.sys | localhost |</span><br><span class="line">  +<span class="comment">-----------+-----------+</span></span><br><span class="line">  </span><br><span class="line"><span class="number">3.</span> 查看<span class="keyword">select</span>用户的授权</span><br><span class="line"> <span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> <span class="keyword">select</span>;</span><br><span class="line"> </span><br><span class="line"> MySQL [mysql]&gt;  show grants for `select`;</span><br><span class="line"> +<span class="comment">---------------------------------------------+</span></span><br><span class="line"> | Grants for <span class="keyword">select</span>@%                         |</span><br><span class="line"> +<span class="comment">---------------------------------------------+</span></span><br><span class="line"> | <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">UPDATE</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'select'</span>@<span class="string">'%'</span> |</span><br><span class="line"> +<span class="comment">---------------------------------------------+</span></span><br><span class="line"> <span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"> </span><br><span class="line"><span class="number">4.</span> 设置与更改用户密码</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">'username'</span>@<span class="string">'host'</span> = <span class="keyword">PASSWORD</span>(<span class="string">'newpassword'</span>)</span><br><span class="line"></span><br><span class="line">如果是当前登陆用户用</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> = <span class="keyword">PASSWORD</span>(<span class="string">"newpassword"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;权限控制&quot;&gt;&lt;a href=&quot;#权限控制&quot; class=&quot;headerlink&quot; title=&quot;权限控制&quot;&gt;&lt;/a&gt;权限控制&lt;/h3&gt;&lt;p&gt;授权语法：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;privileges&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;columns&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; what &lt;span class=&quot;keyword&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;OPTION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;权限列表:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt;: 修改表和索引。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt;: 创建数据库和表。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt;: 删除表中已有的记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt;: 抛弃(删除)数据库和表。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt;: 创建或抛弃索引。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt;: 向表中插入新行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;REFERENCE&lt;/span&gt;: 未用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;: 检索表中的记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt;: 修改现存表记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FILE&lt;/span&gt;: 读或写服务器上的文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PROCESS: 查看服务器中执行的线程信息或杀死线程。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RELOAD: 重载授权表或清空日志、主机缓存或表缓存。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SHUTDOWN&lt;/span&gt;: 关闭服务器。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALL: 所有权限，ALL &lt;span class=&quot;keyword&quot;&gt;PRIVILEGES&lt;/span&gt;同义词。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USAGE&lt;/span&gt;: 特殊的 &lt;span class=&quot;string&quot;&gt;&quot;无权限&quot;&lt;/span&gt; 权限。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用 户账户包括 &lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt; 和 &lt;span class=&quot;string&quot;&gt;&quot;host&quot;&lt;/span&gt; 两部分，后者表示该用户被允许从何地接入。tom@&lt;span class=&quot;string&quot;&gt;&#39;%&#39;&lt;/span&gt; 表示任何地址，默认可以省略。还可以是 &lt;span class=&quot;string&quot;&gt;&quot;tom@192.168.1.%&quot;&lt;/span&gt;、&lt;span class=&quot;string&quot;&gt;&quot;tom@%.abc.com&quot;&lt;/span&gt; 等。数据库格式为 db@&lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;，可以是 &lt;span class=&quot;string&quot;&gt;&quot;test.*&quot;&lt;/span&gt; 或 &lt;span class=&quot;string&quot;&gt;&quot;*.*&quot;&lt;/span&gt;，前者表示 &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt; 数据库的所有表，后者表示所有数据库的所有表。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;子句 &lt;span class=&quot;string&quot;&gt;&quot;WITH GRANT OPTION&quot;&lt;/span&gt; 表示该用户可以为其他用户分配权限。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="mysql" scheme="http://www.songshuiyang.site/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装Mysql5.7.md</title>
    <link href="http://www.songshuiyang.site/2018/03/07/Web%E5%90%8E%E5%8F%B0/Linux/Centos7%E5%AE%89%E8%A3%85Mysql5.7/"/>
    <id>http://www.songshuiyang.site/2018/03/07/Web后台/Linux/Centos7安装Mysql5.7/</id>
    <published>2018-03-07T12:30:44.000Z</published>
    <updated>2018-06-11T14:59:30.379Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一：配置YUM源"><a href="#一：配置YUM源" class="headerlink" title="一：配置YUM源"></a>一：配置YUM源</h4><blockquote><p>官网地址 在MySQL官网中下载YUM源rpm安装包：<a href="http://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">http://dev.mysql.com/downloads/repo/yum/</a></p></blockquote><p>1.下载mysql源安装包<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://dev.mysql.com/get/mysql57-community-<span class="keyword">release</span>-el7<span class="number">-8.</span>noarch.rpm</span><br></pre></td></tr></table></figure></p><p> 命令笔记:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">wget:</span><br><span class="line">用来从指定的URL下载文件。wget非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性，如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有用</span><br><span class="line"></span><br><span class="line">-a&lt;日志文件&gt;：在指定的日志文件中记录资料的执行过程；</span><br><span class="line">-A&lt;后缀名&gt;：指定要下载文件的后缀名，多个后缀名之间使用逗号进行分隔；</span><br><span class="line">-b：进行后台的方式运行wget；</span><br><span class="line">-B&lt;连接地址&gt;：设置参考的连接地址的基地地址；</span><br><span class="line">-c：继续执行上次终端的任务；</span><br><span class="line">-C&lt;标志&gt;：设置服务器数据块功能标志on为激活，off为关闭，默认值为on；</span><br><span class="line">-d：调试模式运行指令；</span><br><span class="line">-D&lt;域名列表&gt;：设置顺着的域名列表，域名之间用“，”分隔；</span><br><span class="line">-e&lt;指令&gt;：作为文件“.wgetrc”中的一部分执行指定的指令；</span><br><span class="line">-h：显示指令帮助信息；</span><br><span class="line">-i&lt;文件&gt;：从指定文件获取要下载的URL地址；</span><br><span class="line">-l&lt;目录列表&gt;：设置顺着的目录列表，多个目录用“，”分隔；</span><br><span class="line">-L：仅顺着关联的连接；</span><br><span class="line">-r：递归下载方式；</span><br><span class="line">-nc：文件存在时，下载文件不覆盖原有文件；</span><br><span class="line">-nv：下载时只显示更新和出错信息，不显示指令的详细执行过程；</span><br><span class="line">-q：不显示指令执行过程；</span><br><span class="line">-nh：不查询主机名称；</span><br><span class="line">-v：显示详细执行过程；</span><br><span class="line">-V：显示版本信息；</span><br><span class="line"><span class="comment">--passive-ftp：使用被动模式PASV连接FTP服务器；</span></span><br><span class="line"><span class="comment">--follow-ftp：从HTML文件中下载FTP连接文件</span></span><br><span class="line"></span><br><span class="line">下载并以不同的文件名保存:</span><br><span class="line">wget -O wordpress.zip http://www.linuxde.net/download.aspx?id=1080</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>2.安装mysql源<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum localinstall mysql57-community-<span class="keyword">release</span>-el7<span class="number">-8.</span>noarch.rpm</span><br></pre></td></tr></table></figure></p><p> 命令笔记:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">yum命令</span><br><span class="line"></span><br><span class="line">是在Fedora和RedHat以及SUSE中基于rpm的软件包管理器，它可以使系统管理人员交互和自动化地更细与管理RPM软件包，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软体包，无须繁琐地一次次下载、安装。</span><br><span class="line"></span><br><span class="line">选项:</span><br><span class="line">-h：显示帮助信息；</span><br><span class="line">-y：对所有的提问都回答“yes”；</span><br><span class="line">-c：指定配置文件；</span><br><span class="line">-q：安静模式；</span><br><span class="line">-v：详细模式；</span><br><span class="line">-d：设置调试等级（0-10）；</span><br><span class="line">-e：设置错误等级（0-10）；</span><br><span class="line">-R：设置yum处理一个命令的最大等待时间；</span><br><span class="line">-C：完全从缓存中运行，而不去下载或者更新任何头文件。</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line"><span class="keyword">install</span>：安装rpm软件包；</span><br><span class="line"><span class="keyword">update</span>：更新rpm软件包；</span><br><span class="line"><span class="keyword">check</span>-<span class="keyword">update</span>：检查是否有可用的更新rpm软件包；</span><br><span class="line">remove：删除指定的rpm软件包；</span><br><span class="line"><span class="keyword">list</span>：显示软件包的信息；</span><br><span class="line"><span class="keyword">search</span>：检查软件包的信息；</span><br><span class="line">info：显示指定的rpm软件包的描述信息和概要信息；</span><br><span class="line">clean：清理yum过期的缓存；</span><br><span class="line">shell：进入yum的shell提示符；</span><br><span class="line">resolvedep：显示rpm软件包的依赖关系；</span><br><span class="line">localinstall：安装本地的rpm软件包；</span><br><span class="line">localupdate：显示本地rpm软件包进行更新；</span><br><span class="line">deplist：显示rpm软件包的所有依赖关系。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line">部分常用的命令包括：</span><br><span class="line"></span><br><span class="line">自动搜索最快镜像插件：yum <span class="keyword">install</span> yum-fastestmirror</span><br><span class="line">安装yum图形窗口插件：yum <span class="keyword">install</span> yumex</span><br><span class="line">查看可能批量安装的列表：yum grouplist</span><br></pre></td></tr></table></figure></p><p>3.检查mysql源是否安装成功<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist enabled | grep "mysql.*-community.*"</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/server/linux/mysql_install_success.png" alt="logo" title="">                </div>                <div class="image-caption">logo</div>            </figure> <p>看到上图所示表示mysql源安装成功。</p><p>可以修改vim /etc/yum.repos.d/mysql-community.repo源，改变默认安装的mysql版本。比如要安装5.6版本，将5.7源的enabled=1改成enabled=0。然后再将5.6源的enabled=0改成enabled=1即可 </p><h4 id="二-安装MySQL"><a href="#二-安装MySQL" class="headerlink" title="二 安装MySQL"></a>二 安装MySQL</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> mysql-community-<span class="keyword">server</span></span><br></pre></td></tr></table></figure><p>命令笔记:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">安装</span><br><span class="line"></span><br><span class="line">yum <span class="keyword">install</span>              #全部安装</span><br><span class="line">yum <span class="keyword">install</span> package1     #安装指定的安装包package1</span><br><span class="line">yum groupinsall group1   #安装程序组group1</span><br><span class="line"></span><br><span class="line">更新和升级</span><br><span class="line"></span><br><span class="line">yum <span class="keyword">update</span>               #全部更新</span><br><span class="line">yum <span class="keyword">update</span> package1      #更新指定程序包package1</span><br><span class="line">yum <span class="keyword">check</span>-<span class="keyword">update</span>         #检查可更新的程序</span><br><span class="line">yum <span class="keyword">upgrade</span> package1     #升级指定程序包package1</span><br><span class="line">yum groupupdate group1   #升级程序组group1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查找和显示</span><br><span class="line"></span><br><span class="line">yum info package1      #显示安装包信息package1</span><br><span class="line">yum <span class="keyword">list</span>               #显示所有已经安装和可以安装的程序包</span><br><span class="line">yum <span class="keyword">list</span> package1      #显示指定程序包安装情况package1</span><br><span class="line">yum groupinfo group1   #显示程序组group1信息yum <span class="keyword">search</span> <span class="keyword">string</span> 根据关键字<span class="keyword">string</span>查找安装包</span><br><span class="line"></span><br><span class="line">删除程序</span><br><span class="line"></span><br><span class="line">yum remove &amp;#124; erase package1   #删除程序包package1</span><br><span class="line">yum groupremove group1             #删除程序组group1</span><br><span class="line">yum deplist package1               #查看程序package1依赖情况</span><br></pre></td></tr></table></figure></p><h4 id="三：启动MySQL服务"><a href="#三：启动MySQL服务" class="headerlink" title="三：启动MySQL服务"></a>三：启动MySQL服务</h4><p>1.启动<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">start</span> mysqld</span><br></pre></td></tr></table></figure></p><p>命令笔记：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">systemctl</span><br><span class="line"></span><br><span class="line">是系统服务管理器指令，它实际上将 service 和 chkconfig 这两个命令组合到一起。</span><br><span class="line"></span><br><span class="line">任务                旧指令                        新指令</span><br><span class="line">使某服务自动启动    chkconfig <span class="comment">--level 3 httpd onsystemctl enable httpd.service</span></span><br><span class="line">使某服务不自动启动chkconfig <span class="comment">--level 3 httpd offsystemctl disable httpd.service</span></span><br><span class="line">检查服务状态        service httpd status        systemctl status httpd.service （服务详细信息） systemctl is-active httpd.service （仅显示是否 Active)</span><br><span class="line">显示所有已启动的服务chkconfig <span class="comment">--list            systemctl list-units --type=service</span></span><br><span class="line">启动某服务        service httpd <span class="keyword">start</span>            systemctl <span class="keyword">start</span> httpd.service</span><br><span class="line">停止某服务        service httpd <span class="keyword">stop</span>            systemctl <span class="keyword">stop</span> httpd.service</span><br><span class="line">重启某服务        service httpd restart        systemctl restart httpd.service</span><br></pre></td></tr></table></figure></p><p>2.查看状态<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">查看MySQL的启动状态</span><br><span class="line">systemctl status mysqld</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">● mysqld.service - MySQL Server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Wed 2018-03-07 21:14:55 CST; 18min ago</span><br><span class="line">     Docs: man:mysqld(8)</span><br><span class="line">           http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">  Process: 17338 ExecStart=/usr/sbin/mysqld <span class="comment">--daemonize --pid-file=/var/run/mysqld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS)</span></span><br><span class="line">  Process: 17320 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 17343 (mysqld)</span><br><span class="line">   CGroup: /system.slice/mysqld.service</span><br><span class="line">           └─17343 /usr/sbin/mysqld <span class="comment">--daemonize --pid-file=/var/run/mysqld/mysqld.pid</span></span><br><span class="line"></span><br><span class="line">Mar 07 21:14:54 VM_0_8_centos systemd[1]: Starting MySQL Server...</span><br><span class="line">Mar 07 21:14:55 VM_0_8_centos systemd[1]: Started MySQL Server.</span><br></pre></td></tr></table></figure></p><p>3.开机启动<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mysqld</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></p><p>4.修改root本地登录密码<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql安装完成之后，在/var/log/mysqld.log文件中给root生成了一个默认密码。通过下面的方式找到root默认密码，然后登录mysql进行修改：</span><br><span class="line">1. 修改密码策略</span><br><span class="line">      mysql5.7默认安装了密码安全检查插件（validate_password），默认密码检查策略要求密码必须包含：大小写字母、数字和特殊符号，并且长度不能少于8位。否则会提示ERROR 1819 (HY000): Your password does not satisfy the current policy requirements错误</span><br><span class="line"></span><br><span class="line">   步骤1：不需要密码策略，添加/etc/my.cnf件中添加如下配置禁用即可：</span><br><span class="line">   validate_password = off</span><br><span class="line">   步骤2：重新启动mysql服务使配置生效：</span><br><span class="line">   systemctl restart mysqld   </span><br><span class="line"></span><br><span class="line">2. 查看初始密码： </span><br><span class="line">      grep 'temporary password' /var/log/mysqld.log</span><br><span class="line">   输出： </span><br><span class="line">      2018-03-07T13:01:08.963552Z 1 [Note] A temporary password is generated for root@localhost: zktt1wKFD.HN</span><br><span class="line"></span><br><span class="line">   得到临时密码: zktt1wKFD.HN</span><br><span class="line"></span><br><span class="line">3. 登录mysql: </span><br><span class="line">      mysql -uroot -p</span><br><span class="line">   输入临时密码进入mysql命令行</span><br><span class="line"></span><br><span class="line">4. 修改密码</span><br><span class="line">    <span class="keyword">set</span> <span class="keyword">password</span> <span class="keyword">for</span> <span class="string">'root'</span>@<span class="string">'localhost'</span>=<span class="keyword">password</span>(<span class="string">'MyNewPass4!'</span>);</span><br><span class="line">    </span><br><span class="line">5. 重启服务</span><br><span class="line">   systemctl restart mysqld</span><br></pre></td></tr></table></figure></p><h4 id="四：开启远程连接"><a href="#四：开启远程连接" class="headerlink" title="四：开启远程连接"></a>四：开启远程连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">登入mysql</span><br><span class="line">  mysql -uroot -p</span><br><span class="line">  </span><br><span class="line">使用mysql数据库</span><br><span class="line">  <span class="keyword">use</span> mysql;</span><br><span class="line">  </span><br><span class="line">开启远程连接（root 用户名，% 所有人都可以访问 ，password 密码）</span><br><span class="line">  <span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'root'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span><br><span class="line">  </span><br><span class="line">  也可以添加一个新用户: </span><br><span class="line">  <span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'shuiyang'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password!'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>; </span><br><span class="line">  </span><br><span class="line">重起mysql服务</span><br><span class="line">  service mysqld restart</span><br><span class="line">如果执行完以上步骤，还是不能远程连接，那么我们需要查看服务器的防火墙是否开启</span><br><span class="line">  service iptables status</span><br><span class="line">如果防火墙开启，请关闭</span><br><span class="line">  service iptables <span class="keyword">stop</span></span><br></pre></td></tr></table></figure><h4 id="五：配置默认编码为utf8"><a href="#五：配置默认编码为utf8" class="headerlink" title="五：配置默认编码为utf8"></a>五：配置默认编码为utf8</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示：</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">character_set_server=utf8</span><br><span class="line">init_connect='<span class="keyword">SET</span> <span class="keyword">NAMES</span> utf8<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">重新启动mysql服务，查看数据库默认编码如下所示：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; show variables like '</span>%<span class="built_in">character</span>%<span class="string">';</span></span><br><span class="line"><span class="string">+--------------------------+----------------------------+</span></span><br><span class="line"><span class="string">| Variable_name            | Value                      |</span></span><br><span class="line"><span class="string">+--------------------------+----------------------------+</span></span><br><span class="line"><span class="string">| character_set_client     | utf8                       |</span></span><br><span class="line"><span class="string">| character_set_connection | utf8                       |</span></span><br><span class="line"><span class="string">| character_set_database   | utf8                       |</span></span><br><span class="line"><span class="string">| character_set_filesystem | binary                     |</span></span><br><span class="line"><span class="string">| character_set_results    | utf8                       |</span></span><br><span class="line"><span class="string">| character_set_server     | utf8                       |</span></span><br><span class="line"><span class="string">| character_set_system     | utf8                       |</span></span><br><span class="line"><span class="string">| character_sets_dir       | /usr/share/mysql/charsets/ |</span></span><br><span class="line"><span class="string">+--------------------------+----------------------------+</span></span><br><span class="line"><span class="string">8 rows in set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p>备注：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">默认配置文件路径： </span><br><span class="line">配置文件：/etc/my.cnf </span><br><span class="line">日志文件：/var/log//var/log/mysqld.log </span><br><span class="line">服务启动脚本：/usr/lib/systemd/system/mysqld.service </span><br><span class="line">socket文件：/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure></p><p>转载：<a href="https://www.linuxidc.com/Linux/2016-09/135288.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2016-09/135288.htm</a><br>转载:<a href="http://blog.csdn.net/sun614345456/article/details/53672150" target="_blank" rel="noopener">http://blog.csdn.net/sun614345456/article/details/53672150</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一：配置YUM源&quot;&gt;&lt;a href=&quot;#一：配置YUM源&quot; class=&quot;headerlink&quot; title=&quot;一：配置YUM源&quot;&gt;&lt;/a&gt;一：配置YUM源&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;官网地址 在MySQL官网中下载YUM源rpm安装包：&lt;a href=&quot;http://dev.mysql.com/downloads/repo/yum/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.下载mysql源安装包&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget http://dev.mysql.com/get/mysql57-community-&lt;span class=&quot;keyword&quot;&gt;release&lt;/span&gt;-el7&lt;span class=&quot;number&quot;&gt;-8.&lt;/span&gt;noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 命令笔记:&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用来从指定的URL下载文件。wget非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性，如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-a&amp;lt;日志文件&amp;gt;：在指定的日志文件中记录资料的执行过程；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-A&amp;lt;后缀名&amp;gt;：指定要下载文件的后缀名，多个后缀名之间使用逗号进行分隔；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-b：进行后台的方式运行wget；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-B&amp;lt;连接地址&amp;gt;：设置参考的连接地址的基地地址；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-c：继续执行上次终端的任务；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-C&amp;lt;标志&amp;gt;：设置服务器数据块功能标志on为激活，off为关闭，默认值为on；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-d：调试模式运行指令；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-D&amp;lt;域名列表&amp;gt;：设置顺着的域名列表，域名之间用“，”分隔；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-e&amp;lt;指令&amp;gt;：作为文件“.wgetrc”中的一部分执行指定的指令；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-h：显示指令帮助信息；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-i&amp;lt;文件&amp;gt;：从指定文件获取要下载的URL地址；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-l&amp;lt;目录列表&amp;gt;：设置顺着的目录列表，多个目录用“，”分隔；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-L：仅顺着关联的连接；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-r：递归下载方式；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-nc：文件存在时，下载文件不覆盖原有文件；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-nv：下载时只显示更新和出错信息，不显示指令的详细执行过程；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-q：不显示指令执行过程；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-nh：不查询主机名称；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v：显示详细执行过程；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-V：显示版本信息；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--passive-ftp：使用被动模式PASV连接FTP服务器；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--follow-ftp：从HTML文件中下载FTP连接文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;下载并以不同的文件名保存:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget -O wordpress.zip http://www.linuxde.net/download.aspx?id=1080&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.songshuiyang.site/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
      <category term="server" scheme="http://www.songshuiyang.site/tags/server/"/>
    
  </entry>
  
</feed>
