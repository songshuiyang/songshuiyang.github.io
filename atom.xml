<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>宋水阳个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.songshuiyang.site/"/>
  <updated>2018-04-03T15:59:05.984Z</updated>
  <id>http://www.songshuiyang.site/</id>
  
  <author>
    <name>songshuiyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信公众号实现输入兑换码自动发红包功能</title>
    <link href="http://www.songshuiyang.site/2018/04/03/Web%E5%90%8E%E5%8F%B0/%E6%94%AF%E4%BB%98/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E9%80%9A%E5%8F%91%E7%BA%A2%E5%8C%85%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.songshuiyang.site/2018/04/03/Web后台/支付/微信公众号开通发红包功能/</id>
    <published>2018-04-03T14:15:12.000Z</published>
    <updated>2018-04-03T15:59:05.984Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p> 公司积分抽奖活动有红包奖项(虽然基本上都是这个奖)，但是用户兑奖的过程十分麻烦: 需要先联系公司客服，然后加客服微信，加完之后客服发一个微信红包作为兑换。所以决定简化这个兑奖过程，能不能将这个兑奖的过程改为由用户自己兑换，不用联系公司客服也能兑奖。</p><h3 id="初步想法"><a href="#初步想法" class="headerlink" title="初步想法"></a>初步想法</h3><p> 公司有微信公众号，可以通过微信公众号进行发红包操作，一方面可以实现发送红包的功能，另一方面也可以推广公司的微信公众号。初步想法是用户在微信公众号里输入一个兑换码，然后微信自动发送一个红包给用户，用户只要点一下红包，红包就进用户自己口袋了</p><h3 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h3><p>如果用户抽奖中了红包奖励，系统弹出一个提示框，里面有公司的微信公众号二维码图片（微信公众平台可以获取），及兑奖的兑换码，提示用户关注微信公众号，在公众号里面输入兑换码就可以获取红包</p><a id="more"></a><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>1、先介绍几个平台</p><p>I.微信公众平台:是微信公众账号申请入口和管理后台。商户可以在公众平台提交基本资料、业务资料、财务资料申请开通微信支付功能。</p><p>平台入口：<a href="http://mp.weixin.qq.com。" target="_blank" rel="external">http://mp.weixin.qq.com。</a></p><p>II.微信商户平台:微信商户平台是微信支付相关的商户功能集合，包括参数配置、支付数据查询与统计、在线退款、代金券或立减优惠运营等功能。</p><p>平台入口：<a href="http://pay.weixin.qq.com" target="_blank" rel="external">http://pay.weixin.qq.com</a></p><p>III. 红包接口地址： <a href="https://pay.weixin.qq.com/wiki/doc/api/tools/cash_coupon.php?chapter=13_4&amp;index=3" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/tools/cash_coupon.php?chapter=13_4&amp;index=3</a></p><p>2、 在微信公众平台获取公众号二维码图片（提供了多种尺寸大小），该二维码是提供给用户扫描， 及公众账号appid</p><p>3、 在微信商户平台上下载证书（账户中心 - 账户设置 - API安全 - API证书（下载zip压缩包格式即可，无须解压），获取 商户号（账户中心 - 账户设置 - 商户信息 - 基本账户信息 - 微信支付商户号），API密钥（账户中心 - 账户设置 - API安全 - API密钥 - 设置密钥（密钥为32位，需要自行重新设置，记录并保存好，实在没记住也可以更改） 这些参数</p><p>4、 开通红包功能，以及充值红包金额，红包金额与充值交易金额是区分开来的，所以需要单独充值，发放现金红包将扣除商户的可用余额，请注意，可用余额并不是微信支付交易额，需要预先充值，确保可用余额充足。查看可用余额、充值、提现请登录微信支付商户平台，进入“资金管理”菜单，进行操作</p><p>5、 介绍<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">现金红包简介</div><div class="line">微信红包，<span class="number">2014</span>年春节一经推出即受到广大用户好评，引发全民抢红包热潮。现将微信红包打造成“现金红包”，成为一款定向资金发放的营销工具，供商户使用。</div><div class="line"></div><div class="line">申请红包条件</div><div class="line"><span class="number">1</span>、T+<span class="number">0</span> 结算商户需满足两个条件：<span class="number">1</span>、入驻满<span class="number">90</span>天，<span class="number">2</span>、截止今日往回推<span class="number">30</span>天内连续正常交易。</div><div class="line"><span class="number">2</span>、其余结算周期的商户无限制，可立即前往【商户平台】-&gt;【产品中心】申请开通。</div><div class="line"></div><div class="line">发放方式介绍</div><div class="line">商户发放现金红包有<span class="number">3</span>种发放方式：</div><div class="line"><span class="number">1</span>）接口发放</div><div class="line">商户根据文档”【商户平台】现金红包API文档V2“进行开发，一次调用可以给一个指定用户发送一个指定金额的红包，满足多元化的运营需求；</div><div class="line"><span class="number">2</span>）通过上传openid文件发放</div><div class="line">收集要发送红包对象的openid，将openid编辑成txt文件，登录微信支付商户平台，使用上传文件功能发放。一份文件对应一个红包模板，便于管理；</div><div class="line">为了防止商户手误重复操作发送红包，创建的同一个文件只能上传一次。若需要重复发放则需要修改文件名称或重新创建。</div><div class="line"><span class="number">3</span>）配置营销规则“满额送”发放</div><div class="line">配置的规则不可使用红包模版进行发放，商户须在【产品中心】-【现金红包】-【前往功能】中创建红包后配置自助规则：用户使用微信支付发生交易满足一定条件，立送现金红包。</div><div class="line"></div><div class="line">税务和发票问题</div><div class="line">商户给用户发红包，微信支付按照商户指定红包金额扣除完全对等的充值资金，资金最终进入用户零钱。微信支付并未从中收取资金作为营收，所以不予开具发票。</div><div class="line">发放现金红包请商户遵照国家法律依法纳税，在商户充值之前，我们默认商户已经合法上税，商户使用本功能的行为若涉及纳税或代扣代缴税款的义务，由商户自行承担该义务，我们不会替商户缴纳税款 。</div></pre></td></tr></table></figure></p><h3 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h3><p>1、用户抽奖中了红包奖励, 生成一笔抽奖记录，同时生成一笔红包记录，所以需要新建一个红包记录表(表结构如下图)，一开始生成的记录中红包状态是 0-未发放的状态，同时生成兑换码。</p><p>兑换码规则：</p><p>10位大写字母：3位固定字母开头 + 7位随机字母（大写字母是为了防止【数字0 与字母o O】【 1与字母l】混淆导致用户兑换不了奖， 3位固定字母是为了防止恶意用户无限次输入兑换码导致老是触发红包处理程序，如果不是以这个三个字母开头的文字，统一回复欢迎关注本微信公众号）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`ge_lottery_redpack_record`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`ge_lottery_redpack_record`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`created_by`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`created_date`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`last_modified_by`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`last_modified_date`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`remarks`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`version`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`locked`</span> <span class="built_in">bit</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> b<span class="string">'0'</span>,</div><div class="line">  <span class="string">`enable`</span> <span class="built_in">bit</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> b<span class="string">'0'</span>,</div><div class="line">  <span class="string">`fd_lottery_record_id`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'中奖纪录id 作为外键'</span>,</div><div class="line">  <span class="string">`fd_status`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'红包状态 0:未发放 1：已发放待领取 2：发放失败 3：已领取 4：未领取已退款'</span>,</div><div class="line">  <span class="string">`fd_redpack_send_date`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'红包发送时间(非微信)'</span>,</div><div class="line">  <span class="string">`fd_redpack_order_id`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'微信红包订单单号'</span>,</div><div class="line">  <span class="string">`fd_redpack_openid`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'微信红包订单用户在wxappid下的openid'</span>,</div><div class="line">  <span class="string">`fd_redeem_code`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'兑换码'</span>,</div><div class="line">  <span class="string">`fd_redpack_price`</span> <span class="built_in">decimal</span>(<span class="number">19</span>,<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'红包金额'</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'抽奖红包纪录表'</span>;</div></pre></td></tr></table></figure><p>2、用户得到兑换码之后，就是在微信公众号里输入兑换码，当用户输入兑换码之后，用户信息会发到我们自己服务器后台中, 这里用户触发的是文本事件，我们需要的是三个参数</p><p>(1) 用户微信OpenID（用户在本微信公众号的唯一标识）</p><p>(2) 用户发的兑换码</p><p>(3) HttpServletRequest（用于获取用户ip，发红包接口入参需要）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 文本事件</span></div><div class="line"><span class="keyword">if</span> (WechatBindUtil.MESSAGE_TEXT.equals(msgType)) &#123;</div><div class="line">    String content = map.get(<span class="string">"Content"</span>).trim();</div><div class="line">    <span class="comment">// 如果输入的文本是是以RED开头的, 执行发红包操作</span></div><div class="line">    <span class="keyword">if</span> (content.startsWith(<span class="string">"RED"</span>)) &#123;</div><div class="line">        String resultContent = lotteryRedpackRecordService.sendRedpackByRedeemCode(fromUserName,content,req);</div><div class="line">        message = WechatBindUtil.initText(toUserName, fromUserName, resultContent);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        message = WechatBindUtil.initText(toUserName, fromUserName, <span class="string">"欢迎关注本微信公众号"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>3、如果输入的文本是是以RED开头的, 执行发红包操作, 首先是查询红包记录表有没有该兑换码且红包状态为未发放，如果有的话调用微信发红包接口，同时更改红包状态，记录<br>红包发送时间，微信红包订单单号，微信红包订单用户在wxappid下的openid，没有的话给出提示，实现如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 根据兑换码发送微信红包</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> openid</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> redeemCode</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sendRedpackByRedeemCode</span> <span class="params">(String openid, String redeemCode, HttpServletRequest request)</span> </span>&#123;</div><div class="line">    Page&lt;LotteryRedpackRecord&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">0</span>);</div><div class="line">    page.setParams(<span class="string">"fdRedeemCode"</span>,redeemCode);</div><div class="line">    List&lt;LotteryRedpackRecord&gt; redpackRecords = findAutoByPage(page);</div><div class="line">    <span class="keyword">if</span> (redpackRecords.size() != <span class="number">0</span>) &#123;</div><div class="line">        LotteryRedpackRecord oldRecord = redpackRecords.get(<span class="number">0</span>);</div><div class="line">        <span class="comment">// 调用微信红包查询接口, 先更新红包纪录状态</span></div><div class="line">        updateRedpackState(oldRecord.getId());</div><div class="line"></div><div class="line">        <span class="comment">// 更新完成之后获取新的红包纪录</span></div><div class="line">        LotteryRedpackRecord record = findById(oldRecord.getId());</div><div class="line">        Integer fdStatus = record.getFdStatus();</div><div class="line">        <span class="keyword">if</span> (fdStatus.equals(R.LotteryRedpackRecord.FdStatus.未发放.getIndex())) &#123;</div><div class="line">            RedpackDTO redpackDTO = <span class="keyword">new</span> RedpackDTO();</div><div class="line">            <span class="comment">// 以红包纪录id作为 微信红包接口请求的商品订单号 截取28位</span></div><div class="line">            String mchBillNo = record.getId();</div><div class="line">            mchBillNo= mchBillNo.substring(<span class="number">0</span>,<span class="number">28</span>);</div><div class="line">            redpackDTO.setMchBillNo(mchBillNo);</div><div class="line">            <span class="comment">// 指定哪一个微信用户</span></div><div class="line">            redpackDTO.setReOpenid(openid);</div><div class="line">            <span class="comment">// 红包价格</span></div><div class="line">            redpackDTO.setTotalAmount(record.getFdRedpackPrice());</div><div class="line">            <span class="comment">// 调用接口的机器Ip地址</span></div><div class="line">            String clientIp = WxUtils.getRemoteIp(request);</div><div class="line">            redpackDTO.setClientIp(clientIp);</div><div class="line">            Map&lt;String,String&gt; sendredpackResult = weixinPayService.sendredpack(redpackDTO);</div><div class="line"></div><div class="line">            <span class="comment">// 更新红包纪录表</span></div><div class="line">            LotteryRedpackRecord lotteryRedpackRecord = findById(record.getId());</div><div class="line">            lotteryRedpackRecord.setFdRedpackOpenid(openid);</div><div class="line">            <span class="keyword">if</span> (sendredpackResult.get(<span class="string">"status"</span>).equals(<span class="string">"success"</span>)) &#123;</div><div class="line">                lotteryRedpackRecord.setFdStatus(R.LotteryRedpackRecord.FdStatus.已发放待领取.getIndex());</div><div class="line">                <span class="comment">// 红包订单的微信单号-微信服务器上红包纪录的唯一标识</span></div><div class="line">                String redpackOrderId = sendredpackResult.get(<span class="string">"sendListid"</span>);</div><div class="line">                lotteryRedpackRecord.setFdRedpackOrderId(redpackOrderId);</div><div class="line">                lotteryRedpackRecord.setFdRedpackSendDate(<span class="keyword">new</span> Date());</div><div class="line"></div><div class="line">                <span class="comment">// 更新抽奖纪录表, 变为已兑换</span></div><div class="line">                LotteryRecord lotteryRecord = lotteryRecordService.findById(record.getFdLotteryRecordId());</div><div class="line">                lotteryRecord.setFdStatus(R.LotteryRecordItem.FdStatus.已兑换.getIndex());</div><div class="line">                lotteryRecordService.saveSelective(lotteryRecord);</div><div class="line">                saveSelective(lotteryRedpackRecord);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                lotteryRedpackRecord.setFdStatus(R.LotteryRedpackRecord.FdStatus.发放失败.getIndex());</div><div class="line">                lotteryRedpackRecord.setRemarks(sendredpackResult.get(<span class="string">"message"</span>));</div><div class="line">                saveSelective(lotteryRedpackRecord);</div><div class="line">                <span class="keyword">return</span> <span class="string">"红包发送失败, 请及时联系对应的客服!"</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fdStatus.equals(R.LotteryRedpackRecord.FdStatus.已发放待领取.getIndex())) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">"该兑换码对应的红包已发送! 请注意查收"</span>;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fdStatus.equals(R.LotteryRedpackRecord.FdStatus.发放失败.getIndex())) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">"红包发送失败, 请及时联系对应的客服!"</span>;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fdStatus.equals(R.LotteryRedpackRecord.FdStatus.已领取.getIndex())) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">"该兑换码对应的红包已领取"</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">"该兑换码对应的红包已过时, 请及时联系对应的客服"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"该兑换码无效, 请输入正确的兑换码!"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="string">"红包已发送请注意查收! 注: 24小时后未领取该红包失效"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>4、调用微信红包接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 微信公众号发红包接口</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> redpackDTO</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> Map&lt;String,String&gt; <span class="title">sendredpack</span><span class="params">(RedpackDTO redpackDTO)</span> </span>&#123;</div><div class="line">    Map&lt;String,String&gt; resultMap = Maps.newHashMap();</div><div class="line">    Map&lt;String,String&gt; wxResultMap = Maps.newHashMap();</div><div class="line">    <span class="comment">// 请求参数</span></div><div class="line">    Map&lt;String, String&gt; reqData = Maps.newHashMap();</div><div class="line">    logger.info(<span class="string">"---------------------&gt;&gt;&gt; 开始发送红包start"</span>, redpackDTO);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="comment">// 随机字符串</span></div><div class="line">        reqData.put(<span class="string">"nonce_str"</span>, WXPayUtil.generateNonceStr());</div><div class="line">        <span class="comment">// 商户订单号</span></div><div class="line">        reqData.put(<span class="string">"mch_billno"</span>,redpackDTO.getMchBillNo());</div><div class="line">        <span class="comment">// 商户号</span></div><div class="line">        reqData.put(<span class="string">"mch_id"</span>, WxPcPayConfigImpl.MCH_ID);</div><div class="line">        <span class="comment">// 公众账号appid</span></div><div class="line">        reqData.put(<span class="string">"wxappid"</span>, WxPcPayConfigImpl.SENDREDPACK_WX_APPID);</div><div class="line">        <span class="comment">// 商户名称</span></div><div class="line">        reqData.put(<span class="string">"send_name"</span>, WxPcPayConfigImpl.SENDREDPACK_SEND_NAME);</div><div class="line">        <span class="comment">// 用户openid</span></div><div class="line">        reqData.put(<span class="string">"re_openid"</span>,redpackDTO.getReOpenid());</div><div class="line">        <span class="comment">// 付款金额</span></div><div class="line">        reqData.put(<span class="string">"total_amount"</span>, AmountUtils.transAmountToCent(redpackDTO.getTotalAmount()));</div><div class="line">        <span class="comment">// 红包发放总人数</span></div><div class="line">        reqData.put(<span class="string">"total_num"</span>, WxPcPayConfigImpl.SENDREDPACK_TOTAL_NUM);</div><div class="line">        <span class="comment">// 红包祝福语</span></div><div class="line">        reqData.put(<span class="string">"wishing"</span>, WxPcPayConfigImpl.SENDREDPACK_WISHING);</div><div class="line">        <span class="comment">// Ip地址</span></div><div class="line">        reqData.put(<span class="string">"client_ip"</span>, redpackDTO.getClientIp());</div><div class="line">        <span class="comment">// 活动名称</span></div><div class="line">        reqData.put(<span class="string">"act_name"</span>, WxPcPayConfigImpl.SENDREDPACK_ACT_NAME);</div><div class="line">        <span class="comment">//备注</span></div><div class="line">        reqData.put(<span class="string">"remark"</span>, WxPcPayConfigImpl.SENDREDPACK_REMARK);</div><div class="line">        <span class="comment">// 生成签名</span></div><div class="line">        reqData.put(<span class="string">"sign"</span>, WXPayUtil.generateSignature(reqData, WxPcPayConfigImpl.API_KEY, WXPayConstants.SignType.MD5 ));</div><div class="line">        String respXml = wxpay.requestWithCert(WxPcPayConfigImpl.SENDREDPACK_URL,reqData , <span class="number">10000</span>, <span class="number">10000</span>);</div><div class="line">        wxResultMap = WXPayUtil.xmlToMap(respXml);</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">        logger.info(<span class="string">"---------------------&gt;&gt;&gt; 微信公众号发送红包异常"</span>);</div><div class="line">        resultMap.put(<span class="string">"message"</span>, e.getMessage());</div><div class="line">        resultMap.put(<span class="string">"status"</span>, <span class="string">"failed"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 通信标识结果</span></div><div class="line">    String returnCode = wxResultMap.get(<span class="string">"return_code"</span>);</div><div class="line">    <span class="keyword">if</span> (<span class="string">"SUCCESS"</span>.equals(returnCode)) &#123;</div><div class="line">        String resultCode = wxResultMap.get(<span class="string">"result_code"</span>);</div><div class="line">        <span class="comment">// 业务处理结果</span></div><div class="line">        <span class="keyword">if</span> (<span class="string">"SUCCESS"</span>.equals(resultCode)) &#123;</div><div class="line">            logger.info(<span class="string">"---------------------&gt;&gt;&gt; 微信公众号发送红包成功"</span>);</div><div class="line">            <span class="comment">// 红包订单的微信单号</span></div><div class="line">            String sendListid = wxResultMap.get(<span class="string">"send_listid"</span>);</div><div class="line">            resultMap.put(<span class="string">"sendListid"</span>,sendListid);</div><div class="line">            resultMap.put(<span class="string">"message"</span>,<span class="string">"操作成功"</span>);</div><div class="line">            resultMap.put(<span class="string">"status"</span>, <span class="string">"success"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            logger.info(<span class="string">"---------------------&gt;&gt;&gt; 微信公众号发送红包失败, 原因: "</span> + wxResultMap.get(<span class="string">"err_code_des"</span>));</div><div class="line">            String errCodeDes = wxResultMap.get(<span class="string">"err_code_des"</span>);</div><div class="line">            resultMap.put(<span class="string">"message"</span>,errCodeDes);</div><div class="line">            resultMap.put(<span class="string">"status"</span>, <span class="string">"failed"</span>);</div><div class="line">            <span class="keyword">return</span> resultMap;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        String returnMsg = wxResultMap.get(<span class="string">"return_msg"</span>);</div><div class="line">        logger.info(<span class="string">"---------------------&gt;&gt;&gt; 微信公众号发送红包失败, 原因: "</span> + returnMsg);</div><div class="line">        resultMap.put(<span class="string">"message"</span>, returnMsg);</div><div class="line">        resultMap.put(<span class="string">"status"</span>, <span class="string">"failed"</span>);</div><div class="line">        <span class="keyword">return</span> resultMap;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> resultMap;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="总结及注意事项"><a href="#总结及注意事项" class="headerlink" title="总结及注意事项"></a>总结及注意事项</h3><p>1.红包是以分为单位，必须大于100分，小于20000分之间，这个很重要,不要一不小心把公司的钱都转出去了</p><p>2.需要对请求参数进行加签操作，wxpay里面封装了方法</p><p>3.现金红包接口请求是需要证书的，因为是出账，不像充值是属于进账不用证书， 需要调用<code>requestWithCert</code> 这个请求接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 需要证书的请求</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> strUrl String</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> reqData 向wxpay post的请求数据  Map</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> connectTimeoutMs 超时时间，单位是毫秒</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> readTimeoutMs 超时时间，单位是毫秒</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span> API返回数据</span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">requestWithCert</span><span class="params">(String strUrl, Map&lt;String, String&gt; reqData,</span></span></div><div class="line"><span class="function"><span class="params">                              <span class="keyword">int</span> connectTimeoutMs, <span class="keyword">int</span> readTimeoutMs)</span> <span class="keyword">throws</span> Exception </span>&#123;</div></pre></td></tr></table></figure><p>4.由于红包发出去了不知道用户有没有领取，所以可以用一个定时任务或者一个按钮调用微信红包状态查询接口，以更新红包的最新状态</p><p>5.可以借助第三方平台，如摇摇啦应用平台，借助这些平台可以不用开发接口，只要配置好参数就可以使用了，但唯一的缺点是要钱</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt; 公司积分抽奖活动有红包奖项(虽然基本上都是这个奖)，但是用户兑奖的过程十分麻烦: 需要先联系公司客服，然后加客服微信，加完之后客服发一个微信红包作为兑换。所以决定简化这个兑奖过程，能不能将这个兑奖的过程改为由用户自己兑换，不用联系公司客服也能兑奖。&lt;/p&gt;
&lt;h3 id=&quot;初步想法&quot;&gt;&lt;a href=&quot;#初步想法&quot; class=&quot;headerlink&quot; title=&quot;初步想法&quot;&gt;&lt;/a&gt;初步想法&lt;/h3&gt;&lt;p&gt; 公司有微信公众号，可以通过微信公众号进行发红包操作，一方面可以实现发送红包的功能，另一方面也可以推广公司的微信公众号。初步想法是用户在微信公众号里输入一个兑换码，然后微信自动发送一个红包给用户，用户只要点一下红包，红包就进用户自己口袋了&lt;/p&gt;
&lt;h3 id=&quot;业务流程&quot;&gt;&lt;a href=&quot;#业务流程&quot; class=&quot;headerlink&quot; title=&quot;业务流程&quot;&gt;&lt;/a&gt;业务流程&lt;/h3&gt;&lt;p&gt;如果用户抽奖中了红包奖励，系统弹出一个提示框，里面有公司的微信公众号二维码图片（微信公众平台可以获取），及兑奖的兑换码，提示用户关注微信公众号，在公众号里面输入兑换码就可以获取红包&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="支付" scheme="http://www.songshuiyang.site/tags/%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>Windows批处理(cmd/bat)常用命令</title>
    <link href="http://www.songshuiyang.site/2018/03/24/Web%E5%90%8E%E5%8F%B0/windows%20bat/"/>
    <id>http://www.songshuiyang.site/2018/03/24/Web后台/windows bat/</id>
    <published>2018-03-24T07:54:12.000Z</published>
    <updated>2018-03-24T08:07:37.530Z</updated>
    
    <content type="html"><![CDATA[<h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>在使用hexo写博客的时候, hexo d 老是不能把代码push上去，网上找了好多方法都不能解决, 只能自己手动把<code>public</code>文件下生成的文件自己敲git命令push上传, 每次写博客的时候都要执行这种操作, 次数多了会感觉厌烦, 所有想windows不是有批处理脚本吗, 所以自己查阅了一些资料, 写了一个草鸡简单的脚本</p><ul><li>auto.bat<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"># 文件上传commit</div><div class="line">git add -A</div><div class="line"></div><div class="line">git <span class="keyword">commit</span> -m <span class="string">"auto commit"</span></div><div class="line"></div><div class="line">git push</div><div class="line"></div><div class="line">echo copy <span class="keyword">file</span></div><div class="line">xcopy D:\workspace\hexo-<span class="keyword">log</span>-bak\hexo-<span class="keyword">log</span>-bak\<span class="keyword">public</span>\*.* D:\workspace\hexo-<span class="keyword">log</span>-upload\songshuiyang.github.io /s /y</div><div class="line"></div><div class="line">echo 提交songshuiyang.github.io 文件</div><div class="line">cd ../../hexo-<span class="keyword">log</span>-upload\songshuiyang.github.io</div><div class="line"></div><div class="line">git <span class="keyword">add</span> -A</div><div class="line"></div><div class="line">git <span class="keyword">commit</span> -m <span class="string">"auto commit"</span></div><div class="line"></div><div class="line">git push</div><div class="line"></div><div class="line">cd ../../hexo-<span class="keyword">log</span>-bak/hexo-<span class="keyword">log</span>-bak</div></pre></td></tr></table></figure></li></ul><a id="more"></a><h4 id="批处理文件"><a href="#批处理文件" class="headerlink" title="批处理文件"></a>批处理文件</h4><p>批处理文件（batch file）包含一系列 DOS命令，通常用于自动执行重复性任务。用户只需双击批处理文件便可执行任务，而无需重复输入相同指令。编写批处理文件非常简单，但难点在于确保一切按顺序执行。编写严谨的批处理文件可以极大程度地节省时间，在应对重复性工作时尤其有效。</p><p>在Windows中善用批处理可以简化很多重复工作</p><h5 id="常用DOS命令"><a href="#常用DOS命令" class="headerlink" title="常用DOS命令"></a>常用DOS命令</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">文件夹管理</div><div class="line"></div><div class="line">    cd 显示当前目录名或改变当前目录。</div><div class="line">    md 创建目录。</div><div class="line">    rd 删除一个目录。</div><div class="line">    dir 显示目录中的文件和子目录列表。</div><div class="line">    tree 以图形显示驱动器或路径的文件夹结构。</div><div class="line">    path 为可执行文件显示或设置一个搜索路径。</div><div class="line">    xcopy 复制文件和目录树。</div><div class="line"></div><div class="line"></div><div class="line">文件管理</div><div class="line"></div><div class="line">    type 显示文本文件的内容。</div><div class="line">    copy 将一份或多份文件复制到另一个位置。</div><div class="line">    del 删除一个或数个文件。</div><div class="line">    move 移动文件并重命名文件和目录。(Windows XP Home Edition中没有)</div><div class="line">    ren 重命名文件。</div><div class="line">    <span class="keyword">replace</span> 替换文件。</div><div class="line">    <span class="keyword">attrib</span> 显示或更改文件属性。</div><div class="line">    find 搜索字符串。</div><div class="line">    fc 比较两个文件或两个文件集并显示它们之间的不同</div><div class="line">网络命令</div><div class="line"></div><div class="line">    ping 进行网络连接测试、名称解析</div><div class="line">    <span class="keyword">ftp</span> 文件传输</div><div class="line">    net 网络命令集及用户管理</div><div class="line">    telnet 远程登陆</div><div class="line">    ipconfig显示、修改TCP/IP设置</div><div class="line">    msg 给用户发送消息</div><div class="line">    arp 显示、修改局域网的IP地址-物理地址映射列表</div><div class="line">    </div><div class="line">系统管理</div><div class="line"></div><div class="line">    <span class="keyword">at</span> 安排在特定日期和时间运行命令和程序</div><div class="line">    <span class="keyword">shutdown</span>立即或定时关机或重启</div><div class="line">    tskill 结束进程</div><div class="line">    taskkill结束进程(比tskill高级，但WinXPHome版中无该命令)</div><div class="line">    tasklist显示进程列表(Windows XP Home <span class="keyword">Edition</span>中没有)</div><div class="line">    sc 系统服务设置与控制</div><div class="line">    reg 注册表控制台工具</div><div class="line">    powercfg控制系统上的电源设置</div></pre></td></tr></table></figure><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h4&gt;&lt;p&gt;在使用hexo写博客的时候, hexo d 老是不能把代码push上去，网上找了好多方法都不能解决, 只能自己手动把&lt;code&gt;public&lt;/code&gt;文件下生成的文件自己敲git命令push上传, 每次写博客的时候都要执行这种操作, 次数多了会感觉厌烦, 所有想windows不是有批处理脚本吗, 所以自己查阅了一些资料, 写了一个草鸡简单的脚本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;auto.bat&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# 文件上传commit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git add -A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;auto commit&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git push&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;echo copy &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;xcopy D:\workspace\hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-bak\hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-bak\&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;\*.* D:\workspace\hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-upload\songshuiyang.github.io /s /y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;echo 提交songshuiyang.github.io 文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd ../../hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-upload\songshuiyang.github.io&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;add&lt;/span&gt; -A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;auto commit&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git push&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd ../../hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-bak/hexo-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;-bak&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Spring 集成Encache</title>
    <link href="http://www.songshuiyang.site/2018/03/24/Web%E5%90%8E%E5%8F%B0/%E7%BC%93%E5%AD%98%E6%8A%80%E6%9C%AF/Encache/"/>
    <id>http://www.songshuiyang.site/2018/03/24/Web后台/缓存技术/Encache/</id>
    <published>2018-03-24T03:41:12.000Z</published>
    <updated>2018-03-24T07:46:55.513Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一：Encache"><a href="#一：Encache" class="headerlink" title="一：Encache"></a>一：Encache</h3><h4 id="1-什么是Encache"><a href="#1-什么是Encache" class="headerlink" title="1. 什么是Encache"></a>1. 什么是Encache</h4><p>EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。</p><p>官网: <a href="http://www.ehcache.org/" target="_blank" rel="external">http://www.ehcache.org/</a></p><h4 id="2-基本介绍"><a href="#2-基本介绍" class="headerlink" title="2. 基本介绍"></a>2. 基本介绍</h4><p>Ehcache是一种广泛使用的开源Java分布式缓存。主要面向通用缓存,Java EE和轻量级容器。它具有内存和磁盘存储，缓存加载器,缓存扩展,缓存异常处理程序,一个gzip缓存servlet过滤器,支持REST和SOAP api等特点。</p><p>Ehcache最初是由Greg Luck于2003年开始开发。2009年,该项目被Terracotta购买。软件仍然是开源,但一些新的主要功能(例如，快速可重启性之间的一致性的)只能在商业产品中使用，例如Enterprise EHCache and BigMemory。维基媒体Foundationannounced目前使用的就是Ehcache技术。</p><a id="more"></a><h4 id="3-特点"><a href="#3-特点" class="headerlink" title="3. 特点"></a>3. 特点</h4><p>主要的特性有：</p><ol><li>快速</li><li>简单</li><li>多种缓存策略</li><li>缓存数据有两级：内存和磁盘，因此无需担心容量问题</li><li>缓存数据会在虚拟机重启的过程中写入磁盘</li><li>可以通过RMI、可插入API等方式进行分布式缓存</li><li>具有缓存和缓存管理器的侦听接口</li><li>支持多缓存管理器实例，以及一个实例的多个缓存区域</li><li>提供Hibernate的缓存实现</li></ol><h4 id="ehcache与redis的区别"><a href="#ehcache与redis的区别" class="headerlink" title="ehcache与redis的区别"></a>ehcache与redis的区别</h4><p>1.redis的数据结构比较丰富，有key-value、hash、set等；ehcache比较简单，只有key-value</p><p>2.ehcache直接在jvm虚拟机中缓存，速度快，效率高；但是缓存共享麻烦，集群分布式应用不方便。redis是通过socket访问到缓存服务，效率ecache低，比数据库要快很多，处理集群和分布式缓存方便，有成熟的方案。如果是单个应用或者对缓存访问要求很高的应用，用ehcache。如果是大型系统，存在缓存共享、分布式部署、缓存内容很大的，建议用redis。</p><h3 id="二-Encache与Spring-集成"><a href="#二-Encache与Spring-集成" class="headerlink" title="二: Encache与Spring 集成"></a>二: Encache与Spring 集成</h3><h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h4><p>Spring自身并没有实现缓存解决方案，但是对缓存管理功能提供了声明式的支持，能够与多种流行的缓存实现进行集成。</p><p>Spring Cache是作用在方法上的（不能理解为只注解在方法上），其核心思想是：当我们在调用一个缓存方法时会把该方法参数和返回结果作为一个键值存放在缓存中，等到下次利用同样的参数调用该方法时将不再执行该方法，而是直接从缓存中获取结果进行返回。所以在使用Spring Cache的时候我们要保证我们的缓存的方法对于相同的方法参数要有相同的返回结果。</p><h4 id="2-开始集成"><a href="#2-开始集成" class="headerlink" title="2. 开始集成"></a>2. 开始集成</h4><ul><li><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>编写ehcache.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">"http://ehcache.org/ehcache.xsd"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 磁盘缓存位置 在Windows的缓存目录为：C:\Users\登录用户~1\AppData\Local\Temp\    Linux：/tmp --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"java.io.tmpdir/ehcache"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--name：缓存名称。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--maxElementsInMemory：缓存最大个数。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--timeToIdleSeconds：置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--timeToLiveSeconds：缓存数据的生存时间（TTL），也就是一个元素从构建到消亡的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--maxEntriesLocalDisk：当内存中对象数量达到maxElementsInMemory时，Ehcache将会对象写到磁盘中。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--overflowToDisk：内存不足时，是否启用磁盘缓存。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--maxElementsOnDisk：硬盘最大缓存个数。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--diskPersistent：是否在VM重启时存储硬盘的缓存数据。默认值是false。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。--&gt;</span></div><div class="line">    <span class="comment">&lt;!--clearOnFlush：内存数量最大时是否清除。--&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--@Cacheable(value = "users", condition = "#user.getId() &lt;= 2")--&gt;</span></div><div class="line">    <span class="comment">&lt;!--@CachePut(value = "users", key = "#user.getId()")--&gt;</span></div><div class="line">    <span class="comment">&lt;!--@CacheEvict(value = "users", allEntries = true)--&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 默认缓存 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">defaultCache</span></span></div><div class="line"><span class="tag">            <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"10000"</span></span></div><div class="line"><span class="tag">            <span class="attr">eternal</span>=<span class="string">"false"</span></span></div><div class="line"><span class="tag">            <span class="attr">timeToIdleSeconds</span>=<span class="string">"120"</span></span></div><div class="line"><span class="tag">            <span class="attr">timeToLiveSeconds</span>=<span class="string">"120"</span></span></div><div class="line"><span class="tag">            <span class="attr">maxEntriesLocalDisk</span>=<span class="string">"10000000"</span></span></div><div class="line"><span class="tag">            <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">"120"</span></span></div><div class="line"><span class="tag">            <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">persistence</span> <span class="attr">strategy</span>=<span class="string">"localTempSwap"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 博客文章详情缓存 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"articlesDetail"</span></span></div><div class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"1000"</span></span></div><div class="line"><span class="tag">           <span class="attr">eternal</span>=<span class="string">"false"</span></span></div><div class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"120"</span></span></div><div class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"120"</span></span></div><div class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></div><div class="line"><span class="tag">           <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- hotArticles缓存 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"articlesDetail"</span></span></div><div class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"1000"</span></span></div><div class="line"><span class="tag">           <span class="attr">eternal</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></div><div class="line"><span class="tag">           <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>在需要缓存的地方加上缓存注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 第一次执行会缓存文章,以id作为key, 第二次会直接取缓存的数据(需要在缓存有效期,过期会重新查询数据库)</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="meta">@Cacheable</span>(value = <span class="string">"articlesDetail"</span>, key = <span class="string">"#id"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> BlogArticles <span class="title">selectByPrimaryKey</span><span class="params">(Integer id)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> getMappser().selectByPrimaryKey(id);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 保存文章，同时删除record.getId()该已存的缓存数据</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> record</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="meta">@CacheEvict</span>(value = <span class="string">"articlesDetail"</span>, key = <span class="string">"#record.getId()"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByPrimaryKeySelective</span><span class="params">(BlogArticles record)</span> </span>&#123;</div><div class="line">    setCurrentOperator(record);</div><div class="line">    <span class="keyword">return</span> getMappser().updateByPrimaryKeySelective(record);</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h4 id="3-注解讲解"><a href="#3-注解讲解" class="headerlink" title="3. 注解讲解"></a>3. 注解讲解</h4><p>首先使用注解标记方法，相当于定义了切点，然后使用Aop技术在这个方法的调用前、调用后获取方法的入参和返回值，进而实现了缓存的逻辑。</p><ul><li>@Cacheable</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">表明所修饰的方法是可以缓存的：当第一次调用这个方法时，它的结果会被缓存下来，在缓存的有效时间内，以后访问这个方法都直接返回缓存结果，不再执行方法中的代码段。 </div><div class="line">这个注解可以用condition属性来设置条件，如果不满足条件，就不使用缓存能力，直接执行方法。 </div><div class="line">可以使用key属性来指定key的生成规则。</div><div class="line"></div><div class="line">@Cacheable 支持如下几个参数：</div><div class="line"></div><div class="line">  value：缓存位置名称，不能为空，如果使用EHCache，就是ehcache.xml中声明的<span class="keyword">cache</span>的<span class="keyword">name</span>, 指明将值缓存到哪个<span class="keyword">Cache</span>中</div><div class="line">  <span class="keyword">key</span>：缓存的<span class="keyword">key</span>，默认为空，既表示使用方法的参数类型及参数值作为<span class="keyword">key</span>，支持SpEL，如果要引用参数值使用井号加参数名，如：#userId，</div><div class="line"></div><div class="line">  一般来说，我们的更新操作只需要刷新缓存中某一个值，所以定义缓存的<span class="keyword">key</span>值的方式就很重要，最好是能够唯一，因为这样可以准确的清除掉特定的缓存，而不会影响到其它缓存值 ， </div><div class="line">  本例子中使用实体加冒号再加<span class="keyword">ID</span>组合成键的名称，如”<span class="keyword">user</span>:<span class="number">1</span>”、”<span class="keyword">order</span>:<span class="number">223123</span>”等</div><div class="line"></div><div class="line">  condition：触发条件，只有满足条件的情况才会加入缓存，默认为空，既表示全部都加入缓存，支持SpEL</div><div class="line">  </div><div class="line">  </div><div class="line">  // 将缓存保存到名称为UserCache中，键为<span class="string">"user:"</span>字符串加上userId值，如 <span class="string">'user:1'</span></div><div class="line">  @Cacheable(<span class="keyword">value</span>=<span class="string">"UserCache"</span>, <span class="keyword">key</span>=<span class="string">"'user:' + #userId"</span>)    </div><div class="line">  <span class="keyword">public</span> <span class="keyword">User</span> findById(<span class="keyword">String</span> userId) &#123;    </div><div class="line">      <span class="keyword">return</span> (<span class="keyword">User</span>) <span class="keyword">new</span> <span class="keyword">User</span>(<span class="string">"1"</span>, <span class="string">"mengdee"</span>);           </div><div class="line">  &#125;    </div><div class="line">  </div><div class="line">  // 将缓存保存进UserCache中，并当参数userId的长度小于12时才保存进缓存，默认使用参数值及类型作为缓存的key</div><div class="line">  // 保存缓存需要指定key，value， value的数据类型，不指定key默认和参数名一样如："1"</div><div class="line">  @Cacheable(value="UserCache", condition="#userId.length() &lt; 12")    </div><div class="line">  public boolean isReserved(String userId) &#123;    </div><div class="line">      System.out.println("UserCache:"+userId);    </div><div class="line">      return false;    </div><div class="line">  &#125;</div></pre></td></tr></table></figure><ul><li>@CachePut</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">与@Cacheable不同，@CachePut不仅会缓存方法的结果，还会执行方法的代码段。它支持的属性和用法都与@Cacheable一致。</div></pre></td></tr></table></figure><ul><li><p>@CacheEvict</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">与@Cacheable功能相反，@CacheEvict表明所修饰的方法是用来删除失效或无用的缓存数据。</div><div class="line"></div><div class="line">@CacheEvict 支持如下几个参数：</div><div class="line"></div><div class="line">  value：缓存位置名称，不能为空，同上</div><div class="line">  key：缓存的key，默认为空，同上</div><div class="line">  condition：触发条件，只有满足条件的情况才会清除缓存，默认为空，支持SpEL</div><div class="line">  allEntries：true表示清除value中的全部缓存，默认为false</div><div class="line"></div><div class="line">  //清除掉UserCache中某个指定key的缓存    </div><div class="line">  @CacheEvict(value="UserCache",key="'user:' + #userId")    </div><div class="line">  public void removeUser(User user) &#123;    </div><div class="line">      System.out.println("UserCache"+user.getUserId());    </div><div class="line">  &#125;    </div><div class="line">  </div><div class="line">  //清除掉UserCache中全部的缓存    </div><div class="line">  @CacheEvict(value="UserCache", allEntries=true)    </div><div class="line">  public final void setReservedUsers(String[] reservedUsers) &#123;    </div><div class="line">     System.out.println("UserCache deleteall");    </div><div class="line">  &#125;</div></pre></td></tr></table></figure></li><li><p>@Caching</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">如果需要使用同一个缓存注解（@Cacheable、@CacheEvict或@CachePut）多次修饰一个方法，就需要用到@Caching。</div><div class="line"></div><div class="line">@Caching(evict = &#123; @CacheEvict("primary"), @CacheEvict(cacheNames="secondary", key="#p0") &#125;)</div><div class="line">public Book importBooks(String deposit, Date date)</div></pre></td></tr></table></figure></li><li><p>@CacheConfig</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">与前面的缓存注解不同，这是一个类级别的注解。</div><div class="line"> 如果类的所有操作都是缓存操作，你可以使用@CacheConfig来指定类，省去一些配置。</div><div class="line"></div><div class="line">@CacheConfig("books")</div><div class="line">public class BookRepositoryImpl implements BookRepository &#123;</div><div class="line">    @Cacheable</div><div class="line">    public Book findBook(ISBN isbn) &#123;...&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h4 id="4-创建Cache工具类-方便对cache进行管理"><a href="#4-创建Cache工具类-方便对cache进行管理" class="headerlink" title="4. 创建Cache工具类, 方便对cache进行管理"></a>4. 创建Cache工具类, 方便对cache进行管理</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.ecut.core.utils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.cache.Cache;</div><div class="line"><span class="keyword">import</span> org.springframework.cache.CacheManager;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 缓存工具类</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> songshuiyang</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/3/24 12:16</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CacheUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(CacheUtils.class);</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> CacheManager cacheManager = (CacheManager) SpringContextUtils.getBean(<span class="string">"cacheManager"</span>);</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取缓存</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> cacheName 缓存名</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> Object</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">get</span><span class="params">(String cacheName, Object key)</span> </span>&#123;</div><div class="line">        Cache cache = cacheManager.getCache(cacheName);</div><div class="line">        <span class="keyword">if</span> (cache != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="comment">//这里需要判断是否null</span></div><div class="line">            <span class="keyword">if</span>(cache.get(key) != <span class="keyword">null</span>)&#123;</div><div class="line">                <span class="keyword">return</span> cache.get(key).get();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 添加缓存</span></div><div class="line"><span class="comment">     * 存在则更新</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> cacheName 缓存名</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(String cacheName, Object key, Object value)</span> </span>&#123;</div><div class="line">        Cache cache = cacheManager.getCache(cacheName);</div><div class="line">        <span class="keyword">if</span>(cache != <span class="keyword">null</span>)&#123;</div><div class="line">            cache.put(key, value);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 清除缓存</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> cacheName 缓存名</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(String cacheName, Object key)</span> </span>&#123;</div><div class="line">        Cache cache = cacheManager.getCache(cacheName);</div><div class="line">        <span class="keyword">if</span> (cache != <span class="keyword">null</span>) &#123;</div><div class="line">            cache.evict(key);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            logger.warn(<span class="string">"this key is not in Cache"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>参考：<br><a href="https://blog.csdn.net/vbirdbest/article/details/72763048" target="_blank" rel="external">https://blog.csdn.net/vbirdbest/article/details/72763048</a><br><a href="http://www.cnblogs.com/jingmoxukong/p/5975994.html" target="_blank" rel="external">http://www.cnblogs.com/jingmoxukong/p/5975994.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一：Encache&quot;&gt;&lt;a href=&quot;#一：Encache&quot; class=&quot;headerlink&quot; title=&quot;一：Encache&quot;&gt;&lt;/a&gt;一：Encache&lt;/h3&gt;&lt;h4 id=&quot;1-什么是Encache&quot;&gt;&lt;a href=&quot;#1-什么是Encache&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是Encache&quot;&gt;&lt;/a&gt;1. 什么是Encache&lt;/h4&gt;&lt;p&gt;EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。&lt;/p&gt;
&lt;p&gt;官网: &lt;a href=&quot;http://www.ehcache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ehcache.org/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-基本介绍&quot;&gt;&lt;a href=&quot;#2-基本介绍&quot; class=&quot;headerlink&quot; title=&quot;2. 基本介绍&quot;&gt;&lt;/a&gt;2. 基本介绍&lt;/h4&gt;&lt;p&gt;Ehcache是一种广泛使用的开源Java分布式缓存。主要面向通用缓存,Java EE和轻量级容器。它具有内存和磁盘存储，缓存加载器,缓存扩展,缓存异常处理程序,一个gzip缓存servlet过滤器,支持REST和SOAP api等特点。&lt;/p&gt;
&lt;p&gt;Ehcache最初是由Greg Luck于2003年开始开发。2009年,该项目被Terracotta购买。软件仍然是开源,但一些新的主要功能(例如，快速可重启性之间的一致性的)只能在商业产品中使用，例如Enterprise EHCache and BigMemory。维基媒体Foundationannounced目前使用的就是Ehcache技术。&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hover.css</title>
    <link href="http://www.songshuiyang.site/2018/03/20/Web%E5%89%8D%E7%AB%AF/hover/"/>
    <id>http://www.songshuiyang.site/2018/03/20/Web前端/hover/</id>
    <published>2018-03-20T12:52:12.000Z</published>
    <updated>2018-03-20T15:08:21.018Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hover-css"><a href="#Hover-css" class="headerlink" title="Hover.css"></a>Hover.css</h3><p>A collection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and so on. Easily apply to your own elements, modify or just use for inspiration. Available in CSS, Sass, and LESS.</p><p>官网地址: <a href="http://ianlunn.github.io/Hover/" target="_blank" rel="external">http://ianlunn.github.io/Hover/</a></p><p>演示地址: <a href="http://wow.techbrood.com/fiddle/852" target="_blank" rel="external">http://wow.techbrood.com/fiddle/852</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hover-css&quot;&gt;&lt;a href=&quot;#Hover-css&quot; class=&quot;headerlink&quot; title=&quot;Hover.css&quot;&gt;&lt;/a&gt;Hover.css&lt;/h3&gt;&lt;p&gt;A collection of CSS3 powered hover effects
      
    
    </summary>
    
      <category term="client" scheme="http://www.songshuiyang.site/categories/client/"/>
    
    
      <category term="css" scheme="http://www.songshuiyang.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命令笔记</title>
    <link href="http://www.songshuiyang.site/2018/03/08/Web%E5%90%8E%E5%8F%B0/Linux/linux%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.songshuiyang.site/2018/03/08/Web后台/Linux/linux笔记/</id>
    <published>2018-03-08T09:30:44.000Z</published>
    <updated>2018-03-10T02:17:01.898Z</updated>
    
    <content type="html"><![CDATA[<ol><li>出现问题 <code>bash: service: command not found</code>, </li></ol><p>解决方法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> initscripts</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;出现问题 &lt;code&gt;bash: service: command not found&lt;/code&gt;, &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解决方法：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
      <category term="服务器" scheme="http://www.songshuiyang.site/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
      <category term="server" scheme="http://www.songshuiyang.site/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>Docker笔记</title>
    <link href="http://www.songshuiyang.site/2018/03/08/Web%E5%90%8E%E5%8F%B0/Linux/Docker%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.songshuiyang.site/2018/03/08/Web后台/Linux/Docker笔记/</id>
    <published>2018-03-08T06:30:44.000Z</published>
    <updated>2018-03-10T02:17:01.895Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是Docker"><a href="#什么是Docker" class="headerlink" title="什么是Docker"></a>什么是Docker</h4><p>Docker 是一种“轻量级”容器技术，它几乎动摇了传统虚拟化技术的地位，现在国内外已经有越来越多的公司开始逐步使用 Docker 来替换现有的虚拟化平台了。作为一名 Java 程序员，我们是时候一起把 Docker 学起来了！</p><p>1.传统虚拟化技术的体系架构：</p><p><img src="/images/server/docker/virtual mechine.png" alt="logo"> </p><p>可见，我们在宿主机的操作系统上，可安装了多个虚拟机，而在每个虚拟机中，通过虚拟化技术，实现了一个虚拟操作系统，随后，就可以在该虚拟操作系统上，安装自己所需的应用程序了。这一切看似非常简单，但其中的技术细节是相当高深莫测的，大神级人物都不一定说得清楚。<br><a id="more"></a></p><p>凡是使用过虚拟机的同学，应该都知道，启动虚拟机就像启动一台计算机，初始化过程是相当慢的，我们需要等很久，才能看到登录界面。一旦虚拟机启动以后，就可以与宿主机建立网络连接，确保虚拟机与宿主机之间是互联互通的。不同的虚拟机之间却是相互隔离的，也就是说，彼此并不知道对方的存在，但每个虚拟机占用的都是宿主机的硬件与网络资源。</p><p>2.Docker 技术的体系架构</p><p><img src="/images/server/docker/virtual mechine.png" alt="logo"> </p><p>可见，在宿主机的操作系统上，有一个 Docker 服务在运行（或者称为“Docker 引擎”），在此服务上，我们可开启多个 Docker 容器，而每个 Docker 容器中可运行自己所需的应用程序，Docker 容器之间也是相互隔离的，同样地，都是占用的宿主机的硬件与网络资源。、</p><p>Docker 容器相对于虚拟机而言，除了在技术实现上完全不一样以外，启动速度较虚拟机而言有本质的飞跃，启动一个容器只在眨眼瞬间。不管是虚拟机还是 Docker 容器，它们都是为了隔离应用程序的运行环境，节省我们的硬件资源，为我们开发人员提供福利。</p><p>3.Docker 的 Logo:</p><p><img src="/images/server/docker/docker logo.png" alt="logo"> </p><p>很明显，这是一只鲸鱼，它托着许多集装箱。我们可以把宿主机可当做这只鲸鱼，把相互隔离的容器可看成集装箱，每个集装箱中都包含自己的应用程序。这 Logo 简直的太形象了！</p><p>4.Docker的应用场景<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1. Web 应用的自动化打包和发布。</div><div class="line"></div><div class="line">2. 自动化测试和持续集成、发布。</div><div class="line"></div><div class="line">3. 在服务型环境中部署和调整数据库或其他的后台应用。</div></pre></td></tr></table></figure></p><p>5.Docker 的优点<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">1、简化程序：</div><div class="line">Docker 让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，便可以实现虚拟化。Docker改变了虚拟化的方式，使开发者可以直接将自己的成果放入Docker中进行管理。方便快捷已经是 Docker的最大优势，过去需要用数天乃至数周的任务，在Docker容器的处理下，只需要数秒就能完成。</div><div class="line"></div><div class="line">2、避免选择恐惧症：</div><div class="line">如果你有选择恐惧症，还是资深患者。Docker 帮你打包你的纠结！比如 Docker 镜像；Docker 镜像中包含了运行环境和配置，所以 Docker 可以简化部署多种应用实例工作。比如 Web 应用、后台应用、数据库应用、大数据应用比如 Hadoop 集群、消息队列等等都可以打包成一个镜像部署。</div><div class="line"></div><div class="line">3、节省开支：</div><div class="line">一方面，云计算时代到来，使开发者不必为了追求效果而配置高额的硬件，Docker 改变了高性能必然高价格的思维定势。Docker 与云的结合，让云空间得到更充分的利用。不仅解决了硬件管理的问题，也改变了虚拟化的方式。</div></pre></td></tr></table></figure></p><h4 id="Docker-术语"><a href="#Docker-术语" class="headerlink" title="Docker 术语"></a>Docker 术语</h4><table><thead><tr><th>术语</th><th style="text-align:right">说明</th></tr></thead><tbody><tr><td>Docker 镜像(Images)</td><td style="text-align:right">Docker 镜像是用于创建 Docker 容器的模板。</td></tr><tr><td>Docker 容器(Container)</td><td style="text-align:right">容器是独立运行的一个或一组应用。</td></tr><tr><td>Docker 客户端(Client)</td><td style="text-align:right">Docker 客户端通过命令行或者其他工具使用 Docker API (<a href="https://docs.docker.com/reference/api/docker_remote_api" target="_blank" rel="external">https://docs.docker.com/reference/api/docker_remote_api</a>) 与 Docker 的守护进程通信。</td></tr><tr><td>Docker 主机(Host)</td><td style="text-align:right">一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。</td></tr><tr><td>Docker 仓库(Registry)</td><td style="text-align:right">Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。Docker Hub(<a href="https://hub.docker.com" target="_blank" rel="external">https://hub.docker.com</a>) 提供了庞大的镜像集合供使用。</td></tr><tr><td>Docker Machine</td><td style="text-align:right">Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。</td></tr></tbody></table><h4 id="使用Docker前先配置-Docker国内镜像或者使用registry-mirrors配置加速"><a href="#使用Docker前先配置-Docker国内镜像或者使用registry-mirrors配置加速" class="headerlink" title="使用Docker前先配置 Docker国内镜像或者使用registry-mirrors配置加速"></a>使用Docker前先配置 Docker国内镜像或者使用registry-mirrors配置加速</h4><p>由于国内访问直接访问Docker hub网速比较慢，拉取镜像的时间就会比较长。一般我们会使用镜像加速或者直接从国内的一些平台镜像仓库上拉取。 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">方法一： 网易镜像中心：https://c.163.com/hub#/m/home/ </div><div class="line"></div><div class="line">拉取镜像的命令是： docker pull 镜像名字 所以我们可以按照给出的镜像名字或者命令直接拉取。</div><div class="line"></div><div class="line">eg: docker pull hub.c.163.com/library/tomcat:latest</div><div class="line"></div><div class="line"></div><div class="line">方法二： daocloud镜像市场：https://hub.daocloud.io/</div><div class="line"></div><div class="line">如果说还是想从dockerhub上拉取，那么使用加速器修改docker的registry-mirrors。这里使用的是DaoCloud的加速器。 </div><div class="line"></div><div class="line">首先在http://www.daocloud.io/进行注册登录。然后点击加速器，得到如下脚本</div><div class="line"></div><div class="line">    curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://24524c4f.m.daocloud.io Copy</div><div class="line">    该脚本可以将 <span class="comment">--registry-mirror 加入到你的 Docker 配置文件 /etc/docker/daemon.json 中。适用于 Ubuntu14.04、Debian、CentOS6 、CentOS7、Fedora、Arch Linux、openSUSE Leap 42.1，其他版本可能有细微不同。更多详情请访问文档。</span></div><div class="line"> </div><div class="line">也可以自己手动修改 /etc/docker/daemon.json</div><div class="line"></div><div class="line">&#123;</div><div class="line"> "registry-mirrors": ["http://ef017c13.m.daocloud.io"],</div><div class="line"> "live-<span class="keyword">restore</span><span class="string">": true</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">最后重启docker service docker restart</span></div></pre></td></tr></table></figure><h4 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h4><p>1.前提条件<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">使用 yum 安装（CentOS 7下）</div><div class="line"></div><div class="line">Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。</div><div class="line">通过 uname -r 命令查看你当前的内核版本</div></pre></td></tr></table></figure></p><p>2.安装<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y <span class="keyword">install</span> docker</div></pre></td></tr></table></figure></p><p>3.启动服务<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service docker <span class="keyword">start</span></div></pre></td></tr></table></figure></p><p>4.测试运行 hello-world<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run hello-world</div></pre></td></tr></table></figure></p><h4 id="Docker中使用CentOS7镜像"><a href="#Docker中使用CentOS7镜像" class="headerlink" title="Docker中使用CentOS7镜像"></a>Docker中使用CentOS7镜像</h4><p>1.启动容器服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start docker.service</div></pre></td></tr></table></figure></p><p>2.下载CentOS7 镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@JD docker]# docker pull centos:7.3.1611</div><div class="line">Trying to pull repository docker.io/library/centos ... </div><div class="line">7.3.1611: Pulling from docker.io/library/centos</div><div class="line"></div><div class="line">版本: https://hub.docker.com/_/centos/ 可以在这个网站上选择自己想要的版本</div><div class="line">  latest, centos7, 7 (docker/Dockerfile)</div><div class="line">  centos6, 6 (docker/Dockerfile)</div><div class="line">  centos7.4.1708, 7.4.1708 (docker/Dockerfile)</div><div class="line">  centos7.3.1611, 7.3.1611 (docker/Dockerfile)</div><div class="line">  centos7.2.1511, 7.2.1511 (docker/Dockerfile)</div><div class="line">  centos7.1.1503, 7.1.1503 (docker/Dockerfile)</div><div class="line">  centos7.0.1406, 7.0.1406 (docker/Dockerfile)</div><div class="line">  centos6.9, 6.9 (docker/Dockerfile)</div><div class="line">  centos6.8, 6.8 (docker/Dockerfile)</div><div class="line">  centos6.7, 6.7 (docker/Dockerfile)</div><div class="line">  centos6.6, 6.6 (docker/Dockerfile)</div></pre></td></tr></table></figure></p><p>3.下载成功之后查看本地所有的镜像，得到centos的 IMAGE ID: 66ee80d59a68<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@JD ~]# docker images</div><div class="line">REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">docker.io/tomcat        latest              108db0e7c85e        2 weeks ago         557.4 MB</div><div class="line">docker.io/hello-world   latest              f2a91732366c        3 months ago        1.848 kB</div><div class="line">docker.io/centos        7.3.1611            66ee80d59a68        4 months ago        191.8 MB</div></pre></td></tr></table></figure></p><p>4.启动docker中的CentOS7<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">docker run -ti 66ee /bin/bash</div><div class="line">#6866 是 IMAGE ID 前四位数字-能区分出是哪个image即可</div><div class="line"></div><div class="line">root@b4ad1d1c87da /]# </div><div class="line">#登录成功，接下来就可以为所欲为啦。</div><div class="line"></div><div class="line">命令笔记</div><div class="line">  容器是在镜像的基础上来运行的，一旦容器启动了，我们就可以登录到容器中，安装自己所需的软件或应用程序。既然镜像已经下载到本地，那么如何才能启动容器呢</div><div class="line">  </div><div class="line">  docker run -i -t -v /root/software/:/mnt/software/ 25c5298b1a36 /bin/bash</div><div class="line"></div><div class="line">  docker run &lt;相关参数&gt; &lt;镜像 ID&gt; &lt;初始命令&gt;</div><div class="line"></div><div class="line">    -i：表示以“交互模式”运行容器</div><div class="line">    -t：表示容器启动后会进入其命令行</div><div class="line">    -v：表示需要将本地哪个目录挂载到容器中，格式：-v &lt;宿主机目录&gt;:&lt;容器目录&gt;</div><div class="line">    假设我们的所有安装程序都放在了宿主机的/root/software/目录下，现在需要将其挂载到容器的/mnt/software/目录下。</div><div class="line">    </div><div class="line">  初始命令表示一旦容器启动，需要运行的命令，此时使用“/bin/bash”，表示什么也不做，只需进入命令行即可。</div></pre></td></tr></table></figure></p><p>5.检查CentOS7系统<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">root@b4ad1d1c87da  /]# uname -a</div><div class="line">Linux b4ad1d1c87da 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</div><div class="line">[root@b4ad1d1c87da /]# cat /etc/redhat-release </div><div class="line">CentOS Linux <span class="keyword">release</span> <span class="number">7.2</span><span class="number">.1511</span> (Core)</div></pre></td></tr></table></figure></p><p>6.退出<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ctrl+d 退出容器且关闭, </div><div class="line">docker ps 查看无,</div><div class="line">ctrl+p+q 退出容器但不关闭, </div><div class="line">docker ps</div></pre></td></tr></table></figure></p><p>7.再进入CentOS7<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@wxtest1607 ~]# docker ps -a</div><div class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</div><div class="line">b4ad1d1c87da        6866                "/bin/bash"         12 seconds ago      Up 9 seconds                            mad_swanson</div><div class="line">                  drunk_hypatia</div><div class="line">得到 CONTAINER ID         </div><div class="line">[root@wxtest1607 ~]# docker exec -ti b4ad /bin/bash  </div><div class="line">[root@b4ad1d1c87da /]#</div></pre></td></tr></table></figure></p><p>8.安装tomcat<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">1. yum -y <span class="keyword">install</span> tomcat</div><div class="line"></div><div class="line">注：</div><div class="line">       在docker中通过systemctl 启动服务的时候总是报<span class="keyword">Failed</span> <span class="keyword">to</span> <span class="keyword">get</span> D-Bus <span class="keyword">connection</span>: Operation <span class="keyword">not</span> permitted 这样的错误提示。</div><div class="line">    解决方法：</div><div class="line">       解决办法就是在docker run 的时候运行/usr/sbin/init 。比如：</div><div class="line">       docker run -ti <span class="number">66</span>ee /usr/sbin/init</div><div class="line"><span class="number">2.</span> 在Centos使用yum安装后，Tomcat相关的目录都已采用符号链接到/usr/<span class="keyword">share</span>/tomcat6目录，包含webapps等，这很方便我们配置管理</div></pre></td></tr></table></figure></p><p>转载：<a href="http://www.runoob.com/docker/docker-tutorial.html" target="_blank" rel="external">http://www.runoob.com/docker/docker-tutorial.html</a></p><p>转载：<a href="http://developer.51cto.com/art/201702/529956.htm" target="_blank" rel="external">http://developer.51cto.com/art/201702/529956.htm</a></p><p>转载：<a href="http://www.jb51.net/article/112921.htm" target="_blank" rel="external">http://www.jb51.net/article/112921.htm</a></p><p>转载：<a href="https://www.jianshu.com/p/0aa535e681f5" target="_blank" rel="external">https://www.jianshu.com/p/0aa535e681f5</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;什么是Docker&quot;&gt;&lt;a href=&quot;#什么是Docker&quot; class=&quot;headerlink&quot; title=&quot;什么是Docker&quot;&gt;&lt;/a&gt;什么是Docker&lt;/h4&gt;&lt;p&gt;Docker 是一种“轻量级”容器技术，它几乎动摇了传统虚拟化技术的地位，现在国内外已经有越来越多的公司开始逐步使用 Docker 来替换现有的虚拟化平台了。作为一名 Java 程序员，我们是时候一起把 Docker 学起来了！&lt;/p&gt;
&lt;p&gt;1.传统虚拟化技术的体系架构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/server/docker/virtual mechine.png&quot; alt=&quot;logo&quot;&gt; &lt;/p&gt;
&lt;p&gt;可见，我们在宿主机的操作系统上，可安装了多个虚拟机，而在每个虚拟机中，通过虚拟化技术，实现了一个虚拟操作系统，随后，就可以在该虚拟操作系统上，安装自己所需的应用程序了。这一切看似非常简单，但其中的技术细节是相当高深莫测的，大神级人物都不一定说得清楚。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.songshuiyang.site/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
      <category term="server" scheme="http://www.songshuiyang.site/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>mysql 用户及权限管理</title>
    <link href="http://www.songshuiyang.site/2018/03/07/Web%E5%90%8E%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql%20%E7%94%A8%E6%88%B7%E5%8F%8A%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    <id>http://www.songshuiyang.site/2018/03/07/Web后台/数据库/mysql 用户及权限管理/</id>
    <published>2018-03-07T14:24:12.000Z</published>
    <updated>2018-03-07T15:35:08.167Z</updated>
    
    <content type="html"><![CDATA[<h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><p>授权语法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">GRANT</span> <span class="keyword">privileges</span> (<span class="keyword">columns</span>) <span class="keyword">ON</span> what <span class="keyword">TO</span> <span class="keyword">user</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">"password"</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span></div><div class="line"></div><div class="line">权限列表:</div><div class="line"><span class="keyword">ALTER</span>: 修改表和索引。</div><div class="line"><span class="keyword">CREATE</span>: 创建数据库和表。</div><div class="line"><span class="keyword">DELETE</span>: 删除表中已有的记录。</div><div class="line"><span class="keyword">DROP</span>: 抛弃(删除)数据库和表。</div><div class="line"><span class="keyword">INDEX</span>: 创建或抛弃索引。</div><div class="line"><span class="keyword">INSERT</span>: 向表中插入新行。</div><div class="line"><span class="keyword">REFERENCE</span>: 未用。</div><div class="line"><span class="keyword">SELECT</span>: 检索表中的记录。</div><div class="line"><span class="keyword">UPDATE</span>: 修改现存表记录。</div><div class="line"><span class="keyword">FILE</span>: 读或写服务器上的文件。</div><div class="line">PROCESS: 查看服务器中执行的线程信息或杀死线程。</div><div class="line">RELOAD: 重载授权表或清空日志、主机缓存或表缓存。</div><div class="line"><span class="keyword">SHUTDOWN</span>: 关闭服务器。</div><div class="line">ALL: 所有权限，ALL <span class="keyword">PRIVILEGES</span>同义词。</div><div class="line"><span class="keyword">USAGE</span>: 特殊的 <span class="string">"无权限"</span> 权限。</div><div class="line">用 户账户包括 <span class="string">"username"</span> 和 <span class="string">"host"</span> 两部分，后者表示该用户被允许从何地接入。tom@<span class="string">'%'</span> 表示任何地址，默认可以省略。还可以是 <span class="string">"tom@192.168.1.%"</span>、<span class="string">"tom@%.abc.com"</span> 等。数据库格式为 db@<span class="keyword">table</span>，可以是 <span class="string">"test.*"</span> 或 <span class="string">"*.*"</span>，前者表示 <span class="keyword">test</span> 数据库的所有表，后者表示所有数据库的所有表。</div><div class="line">子句 <span class="string">"WITH GRANT OPTION"</span> 表示该用户可以为其他用户分配权限。</div></pre></td></tr></table></figure></p><a id="more"></a><p>实例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">use</span> mysql</div><div class="line"></div><div class="line"><span class="number">1.</span> 新建用户, 并赋予所有数据库权限</div><div class="line">  <span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'host'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</div><div class="line"></div><div class="line">  说明:</div><div class="line">    1. username - 你将创建的用户名, host - 指定该用户在哪个主机上可以登陆,如果是本地用户可用localhost, 如果想让该用户可以从任意远程主机登陆,可以使用通配符%. password - 该用户的登陆密码,密码可以为空,如果为空则该用户可以不需要密码登陆服务器.</div><div class="line">    2. 指定helloworld数据库: <span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> helloword.* <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'host'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</div><div class="line"></div><div class="line">2. 指定该用户只能执行 <span class="keyword">select</span> 和 <span class="keyword">update</span> 命令</div><div class="line">  <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">UPDATE</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</div><div class="line"></div><div class="line">3. 另外每当调整权限后，通常需要执行以下语句刷新权限：</div><div class="line">  <span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</div><div class="line"></div><div class="line">4. <span class="keyword">grant</span> 普通数据用户，查询、插入、更新、删除 数据库中所有表数据的权利。</div><div class="line">  <span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</div><div class="line">  <span class="keyword">grant</span> <span class="keyword">insert</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</div><div class="line">  <span class="keyword">grant</span> <span class="keyword">update</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</div><div class="line">  <span class="keyword">grant</span> <span class="keyword">delete</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</div><div class="line">  或者，用一条 MySQL 命令来替代：</div><div class="line">  <span class="keyword">grant</span> <span class="keyword">select</span>, <span class="keyword">insert</span>, <span class="keyword">update</span>, <span class="keyword">delete</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> common_user@’%’</div></pre></td></tr></table></figure><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">1. 删除刚才创建的用户：</div><div class="line">  <span class="keyword">DROP</span> <span class="keyword">USER</span> username@localhost;</div><div class="line"></div><div class="line">2. 查看用户创建是否成功</div><div class="line">  <span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> <span class="keyword">user</span> ;</div><div class="line">  </div><div class="line">  +<span class="comment">-----------+-----------+</span></div><div class="line">  | user      | host      |</div><div class="line">  +<span class="comment">-----------+-----------+</span></div><div class="line">  | root      | %         |</div><div class="line">  | <span class="keyword">select</span>    | %         |</div><div class="line">  | <span class="keyword">server</span>    | %         |</div><div class="line">  | shuiyang  | %         |</div><div class="line">  | <span class="keyword">user</span>      | %         |</div><div class="line">  | mysql.sys | localhost |</div><div class="line">  +<span class="comment">-----------+-----------+</span></div><div class="line">  </div><div class="line"><span class="number">3.</span> 查看<span class="keyword">select</span>用户的授权</div><div class="line"> <span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> <span class="keyword">select</span>;</div><div class="line"> </div><div class="line"> MySQL [mysql]&gt;  show grants for `select`;</div><div class="line"> +<span class="comment">---------------------------------------------+</span></div><div class="line"> | Grants for <span class="keyword">select</span>@%                         |</div><div class="line"> +<span class="comment">---------------------------------------------+</span></div><div class="line"> | <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">UPDATE</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'select'</span>@<span class="string">'%'</span> |</div><div class="line"> +<span class="comment">---------------------------------------------+</span></div><div class="line"> <span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</div><div class="line"> </div><div class="line"><span class="number">4.</span> 设置与更改用户密码</div><div class="line"></div><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">'username'</span>@<span class="string">'host'</span> = <span class="keyword">PASSWORD</span>(<span class="string">'newpassword'</span>)</div><div class="line"></div><div class="line">如果是当前登陆用户用</div><div class="line"></div><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> = <span class="keyword">PASSWORD</span>(<span class="string">"newpassword"</span>);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;权限控制&quot;&gt;&lt;a href=&quot;#权限控制&quot; class=&quot;headerlink&quot; title=&quot;权限控制&quot;&gt;&lt;/a&gt;权限控制&lt;/h3&gt;&lt;p&gt;授权语法：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;privileges&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;columns&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; what &lt;span class=&quot;keyword&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;OPTION&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;权限列表:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt;: 修改表和索引。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt;: 创建数据库和表。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt;: 删除表中已有的记录。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt;: 抛弃(删除)数据库和表。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt;: 创建或抛弃索引。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt;: 向表中插入新行。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;REFERENCE&lt;/span&gt;: 未用。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;: 检索表中的记录。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt;: 修改现存表记录。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FILE&lt;/span&gt;: 读或写服务器上的文件。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PROCESS: 查看服务器中执行的线程信息或杀死线程。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RELOAD: 重载授权表或清空日志、主机缓存或表缓存。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SHUTDOWN&lt;/span&gt;: 关闭服务器。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ALL: 所有权限，ALL &lt;span class=&quot;keyword&quot;&gt;PRIVILEGES&lt;/span&gt;同义词。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USAGE&lt;/span&gt;: 特殊的 &lt;span class=&quot;string&quot;&gt;&quot;无权限&quot;&lt;/span&gt; 权限。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;用 户账户包括 &lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt; 和 &lt;span class=&quot;string&quot;&gt;&quot;host&quot;&lt;/span&gt; 两部分，后者表示该用户被允许从何地接入。tom@&lt;span class=&quot;string&quot;&gt;&#39;%&#39;&lt;/span&gt; 表示任何地址，默认可以省略。还可以是 &lt;span class=&quot;string&quot;&gt;&quot;tom@192.168.1.%&quot;&lt;/span&gt;、&lt;span class=&quot;string&quot;&gt;&quot;tom@%.abc.com&quot;&lt;/span&gt; 等。数据库格式为 db@&lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;，可以是 &lt;span class=&quot;string&quot;&gt;&quot;test.*&quot;&lt;/span&gt; 或 &lt;span class=&quot;string&quot;&gt;&quot;*.*&quot;&lt;/span&gt;，前者表示 &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt; 数据库的所有表，后者表示所有数据库的所有表。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;子句 &lt;span class=&quot;string&quot;&gt;&quot;WITH GRANT OPTION&quot;&lt;/span&gt; 表示该用户可以为其他用户分配权限。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="mysql" scheme="http://www.songshuiyang.site/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装Mysql5.7.md</title>
    <link href="http://www.songshuiyang.site/2018/03/07/Web%E5%90%8E%E5%8F%B0/Linux/Centos7%E5%AE%89%E8%A3%85Mysql5.7/"/>
    <id>http://www.songshuiyang.site/2018/03/07/Web后台/Linux/Centos7安装Mysql5.7/</id>
    <published>2018-03-07T12:30:44.000Z</published>
    <updated>2018-03-07T15:37:45.944Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一：配置YUM源"><a href="#一：配置YUM源" class="headerlink" title="一：配置YUM源"></a>一：配置YUM源</h4><blockquote><p>官网地址 在MySQL官网中下载YUM源rpm安装包：<a href="http://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="external">http://dev.mysql.com/downloads/repo/yum/</a></p></blockquote><p>1.下载mysql源安装包<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://dev.mysql.com/get/mysql57-community-<span class="keyword">release</span>-el7<span class="number">-8.</span>noarch.rpm</div></pre></td></tr></table></figure></p><p> 命令笔记:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">wget:</div><div class="line">用来从指定的URL下载文件。wget非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性，如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有用</div><div class="line"></div><div class="line">-a&lt;日志文件&gt;：在指定的日志文件中记录资料的执行过程；</div><div class="line">-A&lt;后缀名&gt;：指定要下载文件的后缀名，多个后缀名之间使用逗号进行分隔；</div><div class="line">-b：进行后台的方式运行wget；</div><div class="line">-B&lt;连接地址&gt;：设置参考的连接地址的基地地址；</div><div class="line">-c：继续执行上次终端的任务；</div><div class="line">-C&lt;标志&gt;：设置服务器数据块功能标志on为激活，off为关闭，默认值为on；</div><div class="line">-d：调试模式运行指令；</div><div class="line">-D&lt;域名列表&gt;：设置顺着的域名列表，域名之间用“，”分隔；</div><div class="line">-e&lt;指令&gt;：作为文件“.wgetrc”中的一部分执行指定的指令；</div><div class="line">-h：显示指令帮助信息；</div><div class="line">-i&lt;文件&gt;：从指定文件获取要下载的URL地址；</div><div class="line">-l&lt;目录列表&gt;：设置顺着的目录列表，多个目录用“，”分隔；</div><div class="line">-L：仅顺着关联的连接；</div><div class="line">-r：递归下载方式；</div><div class="line">-nc：文件存在时，下载文件不覆盖原有文件；</div><div class="line">-nv：下载时只显示更新和出错信息，不显示指令的详细执行过程；</div><div class="line">-q：不显示指令执行过程；</div><div class="line">-nh：不查询主机名称；</div><div class="line">-v：显示详细执行过程；</div><div class="line">-V：显示版本信息；</div><div class="line"><span class="comment">--passive-ftp：使用被动模式PASV连接FTP服务器；</span></div><div class="line"><span class="comment">--follow-ftp：从HTML文件中下载FTP连接文件</span></div><div class="line"></div><div class="line">下载并以不同的文件名保存:</div><div class="line">wget -O wordpress.zip http://www.linuxde.net/download.aspx?id=1080</div></pre></td></tr></table></figure></p><a id="more"></a><p>2.安装mysql源<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum localinstall mysql57-community-<span class="keyword">release</span>-el7<span class="number">-8.</span>noarch.rpm</div></pre></td></tr></table></figure></p><p> 命令笔记:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">yum命令</div><div class="line"></div><div class="line">是在Fedora和RedHat以及SUSE中基于rpm的软件包管理器，它可以使系统管理人员交互和自动化地更细与管理RPM软件包，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软体包，无须繁琐地一次次下载、安装。</div><div class="line"></div><div class="line">选项:</div><div class="line">-h：显示帮助信息；</div><div class="line">-y：对所有的提问都回答“yes”；</div><div class="line">-c：指定配置文件；</div><div class="line">-q：安静模式；</div><div class="line">-v：详细模式；</div><div class="line">-d：设置调试等级（0-10）；</div><div class="line">-e：设置错误等级（0-10）；</div><div class="line">-R：设置yum处理一个命令的最大等待时间；</div><div class="line">-C：完全从缓存中运行，而不去下载或者更新任何头文件。</div><div class="line"></div><div class="line">参数：</div><div class="line"><span class="keyword">install</span>：安装rpm软件包；</div><div class="line"><span class="keyword">update</span>：更新rpm软件包；</div><div class="line"><span class="keyword">check</span>-<span class="keyword">update</span>：检查是否有可用的更新rpm软件包；</div><div class="line">remove：删除指定的rpm软件包；</div><div class="line"><span class="keyword">list</span>：显示软件包的信息；</div><div class="line"><span class="keyword">search</span>：检查软件包的信息；</div><div class="line">info：显示指定的rpm软件包的描述信息和概要信息；</div><div class="line">clean：清理yum过期的缓存；</div><div class="line">shell：进入yum的shell提示符；</div><div class="line">resolvedep：显示rpm软件包的依赖关系；</div><div class="line">localinstall：安装本地的rpm软件包；</div><div class="line">localupdate：显示本地rpm软件包进行更新；</div><div class="line">deplist：显示rpm软件包的所有依赖关系。</div><div class="line"></div><div class="line"></div><div class="line">实例</div><div class="line">部分常用的命令包括：</div><div class="line"></div><div class="line">自动搜索最快镜像插件：yum <span class="keyword">install</span> yum-fastestmirror</div><div class="line">安装yum图形窗口插件：yum <span class="keyword">install</span> yumex</div><div class="line">查看可能批量安装的列表：yum grouplist</div></pre></td></tr></table></figure></p><p>3.检查mysql源是否安装成功<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum repolist enabled | grep "mysql.*-community.*"</div></pre></td></tr></table></figure></p><p><img src="/images/server/linux/mysql_install_success.png" alt="logo"> </p><p>看到上图所示表示mysql源安装成功。</p><p>可以修改vim /etc/yum.repos.d/mysql-community.repo源，改变默认安装的mysql版本。比如要安装5.6版本，将5.7源的enabled=1改成enabled=0。然后再将5.6源的enabled=0改成enabled=1即可 </p><h4 id="二-安装MySQL"><a href="#二-安装MySQL" class="headerlink" title="二 安装MySQL"></a>二 安装MySQL</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> mysql-community-<span class="keyword">server</span></div></pre></td></tr></table></figure><p>命令笔记:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">安装</div><div class="line"></div><div class="line">yum <span class="keyword">install</span>              #全部安装</div><div class="line">yum <span class="keyword">install</span> package1     #安装指定的安装包package1</div><div class="line">yum groupinsall group1   #安装程序组group1</div><div class="line"></div><div class="line">更新和升级</div><div class="line"></div><div class="line">yum <span class="keyword">update</span>               #全部更新</div><div class="line">yum <span class="keyword">update</span> package1      #更新指定程序包package1</div><div class="line">yum <span class="keyword">check</span>-<span class="keyword">update</span>         #检查可更新的程序</div><div class="line">yum <span class="keyword">upgrade</span> package1     #升级指定程序包package1</div><div class="line">yum groupupdate group1   #升级程序组group1</div><div class="line"></div><div class="line"></div><div class="line">查找和显示</div><div class="line"></div><div class="line">yum info package1      #显示安装包信息package1</div><div class="line">yum <span class="keyword">list</span>               #显示所有已经安装和可以安装的程序包</div><div class="line">yum <span class="keyword">list</span> package1      #显示指定程序包安装情况package1</div><div class="line">yum groupinfo group1   #显示程序组group1信息yum <span class="keyword">search</span> <span class="keyword">string</span> 根据关键字<span class="keyword">string</span>查找安装包</div><div class="line"></div><div class="line">删除程序</div><div class="line"></div><div class="line">yum remove &amp;#124; erase package1   #删除程序包package1</div><div class="line">yum groupremove group1             #删除程序组group1</div><div class="line">yum deplist package1               #查看程序package1依赖情况</div></pre></td></tr></table></figure></p><h4 id="三：启动MySQL服务"><a href="#三：启动MySQL服务" class="headerlink" title="三：启动MySQL服务"></a>三：启动MySQL服务</h4><p>1.启动<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl <span class="keyword">start</span> mysqld</div></pre></td></tr></table></figure></p><p>命令笔记：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">systemctl</div><div class="line"></div><div class="line">是系统服务管理器指令，它实际上将 service 和 chkconfig 这两个命令组合到一起。</div><div class="line"></div><div class="line">任务                旧指令                        新指令</div><div class="line">使某服务自动启动    chkconfig <span class="comment">--level 3 httpd onsystemctl enable httpd.service</span></div><div class="line">使某服务不自动启动chkconfig <span class="comment">--level 3 httpd offsystemctl disable httpd.service</span></div><div class="line">检查服务状态        service httpd status        systemctl status httpd.service （服务详细信息） systemctl is-active httpd.service （仅显示是否 Active)</div><div class="line">显示所有已启动的服务chkconfig <span class="comment">--list            systemctl list-units --type=service</span></div><div class="line">启动某服务        service httpd <span class="keyword">start</span>            systemctl <span class="keyword">start</span> httpd.service</div><div class="line">停止某服务        service httpd <span class="keyword">stop</span>            systemctl <span class="keyword">stop</span> httpd.service</div><div class="line">重启某服务        service httpd restart        systemctl restart httpd.service</div></pre></td></tr></table></figure></p><p>2.查看状态<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">查看MySQL的启动状态</div><div class="line">systemctl status mysqld</div><div class="line"></div><div class="line">输出：</div><div class="line">● mysqld.service - MySQL Server</div><div class="line">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since Wed 2018-03-07 21:14:55 CST; 18min ago</div><div class="line">     Docs: man:mysqld(8)</div><div class="line">           http://dev.mysql.com/doc/refman/en/using-systemd.html</div><div class="line">  Process: 17338 ExecStart=/usr/sbin/mysqld <span class="comment">--daemonize --pid-file=/var/run/mysqld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS)</span></div><div class="line">  Process: 17320 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS)</div><div class="line"> Main PID: 17343 (mysqld)</div><div class="line">   CGroup: /system.slice/mysqld.service</div><div class="line">           └─17343 /usr/sbin/mysqld <span class="comment">--daemonize --pid-file=/var/run/mysqld/mysqld.pid</span></div><div class="line"></div><div class="line">Mar 07 21:14:54 VM_0_8_centos systemd[1]: Starting MySQL Server...</div><div class="line">Mar 07 21:14:55 VM_0_8_centos systemd[1]: Started MySQL Server.</div></pre></td></tr></table></figure></p><p>3.开机启动<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl enable mysqld</div><div class="line">systemctl daemon-reload</div></pre></td></tr></table></figure></p><p>4.修改root本地登录密码<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">mysql安装完成之后，在/var/log/mysqld.log文件中给root生成了一个默认密码。通过下面的方式找到root默认密码，然后登录mysql进行修改：</div><div class="line"></div><div class="line">1. 执行： </div><div class="line">      grep 'temporary password' /var/log/mysqld.log</div><div class="line">   输出： </div><div class="line">      2018-03-07T13:01:08.963552Z 1 [Note] A temporary password is generated for root@localhost: zktt1wKFD.HN</div><div class="line"></div><div class="line">   得到临时密码: zktt1wKFD.HN</div><div class="line"></div><div class="line">2. 登录mysql: </div><div class="line">      mysql -uroot -p</div><div class="line">   输入临时密码进入mysql命令行</div><div class="line">3. 修改密码策略</div><div class="line">      mysql5.7默认安装了密码安全检查插件（validate_password），默认密码检查策略要求密码必须包含：大小写字母、数字和特殊符号，并且长度不能少于8位。否则会提示ERROR 1819 (HY000): Your password does not satisfy the current policy requirements错误</div><div class="line"></div><div class="line">   步骤1：不需要密码策略，添加/etc/my.cnf件中添加如下配置禁用即可：</div><div class="line">   validate_password = off</div><div class="line">   步骤2：重新启动mysql服务使配置生效：</div><div class="line">   systemctl restart mysqld</div></pre></td></tr></table></figure></p><h4 id="四：开启远程连接"><a href="#四：开启远程连接" class="headerlink" title="四：开启远程连接"></a>四：开启远程连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">登入mysql</div><div class="line">  mysql -uroot -p</div><div class="line">  </div><div class="line">使用mysql数据库</div><div class="line">  <span class="keyword">use</span> mysql;</div><div class="line">  </div><div class="line">开启远程连接（root 用户名，% 所有人都可以访问 ，password 密码）</div><div class="line">  <span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'root'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</div><div class="line">  </div><div class="line">  也可以添加一个新用户: </div><div class="line">  <span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'shuiyang'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password!'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</div><div class="line">  </div><div class="line">  <span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>; </div><div class="line">  </div><div class="line">重起mysql服务</div><div class="line">  service mysqld restart</div><div class="line">如果执行完以上步骤，还是不能远程连接，那么我们需要查看服务器的防火墙是否开启</div><div class="line">  service iptables status</div><div class="line">如果防火墙开启，请关闭</div><div class="line">  service iptables <span class="keyword">stop</span></div></pre></td></tr></table></figure><h4 id="五：配置默认编码为utf8"><a href="#五：配置默认编码为utf8" class="headerlink" title="五：配置默认编码为utf8"></a>五：配置默认编码为utf8</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示：</div><div class="line"></div><div class="line">[mysqld]</div><div class="line">character_set_server=utf8</div><div class="line">init_connect='<span class="keyword">SET</span> <span class="keyword">NAMES</span> utf8<span class="string">'</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">重新启动mysql服务，查看数据库默认编码如下所示：</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">mysql&gt; show variables like '</span>%<span class="built_in">character</span>%<span class="string">';</span></div><div class="line"><span class="string">+--------------------------+----------------------------+</span></div><div class="line"><span class="string">| Variable_name            | Value                      |</span></div><div class="line"><span class="string">+--------------------------+----------------------------+</span></div><div class="line"><span class="string">| character_set_client     | utf8                       |</span></div><div class="line"><span class="string">| character_set_connection | utf8                       |</span></div><div class="line"><span class="string">| character_set_database   | utf8                       |</span></div><div class="line"><span class="string">| character_set_filesystem | binary                     |</span></div><div class="line"><span class="string">| character_set_results    | utf8                       |</span></div><div class="line"><span class="string">| character_set_server     | utf8                       |</span></div><div class="line"><span class="string">| character_set_system     | utf8                       |</span></div><div class="line"><span class="string">| character_sets_dir       | /usr/share/mysql/charsets/ |</span></div><div class="line"><span class="string">+--------------------------+----------------------------+</span></div><div class="line"><span class="string">8 rows in set (0.00 sec)</span></div></pre></td></tr></table></figure><p>备注：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">默认配置文件路径： </div><div class="line">配置文件：/etc/my.cnf </div><div class="line">日志文件：/var/log//var/log/mysqld.log </div><div class="line">服务启动脚本：/usr/lib/systemd/system/mysqld.service </div><div class="line">socket文件：/var/run/mysqld/mysqld.pid</div></pre></td></tr></table></figure></p><p>转载：<a href="https://www.linuxidc.com/Linux/2016-09/135288.htm" target="_blank" rel="external">https://www.linuxidc.com/Linux/2016-09/135288.htm</a><br>转载:<a href="http://blog.csdn.net/sun614345456/article/details/53672150" target="_blank" rel="external">http://blog.csdn.net/sun614345456/article/details/53672150</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一：配置YUM源&quot;&gt;&lt;a href=&quot;#一：配置YUM源&quot; class=&quot;headerlink&quot; title=&quot;一：配置YUM源&quot;&gt;&lt;/a&gt;一：配置YUM源&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;官网地址 在MySQL官网中下载YUM源rpm安装包：&lt;a href=&quot;http://dev.mysql.com/downloads/repo/yum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.下载mysql源安装包&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget http://dev.mysql.com/get/mysql57-community-&lt;span class=&quot;keyword&quot;&gt;release&lt;/span&gt;-el7&lt;span class=&quot;number&quot;&gt;-8.&lt;/span&gt;noarch.rpm&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 命令笔记:&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;用来从指定的URL下载文件。wget非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性，如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有用&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-a&amp;lt;日志文件&amp;gt;：在指定的日志文件中记录资料的执行过程；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-A&amp;lt;后缀名&amp;gt;：指定要下载文件的后缀名，多个后缀名之间使用逗号进行分隔；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-b：进行后台的方式运行wget；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-B&amp;lt;连接地址&amp;gt;：设置参考的连接地址的基地地址；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-c：继续执行上次终端的任务；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-C&amp;lt;标志&amp;gt;：设置服务器数据块功能标志on为激活，off为关闭，默认值为on；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-d：调试模式运行指令；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-D&amp;lt;域名列表&amp;gt;：设置顺着的域名列表，域名之间用“，”分隔；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-e&amp;lt;指令&amp;gt;：作为文件“.wgetrc”中的一部分执行指定的指令；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-h：显示指令帮助信息；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-i&amp;lt;文件&amp;gt;：从指定文件获取要下载的URL地址；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-l&amp;lt;目录列表&amp;gt;：设置顺着的目录列表，多个目录用“，”分隔；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-L：仅顺着关联的连接；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-r：递归下载方式；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-nc：文件存在时，下载文件不覆盖原有文件；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-nv：下载时只显示更新和出错信息，不显示指令的详细执行过程；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-q：不显示指令执行过程；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-nh：不查询主机名称；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-v：显示详细执行过程；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-V：显示版本信息；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--passive-ftp：使用被动模式PASV连接FTP服务器；&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--follow-ftp：从HTML文件中下载FTP连接文件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;下载并以不同的文件名保存:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;wget -O wordpress.zip http://www.linuxde.net/download.aspx?id=1080&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.songshuiyang.site/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
      <category term="server" scheme="http://www.songshuiyang.site/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>百度富文本框编辑器Ueditor的使用</title>
    <link href="http://www.songshuiyang.site/2018/03/05/Web%E5%90%8E%E5%8F%B0/%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/%E7%99%BE%E5%BA%A6%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A1%86%E7%BC%96%E8%BE%91%E5%99%A8Ueditor%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.songshuiyang.site/2018/03/05/Web后台/相关技术/百度富文本框编辑器Ueditor的使用/</id>
    <published>2018-03-05T14:54:12.000Z</published>
    <updated>2018-03-05T15:40:04.825Z</updated>
    
    <content type="html"><![CDATA[<h3 id="百度富文本框编辑器："><a href="#百度富文本框编辑器：" class="headerlink" title="百度富文本框编辑器："></a>百度富文本框编辑器：</h3><p>官网： <a href="http://ueditor.baidu.com/website/" target="_blank" rel="external">http://ueditor.baidu.com/website/</a> </p><p>官网演示地址：<a href="http://ueditor.baidu.com/website/onlinedemo.html" target="_blank" rel="external">http://ueditor.baidu.com/website/onlinedemo.html</a></p><p>UEditor是由百度web前端研发部开发所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点，开源基于MIT协议，允许自由使用和修改代码…<br><a id="more"></a></p><h4 id="开始使用："><a href="#开始使用：" class="headerlink" title="开始使用："></a>开始使用：</h4><p>参考:<br><a href="http://fex.baidu.com/ueditor/" target="_blank" rel="external">http://fex.baidu.com/ueditor/</a></p><h5 id="1-入门部署和体验"><a href="#1-入门部署和体验" class="headerlink" title="1. 入门部署和体验"></a>1. 入门部署和体验</h5><h5 id="1-1下载编辑器"><a href="#1-1下载编辑器" class="headerlink" title="1.1下载编辑器"></a>1.1下载编辑器</h5><p>到官网下载 UEditor 最新版：[官网地址]</p><h5 id="1-2创建demo文件"><a href="#1-2创建demo文件" class="headerlink" title="1.2创建demo文件"></a>1.2创建demo文件</h5><p>解压下载的包，在解压后的目录创建 demo.html 文件，填入下面的html代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en-US"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>ueditor demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 加载编辑器的容器 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"container"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">type</span>=<span class="string">"text/plain"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        这里写你的初始化内容</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 配置文件 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"ueditor.config.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 编辑器源码文件 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"ueditor.all.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 实例化编辑器 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> ue = UE.getEditor(<span class="string">'container'</span>);</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h5 id="1-3-在浏览器打开demo-html"><a href="#1-3-在浏览器打开demo-html" class="headerlink" title="1.3 在浏览器打开demo.html"></a>1.3 在浏览器打开demo.html</h5><p>如果看到了编辑器，恭喜你，初次部署成功！</p><h5 id="2-整合jsp后端配置"><a href="#2-整合jsp后端配置" class="headerlink" title="2. 整合jsp后端配置"></a>2. 整合jsp后端配置</h5><h5 id="2-1-下载-jsp-版本完整包"><a href="#2-1-下载-jsp-版本完整包" class="headerlink" title="2.1 下载 jsp 版本完整包"></a>2.1 下载 jsp 版本完整包</h5><p>下载地址: <a href="http://ueditor.baidu.com/website/download.html" target="_blank" rel="external">http://ueditor.baidu.com/website/download.html</a> </p><p>选择 [1.4.3.3 Jsp 版本]</p><h5 id="2-2-下载之后会得到如下文件"><a href="#2-2-下载之后会得到如下文件" class="headerlink" title="2.2 下载之后会得到如下文件"></a>2.2 下载之后会得到如下文件</h5><p>按照官网上的做法是把文件copy到webapp跟目录下 , 但我们是集成ueditor, 肯定不是放在根目录下, 所以我们把文件都复制到 webapp/static/plugins/ueditor 下, 方便管理</p><p><img src="/images/server/相关技术/ueditor目录结构图.png" alt="logo"> </p><h5 id="2-3-前台代码集成"><a href="#2-3-前台代码集成" class="headerlink" title="2.3 前台代码集成"></a>2.3 前台代码集成</h5><p>2.3.1 在需要集成ueditor的页面添加如下代码, 如果能看到编辑器则说明配置成功<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en-US"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>ueditor demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"$&#123;ctx&#125;static/plugins/ueditor/lang/zh-cn/zh-cn.js"</span> <span class="attr">media</span>=<span class="string">"all"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 加载编辑器的容器 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"container"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">type</span>=<span class="string">"text/plain"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        这里写你的初始化内容</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 配置文件 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"$&#123;ctx&#125;static/plugins/ueditor/ueditor.config.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 编辑器源码文件 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"$&#123;ctx&#125;static/plugins/ueditor/ueditor.all.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 实例化编辑器 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> ueditor = UE.getEditor(<span class="string">'container'</span>);</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p><p>获取编辑器内容<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var ueditor = UE.getEditor('container');</div><div class="line"></div><div class="line">var content = ueditor.getContent(content);</div></pre></td></tr></table></figure></p><p>设置编辑器内容<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// 等UEditor创建完成就使用UEditor的setContent函数</div><div class="line">var ueditor = UE.getEditor('container');</div><div class="line">ueditor.ready(function() &#123;</div><div class="line">     ueditor.setContent(content);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p><p>有了这些你可以处理一些普通文字, 但如果是要文件上传,图片上传,视频上传这些功能你就要进行一些后台代码的配置</p><h5 id="2-4-后台代码集成"><a href="#2-4-后台代码集成" class="headerlink" title="2.4 后台代码集成"></a>2.4 后台代码集成</h5><p>后台环境： Spring + Spring Mvc + Mybatis + Maven</p><h5 id="2-4-1-配置-ueditor-config-js"><a href="#2-4-1-配置-ueditor-config-js" class="headerlink" title="2.4.1 配置 ueditor.config.js"></a>2.4.1 配置 ueditor.config.js</h5><p>原配置:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> URL = <span class="built_in">window</span>.UEDITOR_HOME_URL || getUEBasePath();</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 配置项主体。注意，此处所有涉及到路径的配置别遗漏URL变量。</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="built_in">window</span>.UEDITOR_CONFIG = &#123;</div><div class="line"></div><div class="line">    <span class="comment">//为编辑器实例添加一个路径，这个不能被注释</span></div><div class="line">    UEDITOR_HOME_URL: URL</div><div class="line"></div><div class="line">    <span class="comment">// 服务器统一请求接口路径</span></div><div class="line">    , <span class="attr">serverUrl</span>: URL + <span class="string">"jsp/controller.jsp"</span></div><div class="line"></div><div class="line">    <span class="comment">//工具栏上的所有的功能按钮和下拉框，可以在new编辑器的实例时选择自己需要的重新定义</span></div></pre></td></tr></table></figure></p><p>修改后的配置：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.UEDITOR_HOME_URL = <span class="string">"/static/plugins/ueditor/"</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> URL = <span class="built_in">window</span>.UEDITOR_HOME_URL || getUEBasePath();</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 配置项主体。注意，此处所有涉及到路径的配置别遗漏URL变量。</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="built_in">window</span>.UEDITOR_CONFIG = &#123;</div><div class="line"></div><div class="line">    <span class="comment">//为编辑器实例添加一个路径，这个不能被注释</span></div><div class="line">    UEDITOR_HOME_URL: URL</div><div class="line"></div><div class="line">    <span class="comment">// 服务器统一请求接口路径</span></div><div class="line">    , <span class="attr">serverUrl</span>: <span class="string">"/ueditor/ueditorAction"</span></div></pre></td></tr></table></figure></p><ol><li>主要是 <code>window.UEDITOR_HOME_URL</code> 这个参数赋值成自己的ueditor的文件路径</li><li>修改 服务器统一请求接口路径 <code>/ueditor/ueditorAction</code> , 这样Ueditor后台服务接口就会请求到这个接口中来</li></ol><h5 id="2-4-2-新增后台服务接口"><a href="#2-4-2-新增后台服务接口" class="headerlink" title="2.4.2 新增后台服务接口"></a>2.4.2 新增后台服务接口</h5><p>第一步： 导入jar包, 我是只添加了最后俩个包，其他的包可以通过maven的形式导入，copy 这俩个包放到WEBINF/lib目录下, 然后配置Maven依赖<br><img src="/images/server/相关技术/jar.png" alt="logo"> </p><p>注：使用maven构建项目的时候需要进行如下配置, 这样maven构建的时候才不会报找不到lib目录下jar包的错误<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">  &lt;groupId&gt;json&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;json&lt;/artifactId&gt;</div><div class="line">  &lt;version&gt;1.0&lt;/version&gt;</div><div class="line">  &lt;scope&gt;system&lt;/scope&gt;</div><div class="line">  &lt;systemPath&gt;$&#123;project.basedir&#125;/src/main/webapp/WEB-INF/lib/json.jar&lt;/systemPath&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p><p>第二步：新建 后台统一服务接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Ueditor 后台统一服务接口</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> songshuiyang</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/3/4 18:11</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/ueditor"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UEditorController</span> <span class="keyword">extends</span> <span class="title">BaseController</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> HttpServletRequest request = <span class="keyword">null</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> String actionType = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> ConfigManager configManager = <span class="keyword">null</span>;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"ueditorAction"</span>, method = &#123;RequestMethod.GET,RequestMethod.POST&#125;)</div><div class="line">    <span class="meta">@ResponseBody</span></div><div class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">exec</span> <span class="params">(@RequestParam String action, HttpServletRequest request)</span> </span>&#123;</div><div class="line">        String result;</div><div class="line">        <span class="keyword">this</span>.actionType = action;</div><div class="line">        <span class="keyword">this</span>.request = request;</div><div class="line">        String rootPath =  request.getSession().getServletContext().getRealPath(<span class="string">"/"</span>);</div><div class="line">        String contextPath = request.getContextPath();</div><div class="line">        <span class="keyword">this</span>.configManager = ConfigManager.getInstance( rootPath, contextPath,<span class="string">"/static/plugins/ueditor/jsp/controller.jsp"</span>);</div><div class="line"></div><div class="line">        String callbackName = <span class="keyword">this</span>.request.getParameter(<span class="string">"callback"</span>);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( callbackName != <span class="keyword">null</span> ) &#123;</div><div class="line">            result =  !validCallbackName( callbackName ) ? <span class="keyword">new</span> BaseState( <span class="keyword">false</span>, AppInfo.ILLEGAL ).toJSONString() : callbackName+<span class="string">"("</span>+<span class="keyword">this</span>.invoke()+<span class="string">");"</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            result = <span class="keyword">this</span>.invoke();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> JSONObject.fromObject(result);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">invoke</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( actionType == <span class="keyword">null</span> || !ActionMap.mapping.containsKey( actionType ) ) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> BaseState( <span class="keyword">false</span>, AppInfo.INVALID_ACTION ).toJSONString();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( <span class="keyword">this</span>.configManager == <span class="keyword">null</span> || !<span class="keyword">this</span>.configManager.valid() ) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> BaseState( <span class="keyword">false</span>, AppInfo.CONFIG_ERROR ).toJSONString();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        State state = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> actionCode = ActionMap.getType( <span class="keyword">this</span>.actionType );</div><div class="line"></div><div class="line">        Map&lt;String, Object&gt; conf;</div><div class="line"></div><div class="line">        <span class="keyword">switch</span> ( actionCode ) &#123;</div><div class="line"></div><div class="line">            <span class="keyword">case</span> ActionMap.CONFIG:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.configManager.getAllConfig().toString();</div><div class="line"></div><div class="line">            <span class="keyword">case</span> ActionMap.UPLOAD_IMAGE:</div><div class="line">            <span class="keyword">case</span> ActionMap.UPLOAD_SCRAWL:</div><div class="line">            <span class="keyword">case</span> ActionMap.UPLOAD_VIDEO:</div><div class="line">            <span class="keyword">case</span> ActionMap.UPLOAD_FILE:</div><div class="line">                conf = <span class="keyword">this</span>.configManager.getConfig( actionCode );</div><div class="line">                state = <span class="keyword">new</span> Uploader( request, conf ).doExec();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line"></div><div class="line">            <span class="keyword">case</span> ActionMap.CATCH_IMAGE:</div><div class="line">                conf = configManager.getConfig( actionCode );</div><div class="line">                String[] list = <span class="keyword">this</span>.request.getParameterValues( (String)conf.get( <span class="string">"fieldName"</span> ) );</div><div class="line">                state = <span class="keyword">new</span> ImageHunter( conf ).capture( list );</div><div class="line">                <span class="keyword">break</span>;</div><div class="line"></div><div class="line">            <span class="keyword">case</span> ActionMap.LIST_IMAGE:</div><div class="line">            <span class="keyword">case</span> ActionMap.LIST_FILE:</div><div class="line">                conf = configManager.getConfig( actionCode );</div><div class="line">                <span class="keyword">int</span> start = <span class="keyword">this</span>.getStartIndex();</div><div class="line">                state = <span class="keyword">new</span> FileManager( conf ).listFile( start );</div><div class="line">                <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">assert</span> state != <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">return</span> state.toJSONString();</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getStartIndex</span> <span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        String start = <span class="keyword">this</span>.request.getParameter( <span class="string">"start"</span> );</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">return</span> Integer.parseInt( start );</div><div class="line">        &#125; <span class="keyword">catch</span> ( Exception e ) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * callback参数验证</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> name 名字</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">validCallbackName</span> <span class="params">( String name )</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name.matches( <span class="string">"^[a-zA-Z_]+[\\w0-9_]*$"</span> );</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>一： 初始化ueditor的时候, ueditor会访问该接口, 此时<code>action</code> 参数是 <code>config</code> , 该接口会返回其<code>/static/plugins/ueditor/jsp/config.json</code> 配置的json参数，这些参数配置了上传功能的一些参数, 通过这些配置你可以DIY上传功能, ueditor获取到这些参数之后就可以使用上传功能了,否则你上传文件会提示： 后端配置项没有正常加载，上传插件不能正常使用！</p><p>配置主要包括： 上传图片配置项 涂鸦图片上传配置项 截图工具上传 抓取远程图片配置 上传视频配置 上传文件配置</p><p>二： 如要上传图片, ueditor会访问该接口, 此时<code>action</code> 参数是 <code>uploadimage</code> ，则会执行上传图片操作, 上传成功后会返回<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    "state": "SUCCESS",</div><div class="line">    "url": "upload/demo.jpg",</div><div class="line">    "title": "demo.jpg",</div><div class="line">    "original": "demo.jpg"</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>三：由于系统文件上传使用的是阿里云的OSS所以需要将文件上传转到OSS处理上</p><p>前台配置：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">// 当action是如下时，访问自己定义的服务接口</span></span></div><div class="line"><span class="undefined">    UE.Editor.prototype._bkGetActionUrl=UE.Editor.prototype.getActionUrl;</span></div><div class="line"><span class="javascript">    UE.Editor.prototype.getActionUrl=<span class="function"><span class="keyword">function</span>(<span class="params">action</span>)</span>&#123;</span></div><div class="line"><span class="javascript">        <span class="comment">// 上传图片, 文件, 视频</span></span></div><div class="line"><span class="javascript">        <span class="keyword">if</span> (action == <span class="string">'uploadimage'</span> || action == <span class="string">'uploadfile'</span>  || action == <span class="string">'uploadvideo'</span>) &#123;</span></div><div class="line"><span class="javascript">            <span class="keyword">return</span> <span class="string">'/file/uploadLocal'</span>;</span></div><div class="line"><span class="javascript">        &#125;  <span class="keyword">else</span> <span class="keyword">if</span>( action== <span class="string">'uploadscrawl'</span>)&#123; <span class="comment">// 上传涂鸦，涂鸦请求是Base64字符需要请求另外的接口</span></span></div><div class="line"><span class="javascript">            <span class="keyword">return</span> <span class="string">'/file/uploadScrawl'</span>;</span></div><div class="line"><span class="javascript">        &#125;   <span class="keyword">else</span> <span class="keyword">if</span>(action == <span class="string">'listimage'</span>)&#123;</span></div><div class="line"><span class="javascript">            <span class="keyword">return</span> <span class="keyword">this</span>._bkGetActionUrl.call(<span class="keyword">this</span>, action);</span></div><div class="line"><span class="javascript">        &#125; <span class="keyword">else</span>&#123;</span></div><div class="line"><span class="javascript">            <span class="keyword">return</span> <span class="keyword">this</span>._bkGetActionUrl.call(<span class="keyword">this</span>, action);</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> ueditor = UE.getEditor(<span class="string">'ueditorContainer'</span>);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p><p>后台接口：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.ecut.admin.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.aliyun.oss.ClientException;</div><div class="line"><span class="keyword">import</span> com.aliyun.oss.OSSException;</div><div class="line"><span class="keyword">import</span> com.ecut.admin.entity.OssFile;</div><div class="line"><span class="keyword">import</span> com.ecut.admin.entity.UeditorState;</div><div class="line"><span class="keyword">import</span> com.ecut.admin.service.impl.FileServiceImpl;</div><div class="line"><span class="keyword">import</span> com.ecut.core.base.BaseController;</div><div class="line"><span class="keyword">import</span> com.ecut.core.utils.Base64Utils;</div><div class="line"><span class="keyword">import</span> com.ecut.core.utils.MessageUtils;</div><div class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</div><div class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</div><div class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</div><div class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</div><div class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartHttpServletRequest;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.InputStream;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Iterator;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.ecut.core.utils.MessageUtils.success;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 阿里云OSS文件上传控制器</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> songshuiyang</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/2/11 20:22</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/file"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileController</span> <span class="keyword">extends</span> <span class="title">BaseController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(getClass());</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> FileServiceImpl fileServiceImpl;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 文件上传</span></div><div class="line"><span class="comment">     * produces="application/json;charset=UTF-8 解决服务器返回406问题</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> OSSException</span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> ClientException</span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/uploadLocal"</span>, method = RequestMethod.POST, produces=<span class="string">"application/json;charset=UTF-8"</span>)</div><div class="line">    <span class="meta">@ResponseBody</span></div><div class="line">    <span class="function"><span class="keyword">public</span> UeditorState <span class="title">uploadLocalFile</span><span class="params">(@RequestParam(value = <span class="string">"upfile"</span>,required = <span class="keyword">false</span>)</span> MultipartFile file) <span class="keyword">throws</span> OSSException, ClientException, IOException </span>&#123;</div><div class="line">        Map&lt;String, Object&gt; resultMap = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        OssFile file1 = fileServiceImpl.uploadFileByMultipartFile(file);</div><div class="line">        UeditorState ueditorState = <span class="keyword">new</span> UeditorState(<span class="string">"SUCCESS"</span>,file1.getFileSrc(),file1.getFileName(),file1.getFileName());</div><div class="line">        <span class="keyword">return</span> ueditorState;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 上传涂鸦照片</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> upfile</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/uploadScrawl"</span>, method = RequestMethod.POST, produces=<span class="string">"application/json;charset=UTF-8"</span>)</div><div class="line">    <span class="meta">@ResponseBody</span></div><div class="line">    <span class="function"><span class="keyword">public</span> UeditorState <span class="title">uploadscrawl</span><span class="params">(String upfile)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="keyword">byte</span> [] bytes= Base64Utils.decode(upfile);</div><div class="line">        InputStream inputStream = <span class="keyword">new</span> ByteArrayInputStream(bytes);</div><div class="line">        String fileType = <span class="string">"image/png"</span>;</div><div class="line">        Long fileSize = <span class="keyword">new</span> Long((<span class="keyword">long</span>)bytes.length);</div><div class="line">        String fileName = <span class="string">"scrawl"</span> + System.currentTimeMillis() + <span class="string">".png"</span>;</div><div class="line">        String extensionName = <span class="string">"png"</span>;</div><div class="line">        OssFile file1 = fileServiceImpl.uploadFileByInputStream(inputStream, fileType,fileSize,fileName,extensionName);</div><div class="line">        UeditorState ueditorState = <span class="keyword">new</span> UeditorState(<span class="string">"SUCCESS"</span>,file1.getFileSrc(),file1.getFileName(),file1.getFileName());</div><div class="line">        <span class="keyword">return</span> ueditorState;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h5 id="2-4-3-问题集合"><a href="#2-4-3-问题集合" class="headerlink" title="2.4.3 问题集合"></a>2.4.3 问题集合</h5><h6 id="解决百度ueditor富文本编辑器不能插入视频的问题-src掉链-src清空，不能显示视频"><a href="#解决百度ueditor富文本编辑器不能插入视频的问题-src掉链-src清空，不能显示视频" class="headerlink" title="解决百度ueditor富文本编辑器不能插入视频的问题/src掉链/src清空，不能显示视频"></a>解决百度ueditor富文本编辑器不能插入视频的问题/src掉链/src清空，不能显示视频</h6><p>转载：<a href="http://blog.csdn.net/qq_34787830/article/details/75092347" target="_blank" rel="external">http://blog.csdn.net/qq_34787830/article/details/75092347</a></p><blockquote><p>直接下载到的百度富文本编辑器当插入视频的时候会自动清掉src，不显示视频造成这样的原因是:百度富文本编辑器的过滤器xssFilter导致插入视频异常，编辑器在切换源码的过程中过滤掉img的_url属性（用来存储视频url）</p></blockquote><p>解决办法:</p><p>1.在配置文件ueditor.config.js中，定位 //xss过滤白名单，即,whitList:{ }，对 img: 增加 “_url” 属性： </p><ol><li>在下面的 video 标签后面新增3给标签，使Ueditor分别能支持embed标签和iframe标签：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">source: [<span class="string">'src'</span>, <span class="string">'type'</span>],</div><div class="line"></div><div class="line">embed: [<span class="string">'type'</span>, <span class="string">'class'</span>, <span class="string">'pluginspage'</span>, <span class="string">'src'</span>, <span class="string">'width'</span>, <span class="string">'height'</span>, <span class="string">'align'</span>, <span class="string">'style'</span>, <span class="string">'wmode'</span>, <span class="string">'play'</span>,  </div><div class="line"></div><div class="line">     +  <span class="string">'autoplay'</span>,<span class="string">'loop'</span>, <span class="string">'menu'</span>, <span class="string">'allowscriptaccess'</span>, <span class="string">'allowfullscreen'</span>, <span class="string">'controls'</span>, <span class="string">'preload'</span>],</div><div class="line"></div><div class="line">iframe: [<span class="string">'src'</span>, <span class="string">'class'</span>, <span class="string">'height'</span>, <span class="string">'width'</span>, <span class="string">'max-width'</span>, <span class="string">'max-height'</span>, <span class="string">'align'</span>, <span class="string">'frameborder'</span>, <span class="string">'allowfullscreen'</span>]</div></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;百度富文本框编辑器：&quot;&gt;&lt;a href=&quot;#百度富文本框编辑器：&quot; class=&quot;headerlink&quot; title=&quot;百度富文本框编辑器：&quot;&gt;&lt;/a&gt;百度富文本框编辑器：&lt;/h3&gt;&lt;p&gt;官网： &lt;a href=&quot;http://ueditor.baidu.com/website/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ueditor.baidu.com/website/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;官网演示地址：&lt;a href=&quot;http://ueditor.baidu.com/website/onlinedemo.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ueditor.baidu.com/website/onlinedemo.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UEditor是由百度web前端研发部开发所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点，开源基于MIT协议，允许自由使用和修改代码…&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>基于wordspress搭建个人博客系统</title>
    <link href="http://www.songshuiyang.site/2018/03/04/Web%E5%90%8E%E5%8F%B0/%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/%E5%9F%BA%E4%BA%8Ewordspress%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    <id>http://www.songshuiyang.site/2018/03/04/Web后台/相关技术/基于wordspress搭建个人博客系统/</id>
    <published>2018-03-04T12:54:12.000Z</published>
    <updated>2018-03-04T08:10:13.375Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是Wordspress："><a href="#什么是Wordspress：" class="headerlink" title="什么是Wordspress："></a>什么是Wordspress：</h3><p>官网： <a href="https://cn.wordpress.org/" target="_blank" rel="external">https://cn.wordpress.org/</a> 提供了中英版</p><p>WordPress是使用PHP语言开发的博客平台，用户可以在支持PHP和MySQL数据库的服务器上架设属于自己的网站。也可以把 WordPress当作一个内容管理系统（CMS）来使用。</p><p>WordPress是一款个人博客系统，并逐步演化成一款内容管理系统软件，它是使用PHP语言和MySQL数据库开发的。用户可以在支持 PHP 和 MySQL数据库的服务器上使用自己的博客。</p><p>WordPress有许多第三方开发的免费模板，安装方式简单易用。不过要做一个自己的模板，则需要你有一定的专业知识。比如你至少要懂的标准通用标记语言下的一个应用HTML代码、CSS、PHP等相关知识。</p><p>WordPress官方支持中文版，同时有爱好者开发的第三方中文语言包，如wopus中文语言包。WordPress拥有成千上万个各式插件和不计其数的主题模板样式。<br><a id="more"></a></p><h3 id="搭建教程："><a href="#搭建教程：" class="headerlink" title="搭建教程："></a>搭建教程：</h3><p>参考下面的帖子写的十分详细</p><p><a href="https://www.jianshu.com/p/56750622cac9" target="_blank" rel="external">https://www.jianshu.com/p/56750622cac9</a></p><h3 id="LNMP一键安装包"><a href="#LNMP一键安装包" class="headerlink" title="LNMP一键安装包"></a>LNMP一键安装包</h3><p>LNMP一键安装包是一个用Linux Shell编写的可以为CentOS/RHEL/Fedora/Aliyun/Amazon、Debian/Ubuntu/Raspbian/Deepin/Mint Linux VPS或独立主机安装LNMP(Nginx/MySQL/PHP)、LNMPA(Nginx/MySQL/PHP/Apache)、LAMP(Apache/MySQL/PHP)生产环境的Shell程序。<br><a href="https://lnmp.org/" target="_blank" rel="external">https://lnmp.org/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是Wordspress：&quot;&gt;&lt;a href=&quot;#什么是Wordspress：&quot; class=&quot;headerlink&quot; title=&quot;什么是Wordspress：&quot;&gt;&lt;/a&gt;什么是Wordspress：&lt;/h3&gt;&lt;p&gt;官网： &lt;a href=&quot;https://cn.wordpress.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cn.wordpress.org/&lt;/a&gt; 提供了中英版&lt;/p&gt;
&lt;p&gt;WordPress是使用PHP语言开发的博客平台，用户可以在支持PHP和MySQL数据库的服务器上架设属于自己的网站。也可以把 WordPress当作一个内容管理系统（CMS）来使用。&lt;/p&gt;
&lt;p&gt;WordPress是一款个人博客系统，并逐步演化成一款内容管理系统软件，它是使用PHP语言和MySQL数据库开发的。用户可以在支持 PHP 和 MySQL数据库的服务器上使用自己的博客。&lt;/p&gt;
&lt;p&gt;WordPress有许多第三方开发的免费模板，安装方式简单易用。不过要做一个自己的模板，则需要你有一定的专业知识。比如你至少要懂的标准通用标记语言下的一个应用HTML代码、CSS、PHP等相关知识。&lt;/p&gt;
&lt;p&gt;WordPress官方支持中文版，同时有爱好者开发的第三方中文语言包，如wopus中文语言包。WordPress拥有成千上万个各式插件和不计其数的主题模板样式。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 数据类型.md</title>
    <link href="http://www.songshuiyang.site/2018/03/03/Web%E5%90%8E%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql%20%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://www.songshuiyang.site/2018/03/03/Web后台/数据库/Mysql 数据类型/</id>
    <published>2018-03-03T03:15:12.000Z</published>
    <updated>2018-03-03T14:45:19.183Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL中定义数据字段的类型对你数据库的优化是非常重要的。</p><p>MySQL支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。</p><a id="more"></a><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><p>MySQL支持所有标准SQL数值数据类型。</p><p>这些类型包括严格数值数据类型<code>(INTEGER、SMALLINT、DECIMAL和NUMERIC)</code>，以及近似数值数据类型<code>(FLOAT、REAL和DOUBLE PRECISION)</code>。</p><p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p><p>BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。</p><p>作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。</p><p><img src="/images/server/数据库/mysqlint.png" alt="logo"> </p><p>备注:<br>1.BIT[M]</p><p>位字段类型，M表示每个值的位数，范围从1到64，如果M被忽略，默认为1</p><p>2.TINYINT[(M)] [UNSIGNED] [ZEROFILL]  M默认为4,占1个字节</p><p>很小的整数。带符号的范围是-128到127。无符号的范围是0到255。</p><ol><li>BOOL，BOOLEAN</li></ol><p>是TINYINT(1)的同义词。zero值被视为假。非zero值视为真。</p><p>4.SMALLINT[(M)] [UNSIGNED] [ZEROFILL] M默认为6,占2个字节</p><p>小的整数。带符号的范围是-32768到32767。无符号的范围是0到65535。</p><p>5.MEDIUMINT[(M)] [UNSIGNED] [ZEROFILL] M默认为9,占3个字节</p><p>中等大小的整数。带符号的范围是-8388608到8388607。无符号的范围是0到16777215。</p><ol><li>INT[(M)] [UNSIGNED] [ZEROFILL]   M默认为11,占4个字节</li></ol><p>普通大小的整数。带符号的范围是-2147483648到2147483647。无符号的范围是0到4294967295。</p><p>7.BIGINT[(M)] [UNSIGNED] [ZEROFILL] M默认为20,占8个字节</p><p>大整数。带符号的范围是-9223372036854775808到9223372036854775807。无符号的范围是0到18446744073709551615。</p><p>注意：这里的M代表的并不是存储在数据库中的具体的长度，以前总是会误以为int(3)只能存储3个长度的数字，int(11)就会存储11个长度的数字，这是大错特错的。</p><p>tinyint(1) 和 tinyint(4) 中的1和4并不表示存储长度，只有字段指定zerofill是有用，<br>如tinyint(4)，如果实际值是2，如果列指定了zerofill，查询结果就是0002，左边用0来填充。</p><h3 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h3><p>表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR。</p><p>每个时间类型有一个有效值范围和一个”零”值，当指定不合法的MySQL不能表示的值时使用”零”值。</p><p>TIMESTAMP类型有专有的自动更新特性</p><p><img src="/images/server/数据库/mysqldate.png" alt="logo"> </p><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><p>字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型</p><p><img src="/images/server/数据库/mysqlchar.png" alt="logo"> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL中定义数据字段的类型对你数据库的优化是非常重要的。&lt;/p&gt;
&lt;p&gt;MySQL支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="db" scheme="http://www.songshuiyang.site/tags/db/"/>
    
  </entry>
  
  <entry>
    <title>animate.css</title>
    <link href="http://www.songshuiyang.site/2018/03/03/Web%E5%89%8D%E7%AB%AF/animate/"/>
    <id>http://www.songshuiyang.site/2018/03/03/Web前端/animate/</id>
    <published>2018-03-03T02:52:12.000Z</published>
    <updated>2018-03-20T15:06:43.836Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-前言"><a href="#一-前言" class="headerlink" title="一 前言:"></a>一 前言:</h3><h4 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h4><p>在看其他人的项目的时候发现其动画效果做的不错，通过看人家的代码发现用了这个<code>animate.css</code>这个css组件，使用起来也是特别的方便，所以就把他copy到项目中来了，顿时档次就上升了</p><h4 id="简介"><a href="#简介" class="headerlink" title="简介:"></a>简介:</h4><p><code>animate.css</code> 是一个来自国外的 CSS3 动画库，它预设了抖动（shake）、闪烁（flash）、弹跳（bounce）、翻转（flip）、旋转（rotateIn/rotateOut）、淡入淡出（fadeIn/fadeOut）等多达 60 多种动画效果，几乎包含了所有常见的动画效果。而且使用起来也是特别方便</p><p>官网传送门: <a href="https://daneden.github.io/animate.css/" target="_blank" rel="external">https://daneden.github.io/animate.css/</a></p><p>在官网上有示例动画，主页也十分简洁，同时也提供了代码下载, 也可以看看这篇博客写的例子 <code>https://www.cnblogs.com/xiaohuochai/p/7372665.html</code></p><h3 id="二-如何使用："><a href="#二-如何使用：" class="headerlink" title="二 如何使用："></a>二 如何使用：</h3><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol><li>在官网上下载 <code>animate.css</code> , 把他导入到项目中来, 也可以使用cdn <code>https://unpkg.com/animate.css@3.5.2/animate.min.css</code></li><li><p>代码示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://unpkg.com/animate.css@3.5.2/animate.min.css"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">            .box&#123;height: 100px;width: 100px;background-color: lightblue&#125;</span></div><div class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box animated flash"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>只要在元素中class 添加 <code>animated</code> 和相应的动画class名就可以实现动画效果, 当然也可以通过js动态设置class</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一-前言&quot;&gt;&lt;a href=&quot;#一-前言&quot; class=&quot;headerlink&quot; title=&quot;一 前言:&quot;&gt;&lt;/a&gt;一 前言:&lt;/h3&gt;&lt;h4 id=&quot;背景：&quot;&gt;&lt;a href=&quot;#背景：&quot; class=&quot;headerlink&quot; title=&quot;背景：&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="client" scheme="http://www.songshuiyang.site/categories/client/"/>
    
    
      <category term="css" scheme="http://www.songshuiyang.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Spring mvc 前后台传值中文乱码问题</title>
    <link href="http://www.songshuiyang.site/2018/02/28/Web%E5%90%8E%E5%8F%B0/Spring/spring-mvc/Spring%20mvc%20%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://www.songshuiyang.site/2018/02/28/Web后台/Spring/spring-mvc/Spring mvc 中文乱码问题/</id>
    <published>2018-02-28T13:49:44.000Z</published>
    <updated>2018-02-28T13:57:02.600Z</updated>
    
    <content type="html"><![CDATA[<p>一： 解决GET请求参数到了后台中文乱码问题</p><p>方式一: 修改tomcat配置, 暂时做法，没有找到更好的解决办法，换了tomcat了又要重新配置<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">把tomcat下，server.xml下，添加如下配置，就解决了．</div><div class="line"></div><div class="line">  &lt;Connector connectionTimeout=<span class="string">"20000"</span> port=<span class="string">"8080"</span> protocol=<span class="string">"HTTP/1.1"</span> redirectPort=<span class="string">"8443"</span> URIEncoding=<span class="string">"UTF-8"</span>/&gt;</div></pre></td></tr></table></figure></p><p>方式二: 自定义filter, 解决了get请求中文参数问题，但post请求参数到了后台就gg了</p><a id="more"></a><ol><li><p>新建 <code>CustomEncodingFilter.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.ecut.core.web.filter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.cglib.proxy.InvocationHandler;</div><div class="line"><span class="keyword">import</span> org.springframework.cglib.proxy.Proxy;</div><div class="line"><span class="keyword">import</span> org.springframework.web.filter.OncePerRequestFilter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletException;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</div><div class="line"><span class="keyword">import</span> java.lang.reflect.Method;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomEncodingFilter</span> <span class="keyword">extends</span> <span class="title">OncePerRequestFilter</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String encoding;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEncoding</span><span class="params">(String encoding)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.encoding = encoding;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span></div><div class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</div><div class="line">        <span class="comment">// 设置请求响应字符编码</span></div><div class="line">        request.setCharacterEncoding(encoding);</div><div class="line">        response.setCharacterEncoding(encoding);</div><div class="line"></div><div class="line">        <span class="comment">// 传递给目标servlet或jsp的实际上是动态代理的对象，而不是原始的HttpServletRequest对象</span></div><div class="line">        request = (HttpServletRequest) Proxy.newProxyInstance(request.getClass().getClassLoader(), request.getClass().getInterfaces(), <span class="keyword">new</span> MyInvacationHandler(request));</div><div class="line">        chain.doFilter(request, response);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyInvacationHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> HttpServletRequest request;</div><div class="line">        MyInvacationHandler(HttpServletRequest request)&#123;</div><div class="line">            <span class="keyword">this</span>.request=request;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">            <span class="keyword">switch</span> (method.getName()) &#123;</div><div class="line">                <span class="keyword">case</span> <span class="string">"getParameter"</span>:</div><div class="line">                    String value = request.getParameter((String)args[<span class="number">0</span>]);</div><div class="line">                    <span class="keyword">try</span> &#123;</div><div class="line">                        <span class="keyword">if</span>(value != <span class="keyword">null</span>)&#123;</div><div class="line">                            value=<span class="keyword">new</span> String(value.getBytes(<span class="string">"ISO-8859-1"</span>),encoding);</div><div class="line">                        &#125;</div><div class="line">                    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</div><div class="line">                        e.printStackTrace();</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">return</span> value;</div><div class="line">                <span class="keyword">case</span> <span class="string">"getParameterValues"</span>:</div><div class="line">                    String[] values = request.getParameterValues((String)args[<span class="number">0</span>]);</div><div class="line">                    <span class="keyword">if</span> (values != <span class="keyword">null</span>) &#123;</div><div class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; values.length; i++) &#123;</div><div class="line">                            <span class="keyword">try</span> &#123;</div><div class="line">                                values[i] = <span class="keyword">new</span> String(values[i].getBytes(<span class="string">"ISO-8859-1"</span>),encoding);</div><div class="line">                            &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</div><div class="line">                                e.printStackTrace();</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">return</span> values;</div><div class="line">                <span class="keyword">default</span>:</div><div class="line">                    <span class="keyword">return</span> method.invoke(request, args);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>配置<code>web.xml</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;filter&gt;</div><div class="line">  &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;</div><div class="line">  &lt;filter-<span class="class"><span class="keyword">class</span>&gt;<span class="title">com</span>.<span class="title">ecut</span>.<span class="title">core</span>.<span class="title">web</span>.<span class="title">filter</span>.<span class="title">CharacterEncodingFilter</span>&lt;/<span class="title">filter</span>-<span class="title">class</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">async</span>-<span class="title">supported</span>&gt;<span class="title">true</span>&lt;/<span class="title">async</span>-<span class="title">supported</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">init</span>-<span class="title">param</span>&gt;</span></div><div class="line"><span class="class">    &lt;<span class="title">param</span>-<span class="title">name</span>&gt;<span class="title">encoding</span>&lt;/<span class="title">param</span>-<span class="title">name</span>&gt;</span></div><div class="line"><span class="class">    &lt;<span class="title">param</span>-<span class="title">value</span>&gt;<span class="title">UTF</span>-8&lt;/<span class="title">param</span>-<span class="title">value</span>&gt;</span></div><div class="line"><span class="class">  &lt;/<span class="title">init</span>-<span class="title">param</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">init</span>-<span class="title">param</span>&gt;</span></div><div class="line"><span class="class">    &lt;<span class="title">param</span>-<span class="title">name</span>&gt;<span class="title">forceEncoding</span>&lt;/<span class="title">param</span>-<span class="title">name</span>&gt;</span></div><div class="line"><span class="class">    &lt;<span class="title">param</span>-<span class="title">value</span>&gt;<span class="title">true</span>&lt;/<span class="title">param</span>-<span class="title">value</span>&gt;</span></div><div class="line"><span class="class">  &lt;/<span class="title">init</span>-<span class="title">param</span>&gt;</span></div><div class="line"><span class="class">&lt;/<span class="title">filter</span>&gt;</span></div><div class="line"><span class="class">&lt;<span class="title">filter</span>-<span class="title">mapping</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">filter</span>-<span class="title">name</span>&gt;<span class="title">encodingFilter</span>&lt;/<span class="title">filter</span>-<span class="title">name</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;/*&lt;/<span class="title">url</span>-<span class="title">pattern</span>&gt;</span></div><div class="line"><span class="class">&lt;/<span class="title">filter</span>-<span class="title">mapping</span>&gt;</span></div></pre></td></tr></table></figure></li></ol><p>二： 解决POST请求参数到了后台中文乱码问题<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;filter&gt;</div><div class="line">  &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;</div><div class="line">  &lt;filter-<span class="class"><span class="keyword">class</span>&gt;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">web</span>.<span class="title">filter</span>.<span class="title">CharacterEncodingFilter</span>&lt;/<span class="title">filter</span>-<span class="title">class</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">async</span>-<span class="title">supported</span>&gt;<span class="title">true</span>&lt;/<span class="title">async</span>-<span class="title">supported</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">init</span>-<span class="title">param</span>&gt;</span></div><div class="line"><span class="class">    &lt;<span class="title">param</span>-<span class="title">name</span>&gt;<span class="title">encoding</span>&lt;/<span class="title">param</span>-<span class="title">name</span>&gt;</span></div><div class="line"><span class="class">    &lt;<span class="title">param</span>-<span class="title">value</span>&gt;<span class="title">UTF</span>-8&lt;/<span class="title">param</span>-<span class="title">value</span>&gt;</span></div><div class="line"><span class="class">  &lt;/<span class="title">init</span>-<span class="title">param</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">init</span>-<span class="title">param</span>&gt;</span></div><div class="line"><span class="class">    &lt;<span class="title">param</span>-<span class="title">name</span>&gt;<span class="title">forceEncoding</span>&lt;/<span class="title">param</span>-<span class="title">name</span>&gt;</span></div><div class="line"><span class="class">    &lt;<span class="title">param</span>-<span class="title">value</span>&gt;<span class="title">true</span>&lt;/<span class="title">param</span>-<span class="title">value</span>&gt;</span></div><div class="line"><span class="class">  &lt;/<span class="title">init</span>-<span class="title">param</span>&gt;</span></div><div class="line"><span class="class">&lt;/<span class="title">filter</span>&gt;</span></div><div class="line"><span class="class">&lt;<span class="title">filter</span>-<span class="title">mapping</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">filter</span>-<span class="title">name</span>&gt;<span class="title">encodingFilter</span>&lt;/<span class="title">filter</span>-<span class="title">name</span>&gt;</span></div><div class="line"><span class="class">  &lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;/*&lt;/<span class="title">url</span>-<span class="title">pattern</span>&gt;</span></div><div class="line"><span class="class">&lt;/<span class="title">filter</span>-<span class="title">mapping</span>&gt;</span></div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一： 解决GET请求参数到了后台中文乱码问题&lt;/p&gt;
&lt;p&gt;方式一: 修改tomcat配置, 暂时做法，没有找到更好的解决办法，换了tomcat了又要重新配置&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;把tomcat下，server.xml下，添加如下配置，就解决了．&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;Connector connectionTimeout=&lt;span class=&quot;string&quot;&gt;&quot;20000&quot;&lt;/span&gt; port=&lt;span class=&quot;string&quot;&gt;&quot;8080&quot;&lt;/span&gt; protocol=&lt;span class=&quot;string&quot;&gt;&quot;HTTP/1.1&quot;&lt;/span&gt; redirectPort=&lt;span class=&quot;string&quot;&gt;&quot;8443&quot;&lt;/span&gt; URIEncoding=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;/&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方式二: 自定义filter, 解决了get请求中文参数问题，但post请求参数到了后台就gg了&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://www.songshuiyang.site/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
      <category term="Spring" scheme="http://www.songshuiyang.site/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>阿里巴巴Java编程规范</title>
    <link href="http://www.songshuiyang.site/2018/02/13/Web%E5%90%8E%E5%8F%B0/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/"/>
    <id>http://www.songshuiyang.site/2018/02/13/Web后台/编程规范/阿里巴巴Java编程规范/</id>
    <published>2018-02-13T01:54:12.000Z</published>
    <updated>2018-02-26T12:34:49.085Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><center>关于《阿里巴巴Java开发手册》</center><p>你是否曾因Java代码规范版本纷杂而无所适从？</p><p>你是否想过代码规范能将系统故障率降低20%？</p><p>你是否曾因团队代码风格迥异而协同困难？</p><p>你是否正在review一些原本可以避免的故障？</p><p>你是否无法确定自己的代码足够健壮？ </p><a id="more"></a><h4 id="码出高效，码出质量！"><a href="#码出高效，码出质量！" class="headerlink" title="码出高效，码出质量！"></a>码出高效，码出质量！</h4><p>相比C++代码规范业界已经达成共识，Java代码规范业界比较混乱，我们期待这次发布的Java代码规范能够给业界带来一个标准，促使整体行业代码规范水平得到提高，最终能够帮助企业和开发者提升代码质量和降低代码故障率。</p><h4 id="阿里出品，质量保证！"><a href="#阿里出品，质量保证！" class="headerlink" title="阿里出品，质量保证！"></a>阿里出品，质量保证！</h4><p>阿里Java技术团队一手打造出Dubbo、JStorm、Fastjson等诸多流行开源框架，部分已成为Apache基金会孵化项目；</p><p>阿里在Java后端领域支撑起全球访问量最大的服务器集群；</p><p>Java代码构建的阿里双11业务系统订单处理能力达到17.5万笔/秒；</p><p>到目前已累计数亿行高并发、高稳定性的最佳Java代码实践；</p><p>……</p><p>此次公开的Java开发手册正是出自这样的团队，近万名阿里Java技术精英的经验总结，并经历了多次大规模一线实战检验及完善，铸就了这本高含金量的阿里Java开发手册。该手册以Java开发者为中心视角，划分为编程规约、异常日志规约、MYSQL规约、工程规约、安全规约五大块，再根据内容特征，细分成若干二级子目录。根据约束力强弱和故障敏感性，规约依次分为强制、推荐、参考三大类。此套规范不仅能让代码一目了然， 更有助于加强团队分工与合作、真正提升效率。 </p><h4 id="无规矩不成方圆-无规范不能协作"><a href="#无规矩不成方圆-无规范不能协作" class="headerlink" title="无规矩不成方圆 无规范不能协作"></a>无规矩不成方圆 无规范不能协作</h4><p>众所周知，制订交通法规表面上是要限制行车权，实际上是保障公众的人身安全。试想如果没有限速，没有红绿灯，没有规定靠右行驶，谁还敢上路行驶。 </p><p>同理，对软件来说，适当的规范和标准绝不是消灭代码内容的创造性、优雅性，而是限制过度个性化，以一种普遍认可的方式一起做事，降低故障率，提升协作效率。开发手册详细列举如何开发更加高效，更加容错，更加有协作性，力求知其然，更知其不然，结合正反例，提高代码质量。比如，异常日志处理时的各种不规范行为；集合转换的各种坑；创建线程池出现的等待队列OOM等。 </p><h4 id="阿里技术资深大咖联袂推荐"><a href="#阿里技术资深大咖联袂推荐" class="headerlink" title="阿里技术资深大咖联袂推荐"></a>阿里技术资深大咖联袂推荐</h4><p>阿里高级研究员多隆：工程师对于代码，一定要“精益求精”，不论从性能，还是简洁优雅，都要具备“精益求精”的工匠精神，认真打磨自己的作品。 </p><p>阿里研究员毕玄：一个优秀的工程师和一个普通工程师的区别，不是现在满天飞的架构图，他的功底就是体现在他写的每一行代码上。 </p><p>阿里研究员玄难：代码是软件工程里面的产品设计、系统架构设计等工作的最后承载体，代码的质量决定了一切工作的成败。 </p><p>阿里巴巴B2B事业群CTO李纯：好的软件产品离不开工程师高质量的代码及相互间顺畅的沟通与合作。简单，适用的代码规约背后所传递的是技术上的追求卓越、协同合作的精神，是每个技术团队不可缺失的重要利器。 </p><p>阿里研究员、HipHop作者：赵海平（花名：福贝）：程序员是创造个性化作品的艺术家，但同时也是需要团队合作的工种。个性化应尽量表现在代码效率和算法方面，牺牲小我，成就大我。</p><h4 id="拥抱规范，远离伤害！"><a href="#拥抱规范，远离伤害！" class="headerlink" title="拥抱规范，远离伤害！"></a>拥抱规范，远离伤害！</h4><p>开发的同学们赶紧行动起来，遵守代码规范，你好，我好，大家好！</p><h5 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h5><ol><li>原文: <a href="https://yq.aliyun.com/articles/69327?spm=5176.100239.blogcont69327.158.xUUgiz&amp;p=2#comments" target="_blank" rel="external">https://yq.aliyun.com/articles/69327?spm=5176.100239.blogcont69327.158.xUUgiz&amp;p=2#comments</a></li><li>「阿里巴巴编码规范」考试认证 : <a href="https://edu.aliyun.com/certification/cldt02" target="_blank" rel="external">https://edu.aliyun.com/certification/cldt02</a> </li><li>点击下载《阿里巴巴Java开发手册》(纪念版): <a href="https://yq.aliyun.com/attachment/download/?id=4942" target="_blank" rel="external">https://yq.aliyun.com/attachment/download/?id=4942</a></li><li>IDE插件下载 : <a href="https://github.com/alibaba/p3c" target="_blank" rel="external">https://github.com/alibaba/p3c</a></li></ol><h3 id="以下记录以下自己需要注意的一些规范-遵守代码规范，你好，我好，大家好！"><a href="#以下记录以下自己需要注意的一些规范-遵守代码规范，你好，我好，大家好！" class="headerlink" title="以下记录以下自己需要注意的一些规范, 遵守代码规范，你好，我好，大家好！"></a>以下记录以下自己需要注意的一些规范, <code>遵守代码规范，你好，我好，大家好！</code></h3><h4 id="编程规约"><a href="#编程规约" class="headerlink" title="编程规约"></a>编程规约</h4><h4 id="命名风格"><a href="#命名风格" class="headerlink" title="命名风格"></a>命名风格</h4><ol><li><p>【强制】</p><p>  抽象类命名使用 Abstract 或 Base 开头； </p><p>  异常类命名使用 Exception 结尾； </p><p>  测试类命名以它要测试的类的名称开始，以 Test 结尾。</p></li><li><p>【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。</p><p>正例： <code>MAX_STOCK_COUNT</code></p><p>反例： <code>MAX_COUNT</code></p></li><li><p>【强制】 POJO 类中布尔类型的变量，都不要加 is，否则部分框架解析会引起序列化错误。</p><p>反例： 定义为基本数据类型 Boolean isDeleted； 的属性，它的方法也是 isDeleted()， RPC 框架在反向解析的时候， “以为”对应的属性名称是 deleted，导致属性获取不到，进而抛出异</p><pre><code>常。</code></pre></li><li><p>【强制】杜绝完全不规范的缩写， 避免望文不知义。</p><p>反例： AbstractClass“缩写” 命名成 AbsClass； condition“缩写” 命名成 condi，此类随<br>意缩写严重降低了代码的可阅读性。</p></li><li><p>【推荐】为了达到代码自解释的目标，任何自定义编程元素在命名时，使用尽量完整的单词<br>组合来表达其意。</p><p>正例： 从远程仓库拉取代码的类命名为 PullCodeFromRemoteRepository。</p><p>反例： 变量 int a; 的随意命名方式。</p></li><li><p>【推荐】接口类中的方法和属性不要加任何修饰符号（public 也不要加） ，保持代码的简洁<br>性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是<br>与接口方法相关，并且是整个应用的基础常量。</p><p>正例： 接口方法签名： void f();</p><p>接口基础常量表示： String COMPANY = “alibaba”;</p><p>反例： 接口方法定义： public abstract void f();</p><p>说明： JDK8 中接口允许有默认实现，那么这个 default 方法，是对所有实现类都有价值的默<br>认实现。</p></li><li><p>【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。<br>说明： 枚举其实就是特殊的常量类，且构造方法被默认强制是私有。</p><p>正例： 枚举名字为 ProcessStatusEnum 的成员名称： SUCCESS / UNKOWN_REASON。</p></li><li><p>【参考】各层命名规约：</p><blockquote><p>A) Service/DAO 层方法命名规约</p></blockquote><p>1） 获取单个对象的方法用 get 做前缀。</p><p>2） 获取多个对象的方法用 list 做前缀。</p><p>3） 获取统计值的方法用 count 做前缀。</p><p>4） 插入的方法用 save/insert 做前缀。</p><p>5） 删除的方法用 remove/delete 做前缀。</p><p>6） 修改的方法用 update 做前缀。</p><blockquote><p>B) 领域模型命名规约</p></blockquote><p>1） 数据对象： xxxDO， xxx 即为数据表名。</p><p>2） 数据传输对象： xxxDTO， xxx 为业务领域相关的名称。</p><p>3） 展示对象： xxxVO， xxx 一般为网页名称。</p><p>4） POJO 是 DO/DTO/BO/VO 的统称，禁止命名成 xxxPOJO。</p></li></ol><h4 id="常量定义"><a href="#常量定义" class="headerlink" title="常量定义"></a>常量定义</h4><ol><li><p>【强制】不允许任何魔法值（即未经定义的常量） 直接出现在代码中。</p><p>反例： String key = “Id#taobao_” + tradeId;</p><p>cache.put(key, value);</p></li><li><p>【推荐】不要使用一个常量类维护所有常量， 按常量功能进行归类，分开维护。</p><p>说明： 大而全的常量类，非得使用查找功能才能定位到修改的常量，不利于理解和维护。</p><p>正例： 缓存相关常量放在类 CacheConsts 下； 系统配置相关常量放在类 ConfigConsts 下。</p><h4 id="代码格式"><a href="#代码格式" class="headerlink" title="代码格式"></a>代码格式</h4><p>1.示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">    <span class="comment">// 缩进 4 个空格</span></div><div class="line">    String say = <span class="string">"hello"</span>;</div><div class="line">    <span class="comment">// 运算符的左右必须有一个空格</span></div><div class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;阿里巴巴 Java 开发手册</div><div class="line">    <span class="comment">// 关键词 if 与括号之间必须有一个空格，括号内的 f 与左括号， 0 与右括号不需要空格</span></div><div class="line">    <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</div><div class="line">        System.out.println(say);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 左大括号前加空格且不换行；左大括号后换行</span></div><div class="line">    <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</div><div class="line">        System.out.println(<span class="string">"world"</span>);</div><div class="line">        <span class="comment">// 右大括号前换行，右大括号后有 else，不用换行</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        System.out.println(<span class="string">"ok"</span>);</div><div class="line">        <span class="comment">// 在右大括号后直接结束，则必须换行</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ol><p>2.【强制】 注释的双斜线与注释内容之间有且仅有一个空格。</p><p>   正例： // 注释内容， 注意在//和注释内容之间有一个空格。</p><p>3.【强制】单行字符数限制不超过 120 个，超出需要换行，换行时遵循如下原则：</p><p>   1） 第二行相对第一行缩进 4 个空格，从第三行开始，不再继续缩进，参考示例。</p><p>   2） 运算符与下文一起换行。</p><p>   3） 方法调用的点符号与下文一起换行。</p><p>   4） 方法调用时，多个参数， 需要换行时， 在逗号后进行。</p><p>   5） 在括号前不要换行，见反例。</p><p>   正例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</div><div class="line"><span class="comment">// 超过 120 个字符的情况下，换行缩进 4 个空格， 点号和方法名称一起换行</span></div><div class="line">sb.append(<span class="string">"zi"</span>).append(<span class="string">"xin"</span>)...</div><div class="line">    .append(<span class="string">"huang"</span>)...</div><div class="line">    .append(<span class="string">"huang"</span>)...</div><div class="line">    .append(<span class="string">"huang"</span>);</div></pre></td></tr></table></figure></p><p>   反例：<br>   <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</div><div class="line"><span class="comment">// 超过 120 个字符的情况下，不要在括号前换行</span></div><div class="line">sb.append(<span class="string">"zi"</span>).append(<span class="string">"xin"</span>)...append</div><div class="line">    (<span class="string">"huang"</span>);</div><div class="line"><span class="comment">// 参数很多的方法调用可能超过 120 个字符， 不要在逗号前换行</span></div><div class="line">method(args1, args2, args3, ...</div><div class="line">   , argsX);</div></pre></td></tr></table></figure></p><p>4.【强制】方法参数在定义和传入时，多个参数逗号后边必须加空格。</p><p>   正例： 下例中实参的”a”,后边必须要有一个空格。</p><p>   method(“a”, “b”, “c”);<br>5.【推荐】方法体内的执行语句组、变量的定义语句组、不同的业务逻辑之间或者不同的语义<br>   之间插入一个空行。相同业务逻辑和语义之间不需要插入空行。<br>   说明： 没有必要插入多个空行进行隔开</p><h4 id="注释规范"><a href="#注释规范" class="headerlink" title="注释规范"></a>注释规范</h4><ol><li><p>【强制】类、类属性、类方法的注释必须使用 Javadoc 规范，使用/<em>*内容</em>/格式，不得使用<br>// xxx 方式。</p><p>说明： 在 IDE 编辑窗口中， Javadoc 方式会提示相关注释，生成 Javadoc 可以正确输出相应注<br>释； 在 IDE 中，工程调用方法时，不进入方法即可悬浮提示方法、参数、返回值的意义，提高<br>阅读效率</p></li><li><p>【强制】所有的抽象方法（包括接口中的方法） 必须要用 Javadoc 注释、除了返回值、参数、<br>异常说明外，还必须指出该方法做什么事情，实现什么功能。</p><p>说明： 对子类的实现要求，或者调用注意事项，请一并说明</p></li><li><p>【强制】所有的类都必须添加创建者和创建日期。</p></li><li><p>【推荐】与其“半吊子”英文来注释，不如用中文注释把问题说清楚。专有名词与关键字保持<br>英文原文即可</p></li><li><p>【推荐】代码修改的同时，注释也要进行相应的修改，尤其是参数、返回值、异常、核心逻辑<br>等的修改</p><p>【推荐】代码修改的同时，注释也要进行相应的修改，尤其是参数、返回值、异常、核心逻辑<br>等的修改</p></li><li><p>【推荐】代码修改的同时，注释也要进行相应的修改，尤其是参数、返回值、异常、核心逻辑<br>等的修改</p></li><li><p>【参考】特殊注释标记，请注明标记人与标记时间。注意及时处理这些标记，通过标记扫描，<br>经常清理此类标记。线上故障有时候就是来源于这些标记处的代码。<br>1） 待办事宜（TODO） :（标记人，标记时间， [预计处理时间]）<br>表示需要实现，但目前还未实现的功能。这实际上是一个 Javadoc 的标签，目前的 Javadoc<br>还没有实现，但已经被广泛使用。只能应用于类，接口和方法（因为它是一个 Javadoc 标签） 。<br>2） 错误，不能工作（FIXME） :（标记人，标记时间， [预计处理时间]）<br>在注释中用 FIXME 标记某代码是错误的，而且不能工作，需要及时纠正的情况。</p><h4 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h4></li><li>【强制】有 try 块放到了事务代码中， catch 异常后，如果需要回滚事务，一定要注意手动回<br>滚事务。</li><li>【强制】有 try 块放到了事务代码中， catch 异常后，如果需要回滚事务，一定要注意手动回<br>滚事务。</li></ol><h4 id="MySQL-数据库-建表规约"><a href="#MySQL-数据库-建表规约" class="headerlink" title="MySQL 数据库 建表规约"></a>MySQL 数据库 建表规约</h4><p>1.【强制】表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint<br>（1 表示是， 0 表示否） 。</p><p>说明： 任何字段如果为非负数，必须是 unsigned。</p><p>正例： 表达逻辑删除的字段名 is_deleted， 1 表示删除， 0 表示未删除</p><p>2.【强制】 varchar 是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长<br>    度大于此值，定义字段类型为 text，独立出来一张表，用主键来对应，避免影响其它字段索<br>    引效率。<br>3.【强制】表必备三字段： id, gmt_create, gmt_modified。</p><p>说明： 其中 id 必为主键，类型为 unsigned bigint、单表时自增、步长为 1。 gmt_create,<br>gmt_modified 的类型均为 date<em>time 类型，前者现在时表示主动创建，后者过去分词表示被<br>   动更新<br>4.【推荐】表的命名最好是加上“业务名称</em>表的作用”。<br>  正例： alipay_task / force_project / trade_config<br>5.【强制】业务上具有唯一特性的字段，即使是多个字段的组合，也必须建成唯一索引。<br>   说明： 不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明<br>   显的； 另外，即使在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必<br>   然有脏数据产生<br>6.【强制】超过三个表禁止 join。需要 join 的字段，数据类型必须绝对一致； 多表关联查询时，<br>  保证被关联的字段需要有索引。<br>  说明： 即使双表 join 也要注意表索引、 SQL 性能</p><h4 id="MySQL-数据库-SQL语句"><a href="#MySQL-数据库-SQL语句" class="headerlink" title="MySQL 数据库 SQL语句"></a>MySQL 数据库 SQL语句</h4><ol><li>【强制】不要使用 count(列名)或 count(常量)来替代 count(<em>)， count(</em>)是 SQL92 定义的<br>标准统计行数的语法，跟数据库无关，跟 NULL 和非 NULL 无关。<br>说明： count(*)会统计值为 NULL 的行，而 count(列名)不会统计此列为 NULL 值的行</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h3&gt;&lt;center&gt;关于《阿里巴巴Java开发手册》&lt;/center&gt;



&lt;p&gt;你是否曾因Java代码规范版本纷杂而无所适从？&lt;/p&gt;
&lt;p&gt;你是否想过代码规范能将系统故障率降低20%？&lt;/p&gt;
&lt;p&gt;你是否曾因团队代码风格迥异而协同困难？&lt;/p&gt;
&lt;p&gt;你是否正在review一些原本可以避免的故障？&lt;/p&gt;
&lt;p&gt;你是否无法确定自己的代码足够健壮？ &lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>解决CSS和JS文件的客户端缓存问题</title>
    <link href="http://www.songshuiyang.site/2018/02/10/Web%E5%89%8D%E7%AB%AF/CSS%E5%92%8CJS%E6%96%87%E4%BB%B6%E7%9A%84%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98/"/>
    <id>http://www.songshuiyang.site/2018/02/10/Web前端/CSS和JS文件的客户端缓存问题/</id>
    <published>2018-02-10T03:48:12.000Z</published>
    <updated>2018-02-26T12:31:58.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>做项目的时候，发现自己修改了一个css文件但样式并没有应用，查看http请求(如下图)，注意这个参数<code>Status Code:200 OK (from disk cache)</code> , 说明文件是是之前浏览器缓存的文件，浏览器并没有请求我们新改的文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Request URL:http:<span class="comment">//localhost:8080/static/layui/build/css/app.cssRequest Method:GET</span></div><div class="line">Status Code:<span class="number">200</span> OK (from disk cache)</div><div class="line">Remote Address:<span class="number">127.0</span>.0.1:<span class="number">8080</span></div><div class="line">Referrer Policy:no-referrer-when-downgrade</div></pre></td></tr></table></figure></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><blockquote><p>发现问题了，现在就是要解决如果是服务器js css等文件修改了，怎样让浏览器能够请求我们最新的文件, 通过查看其他人的解决方法，还有看了一下大厂<code>百度, 淘宝 , 新浪</code> 对这个问题的处理，总结了一下下面几种方法:</p></blockquote><h4 id="方法一-在css文件上-js文件后面加上版本号-v-1245365"><a href="#方法一-在css文件上-js文件后面加上版本号-v-1245365" class="headerlink" title="方法一: 在css文件上, js文件后面加上版本号?v=1245365"></a>方法一: 在css文件上, js文件后面加上版本号<code>?v=1245365</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"$&#123;ctx&#125;static/admin/css/main.css?v=1245365"</span> <span class="attr">media</span>=<span class="string">"all"</span> /&gt;</span></div></pre></td></tr></table></figure><ol><li>如果是经常更新的css文件版本号可以取当前时间的时间戳 <code>v=1518237859338</code> ,这样就可以每次都获取到最新的文件，但缺点就是每次刷新页面都会请求该文件，在项目开发过程中可以使用这种方式</li><li>如果是更新频率不高的的文件，可以取: <code>v=20180210</code> , 这样的话刷新页面就不会每次请求这个文件了，可以减轻服务器的压力 </li><li>如果是项目稳定了基本没有改动了，可以取一个固定值:<code>v=0.0.1</code></li></ol><h3 id="方法二：一个版本一个文件夹"><a href="#方法二：一个版本一个文件夹" class="headerlink" title="方法二：一个版本一个文件夹"></a>方法二：一个版本一个文件夹</h3><blockquote><p>淘宝的做法: 用一个文件 <code>6.2.3</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://g.alicdn.com/kg/??component/6.2.3/extension/content-box/xtpl/view.xtpl-min.js</div></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h2&gt;&lt;p&gt;做项目的时候，发现自己修改了一个css文件但样式并没有应用，查看http请求(如下图)，注意这个参数&lt;code&gt;Status Code:20
      
    
    </summary>
    
      <category term="client" scheme="http://www.songshuiyang.site/categories/client/"/>
    
    
      <category term="css" scheme="http://www.songshuiyang.site/tags/css/"/>
    
      <category term="js" scheme="http://www.songshuiyang.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>生成二维码图片(base64格式)</title>
    <link href="http://www.songshuiyang.site/2018/01/29/Web%E5%90%8E%E5%8F%B0/%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%9B%BE%E7%89%87(base64%E6%A0%BC%E5%BC%8F)/"/>
    <id>http://www.songshuiyang.site/2018/01/29/Web后台/相关技术/生成二维码图片(base64格式)/</id>
    <published>2018-01-29T13:00:12.000Z</published>
    <updated>2018-02-26T12:31:59.906Z</updated>
    
    <content type="html"><![CDATA[<h3 id="生成二维码图片-base64格式"><a href="#生成二维码图片-base64格式" class="headerlink" title="生成二维码图片(base64格式)"></a>生成二维码图片(base64格式)</h3><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.guangeryi.mall.payment.weixin;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.google.zxing.BarcodeFormat;</div><div class="line"><span class="keyword">import</span> com.google.zxing.EncodeHintType;</div><div class="line"><span class="keyword">import</span> com.google.zxing.MultiFormatWriter;</div><div class="line"><span class="keyword">import</span> com.google.zxing.client.j2se.MatrixToImageWriter;</div><div class="line"><span class="keyword">import</span> com.google.zxing.common.BitMatrix;</div><div class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</div><div class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</div><div class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.Hashtable;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QRCodeUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 生成二维码 Base64编码后字符串</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> contents 内容</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encodeQRCodeBase64</span><span class="params">(String contents)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> encodeQRCodeToBase64Str(contents);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 生成二维码 Base64编码后字符串 &lt;img src=''&gt; src填入该字符串显示图片</span></div><div class="line"><span class="comment">     * （高度:300 , 宽度:300）</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> contents 内容</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">encodeQRCodeToBase64Str</span><span class="params">(String contents)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> width = WxPcPayConfigImpl.QR_IMG_WIDTH;</div><div class="line">        <span class="keyword">int</span> height = WxPcPayConfigImpl.QR_IMG_HEIGHT;</div><div class="line">        Map&lt;EncodeHintType, Object&gt; hints = <span class="keyword">new</span> Hashtable&lt;&gt;();</div><div class="line">        String base64Img = <span class="string">"data:image/png;base64,"</span>;</div><div class="line">        <span class="comment">// 指定编码格式</span></div><div class="line">        hints.put(EncodeHintType.CHARACTER_SET, <span class="string">"UTF-8"</span>);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">// 生成输出流</span></div><div class="line">            BitMatrix bitMatrix1 = <span class="keyword">new</span> MultiFormatWriter().encode(contents,</div><div class="line">                    BarcodeFormat.QR_CODE, width, height, hints);</div><div class="line">            BufferedImage image = MatrixToImageWriter.toBufferedImage(bitMatrix1);</div><div class="line">            base64Img = base64Img + encodeToString(<span class="string">"png"</span>, image);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> base64Img;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 将图片转换成base64格式进行存储</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> formatName 文件格式</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> image      图片流</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> base64字符串</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">encodeToString</span><span class="params">(String formatName, BufferedImage image)</span> </span>&#123;</div><div class="line">        String imageString = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> (ByteArrayOutputStream bos = <span class="keyword">new</span> ByteArrayOutputStream()) &#123;</div><div class="line">            ImageIO.write(image, formatName, bos);</div><div class="line">            <span class="keyword">byte</span>[] imageBytes = bos.toByteArray();</div><div class="line">            imageString = <span class="keyword">new</span> String(Base64.encodeBase64(imageBytes));</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> imageString;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="comment">// 输出在img标签中img属性中</span></div><div class="line">        System.out.println(encodeQRCodeBase64(<span class="string">"你好"</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;生成二维码图片-base64格式&quot;&gt;&lt;a href=&quot;#生成二维码图片-base64格式&quot; class=&quot;headerlink&quot; title=&quot;生成二维码图片(base64格式)&quot;&gt;&lt;/a&gt;生成二维码图片(base64格式)&lt;/h3&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>根据手机区号获取城市地理位置</title>
    <link href="http://www.songshuiyang.site/2018/01/29/Web%E5%90%8E%E5%8F%B0/%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/%E6%A0%B9%E6%8D%AE%E6%89%8B%E6%9C%BA%E5%8C%BA%E5%8F%B7%E8%8E%B7%E5%8F%96%E5%9F%8E%E5%B8%82%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE/"/>
    <id>http://www.songshuiyang.site/2018/01/29/Web后台/相关技术/根据手机区号获取城市地理位置/</id>
    <published>2018-01-29T12:55:12.000Z</published>
    <updated>2018-02-26T12:31:59.863Z</updated>
    
    <content type="html"><![CDATA[<h3 id="根据手机区号获取城市地理位置"><a href="#根据手机区号获取城市地理位置" class="headerlink" title="根据手机区号获取城市地理位置"></a>根据手机区号获取城市地理位置</h3><p>httpAPI:  <a href="http://www.ip138.com:8080/search.asp?action=mobile&amp;mobile=%s" target="_blank" rel="external">http://www.ip138.com:8080/search.asp?action=mobile&amp;mobile=%s</a></p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.guangeryi.mall.third.common;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</div><div class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</div><div class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MobileLocationUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(MobileLocationUtils.class);</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 根据手机号获取所在地信息</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> mobile 手机号码</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> 返回map</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String,Object&gt; <span class="title">getMobileAddress</span> <span class="params">(String mobile)</span> </span>&#123;</div><div class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        String returnStr= getMobileAddressUtils(mobile);</div><div class="line">        <span class="comment">// 将160号的空格转化成32号的空格</span></div><div class="line">        returnStr = returnStr.replaceAll(<span class="string">"[\\u00A0]+"</span>, <span class="string">" "</span>);</div><div class="line">        <span class="comment">// 去空格</span></div><div class="line">        returnStr = returnStr.trim();</div><div class="line">        String [] address = returnStr.split(<span class="string">"\\s+"</span>);</div><div class="line">        String province = <span class="string">""</span>;<span class="comment">// 省</span></div><div class="line">        String city = <span class="string">""</span>;    <span class="comment">// 市</span></div><div class="line">        <span class="comment">// 直辖市</span></div><div class="line">        <span class="keyword">if</span> (address.length == <span class="number">1</span>) &#123;</div><div class="line">            province = address[<span class="number">0</span>];</div><div class="line">            city = address[<span class="number">0</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (address.length == <span class="number">2</span>) &#123;</div><div class="line">            province = address[<span class="number">0</span>];</div><div class="line">            city = address[<span class="number">1</span>];</div><div class="line">        &#125;</div><div class="line">        map.put(<span class="string">"province"</span>, province);</div><div class="line">        map.put(<span class="string">"city"</span>, city);</div><div class="line">        logger.info(mobile + <span class="string">" 手机号所在信息:"</span> + map);</div><div class="line">        <span class="keyword">return</span> map;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMobileAddressUtils</span><span class="params">(String mobile)</span></span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            String url = <span class="string">"http://www.ip138.com:8080/search.asp?action=mobile&amp;mobile=%s"</span>;</div><div class="line">            url = String.format(url, mobile);</div><div class="line">            Document doc = Jsoup.connect(url).get();</div><div class="line">            Elements els = doc.getElementsByClass(<span class="string">"tdc2"</span>);</div><div class="line">            <span class="keyword">if</span>(els.get(<span class="number">1</span>).text().equals(<span class="string">"mobile 不是数字! 验证手机号有误"</span>) || els.get(<span class="number">1</span>).text().equals(<span class="string">"验证手机号有误"</span>)) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="string">"未知"</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> els.get(<span class="number">1</span>).text();</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">"未知"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        System.out.println(getMobileAddress(<span class="string">"13117975845"</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;根据手机区号获取城市地理位置&quot;&gt;&lt;a href=&quot;#根据手机区号获取城市地理位置&quot; class=&quot;headerlink&quot; title=&quot;根据手机区号获取城市地理位置&quot;&gt;&lt;/a&gt;根据手机区号获取城市地理位置&lt;/h3&gt;&lt;p&gt;httpAPI:  &lt;a href=&quot;http://www.ip138.com:8080/search.asp?action=mobile&amp;amp;mobile=%s&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ip138.com:8080/search.asp?action=mobile&amp;amp;mobile=%s&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>根据IP获取城市地理位置</title>
    <link href="http://www.songshuiyang.site/2018/01/29/Web%E5%90%8E%E5%8F%B0/%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/%E6%A0%B9%E6%8D%AEIP%E8%8E%B7%E5%8F%96%E5%9F%8E%E5%B8%82%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE/"/>
    <id>http://www.songshuiyang.site/2018/01/29/Web后台/相关技术/根据IP获取城市地理位置/</id>
    <published>2018-01-29T12:54:12.000Z</published>
    <updated>2018-02-26T12:31:59.833Z</updated>
    
    <content type="html"><![CDATA[<h3 id="根据IP获取城市地理位置"><a href="#根据IP获取城市地理位置" class="headerlink" title="根据IP获取城市地理位置"></a>根据IP获取城市地理位置</h3><p>使用的是百度查询的api，试过到淘宝的API, 但是淘宝做了访问次数限制，如果批量查询的话直接timeout</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.guangeryi.mall.third.common;</div><div class="line"></div><div class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.*;</div><div class="line"><span class="keyword">import</span> java.net.URL;</div><div class="line"><span class="keyword">import</span> java.nio.charset.Charset;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 根据IP获取城市地理位置</span></div><div class="line"><span class="comment"> * 调用百度api：http://api.map.baidu.com/location/ip</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IpUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(AddressUtils.class);</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 根据ip获取城市信息</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> ip</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">getCityInfoByIp</span><span class="params">(String ip)</span></span>&#123;</div><div class="line">        Map&lt;String, Object&gt; result = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        result.put(<span class="string">"status"</span>,<span class="string">"success"</span>);</div><div class="line">        String jsonInfo = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            jsonInfo = getCityInfoByUrlAPI(ip);</div><div class="line">            logger.info(<span class="string">"jsonInfo:"</span> + jsonInfo);</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            logger.error(<span class="string">"调用 api.map.baidu.com/location/ip 获取城市信息异常, ip:"</span> + ip, e);</div><div class="line">            result.put(<span class="string">"status"</span>,<span class="string">"failed"</span>);</div><div class="line">            <span class="keyword">return</span>  result;</div><div class="line">        &#125;</div><div class="line">        String province = <span class="string">""</span>;</div><div class="line">        String city = <span class="string">""</span>;</div><div class="line">        String district =<span class="string">""</span>;</div><div class="line">        String street = <span class="string">""</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            JSONObject jsonObject = JSONObject.fromObject(jsonInfo);</div><div class="line">            <span class="keyword">if</span> (jsonObject != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (jsonObject.getJSONObject(<span class="string">"content"</span>) != <span class="keyword">null</span>) &#123;</div><div class="line">                    JSONObject addressDetail = jsonObject.getJSONObject(<span class="string">"content"</span>).getJSONObject(<span class="string">"address_detail"</span>);</div><div class="line">                    province = (String)addressDetail.get(<span class="string">"province"</span>); <span class="comment">// 省</span></div><div class="line">                    city = (String)addressDetail.get(<span class="string">"city"</span>);         <span class="comment">// 市</span></div><div class="line">                    district = (String)addressDetail.get(<span class="string">"district"</span>); <span class="comment">// 区</span></div><div class="line">                    street = (String)addressDetail.get(<span class="string">"street"</span>);     <span class="comment">// 街道</span></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            logger.error(<span class="string">"调用 api.map.baidu.com/location/ip 获取城市信息异常,解析JSON异常 ip:"</span> + ip, e);</div><div class="line">            result.put(<span class="string">"status"</span>,<span class="string">"failed"</span>);</div><div class="line">            <span class="keyword">return</span>  result;</div><div class="line">        &#125;</div><div class="line">        result.put(<span class="string">"province"</span>,province);</div><div class="line">        result.put(<span class="string">"city"</span>,city);</div><div class="line">        result.put(<span class="string">"district"</span>,district);</div><div class="line">        result.put(<span class="string">"street"</span>,street);</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 调用 api.map.baidu.com/location/ip 获取城市信息</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> ip</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getCityInfoByUrlAPI</span><span class="params">(String ip)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        String url = <span class="string">"http://api.map.baidu.com/location/ip?ak=F454f8a5efe5e577997931cc01de3974&amp;ip="</span> + ip;</div><div class="line">        <span class="keyword">try</span> (InputStream is = <span class="keyword">new</span> URL(url).openStream()) &#123;</div><div class="line">            BufferedReader rd = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(is, Charset.forName(<span class="string">"UTF-8"</span>)));</div><div class="line">            String jsonText = getStrByReader(rd);</div><div class="line">            jsonText = decodeUnicode(jsonText);</div><div class="line">            <span class="keyword">return</span> jsonText;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取流数据</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> rd</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getStrByReader</span><span class="params">(Reader rd)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">        <span class="keyword">int</span> cp;</div><div class="line">        <span class="keyword">while</span> ((cp = rd.read()) != -<span class="number">1</span>) &#123;</div><div class="line">            sb.append((<span class="keyword">char</span>) cp);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> sb.toString();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * unicode 转换成 中文</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@author</span> fanhui 2007-3-15</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> theString 字符串</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> String</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">decodeUnicode</span><span class="params">(String theString)</span> </span>&#123;</div><div class="line">        <span class="keyword">char</span> aChar;</div><div class="line">        <span class="keyword">int</span> len = theString.length();</div><div class="line">        StringBuilder outBuilder = <span class="keyword">new</span> StringBuilder(len);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; len;) &#123;</div><div class="line">            aChar = theString.charAt(x++);</div><div class="line">            <span class="keyword">if</span> (aChar == <span class="string">'\\'</span>) &#123;</div><div class="line">                aChar = theString.charAt(x++);</div><div class="line">                <span class="keyword">if</span> (aChar == <span class="string">'u'</span>) &#123;</div><div class="line">                    <span class="keyword">int</span> value = <span class="number">0</span>;</div><div class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</div><div class="line">                        aChar = theString.charAt(x++);</div><div class="line">                        <span class="keyword">switch</span> (aChar) &#123;</div><div class="line">                            <span class="keyword">case</span> <span class="string">'0'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'1'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'2'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'3'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'4'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'5'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'6'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'7'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'8'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'9'</span>:</div><div class="line">                                value = (value &lt;&lt; <span class="number">4</span>) + aChar - <span class="string">'0'</span>;</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="keyword">case</span> <span class="string">'a'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'b'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'c'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'d'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'e'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'f'</span>:</div><div class="line">                                value = (value &lt;&lt; <span class="number">4</span>) + <span class="number">10</span> + aChar - <span class="string">'a'</span>;</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="keyword">case</span> <span class="string">'A'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'B'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'C'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'D'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'E'</span>:</div><div class="line">                            <span class="keyword">case</span> <span class="string">'F'</span>:</div><div class="line">                                value = (value &lt;&lt; <span class="number">4</span>) + <span class="number">10</span> + aChar - <span class="string">'A'</span>;</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="keyword">default</span>:</div><div class="line">                                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Malformed      encoding."</span>);</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    outBuilder.append((<span class="keyword">char</span>) value);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="keyword">if</span> (aChar == <span class="string">'t'</span>) &#123;</div><div class="line">                        aChar = <span class="string">'\t'</span>;</div><div class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (aChar == <span class="string">'r'</span>) &#123;</div><div class="line">                        aChar = <span class="string">'\r'</span>;</div><div class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (aChar == <span class="string">'n'</span>) &#123;</div><div class="line">                        aChar = <span class="string">'\n'</span>;</div><div class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (aChar == <span class="string">'f'</span>) &#123;</div><div class="line">                        aChar = <span class="string">'\f'</span>;</div><div class="line">                    &#125;</div><div class="line">                    outBuilder.append(aChar);</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                outBuilder.append(aChar);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> outBuilder.toString();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        System.out.println(getCityInfoByIp(<span class="string">"118.212.211.23"</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="获取用户真实IP地址"><a href="#获取用户真实IP地址" class="headerlink" title="获取用户真实IP地址"></a>获取用户真实IP地址</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 获取用户真实IP地址，不使用request.getRemoteAddr()的原因是有可能用户使用了代理软件方式避免真实IP地址,</span></div><div class="line"><span class="comment"> * 可是，如果通过了多级反向代理的话，X-Forwarded-For的值并不止一个，而是一串IP值</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getRemoteIp</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</div><div class="line">    String ip = request.getHeader(<span class="string">"x-forwarded-for"</span>);</div><div class="line">    <span class="keyword">if</span> (ip != <span class="keyword">null</span> &amp;&amp; ip.length() != <span class="number">0</span> &amp;&amp; !<span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</div><div class="line">        <span class="comment">// 多次反向代理后会有多个ip值，第一个ip才是真实ip</span></div><div class="line">        <span class="keyword">if</span>(ip.contains(<span class="string">","</span>))&#123;</div><div class="line">            ip = ip.split(<span class="string">","</span>)[<span class="number">0</span>];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</div><div class="line">        ip = request.getHeader(<span class="string">"Proxy-Client-IP"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</div><div class="line">        ip = request.getHeader(<span class="string">"WL-Proxy-Client-IP"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</div><div class="line">        ip = request.getHeader(<span class="string">"HTTP_CLIENT_IP"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</div><div class="line">        ip = request.getHeader(<span class="string">"HTTP_X_FORWARDED_FOR"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</div><div class="line">        ip = request.getHeader(<span class="string">"X-Real-IP"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</div><div class="line">        ip = request.getRemoteAddr();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// TODO 本地测试使用</span></div><div class="line">    <span class="keyword">if</span> (!isIpv4(ip)) &#123;</div><div class="line">        ip= <span class="string">"120.27.129.177"</span>; <span class="comment">// 服务器ip</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ip;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="校验IP地址"><a href="#校验IP地址" class="headerlink" title="校验IP地址"></a>校验IP地址</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 校验IP地址</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> ipAddress IP 地址</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span> true or false</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isIpv4</span><span class="params">(String ipAddress)</span> </span>&#123;</div><div class="line"></div><div class="line">    String ip = <span class="string">"^(1\\d&#123;2&#125;|2[0-4]\\d|25[0-5]|[1-9]\\d|[1-9])\\."</span></div><div class="line">            +<span class="string">"(00?\\d|1\\d&#123;2&#125;|2[0-4]\\d|25[0-5]|[1-9]\\d|\\d)\\."</span></div><div class="line">            +<span class="string">"(00?\\d|1\\d&#123;2&#125;|2[0-4]\\d|25[0-5]|[1-9]\\d|\\d)\\."</span></div><div class="line">            +<span class="string">"(00?\\d|1\\d&#123;2&#125;|2[0-4]\\d|25[0-5]|[1-9]\\d|\\d)$"</span>;</div><div class="line"></div><div class="line">    Pattern pattern = Pattern.compile(ip);</div><div class="line">    Matcher matcher = pattern.matcher(ipAddress);</div><div class="line">    <span class="keyword">return</span> matcher.matches();</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;根据IP获取城市地理位置&quot;&gt;&lt;a href=&quot;#根据IP获取城市地理位置&quot; class=&quot;headerlink&quot; title=&quot;根据IP获取城市地理位置&quot;&gt;&lt;/a&gt;根据IP获取城市地理位置&lt;/h3&gt;&lt;p&gt;使用的是百度查询的api，试过到淘宝的API, 但是淘宝做了访问次数限制，如果批量查询的话直接timeout&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="Java" scheme="http://www.songshuiyang.site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>阿里云服务器搭建Javaweb运行环境</title>
    <link href="http://www.songshuiyang.site/2018/01/20/Web%E5%90%8E%E5%8F%B0/%E7%BC%96%E8%AF%91%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2%E7%89%88%E6%9C%AC%E5%B7%A5%E5%85%B7/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJavaweb%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/"/>
    <id>http://www.songshuiyang.site/2018/01/20/Web后台/编译构建部署版本工具/阿里云服务器搭建Javaweb运行环境/</id>
    <published>2018-01-20T07:07:12.000Z</published>
    <updated>2018-02-26T12:31:59.974Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一：前言"><a href="#一：前言" class="headerlink" title="一：前言"></a>一：前言</h3><p>借助阿里云的云翼计划的梯子买了个 阿里的ESC云服务器，学生专享优惠10块钱/月，原价一百多一个月，超级划算，当然服务器配置对于我们这些学生捣鼓捣鼓还是满足的。</p><p>配置：</p><table><thead><tr><th>配置</th><th style="text-align:right">参数</th></tr></thead><tbody><tr><td>CPU</td><td style="text-align:right">Intel Xeon E5-2682 v4 1核</td></tr><tr><td>内存</td><td style="text-align:right">2G 最新一代DDR4 内存</td></tr><tr><td>带宽</td><td style="text-align:right">1M带宽 VPC专有网络, I/O 优化</td></tr><tr><td>系统盘</td><td style="text-align:right">40G系统盘高效云盘</td></tr></tbody></table><p>系统：CentOS 7.3 64位(可选ubuntu, windows service)</p><p>ESC: 云服务器 ECS（Elastic Compute Service）是一种弹性可伸缩的计算服务，助您降低 IT 成本，提升运维效率，使您更专注于核心业务创新</p><h3 id="二：搭建步骤"><a href="#二：搭建步骤" class="headerlink" title="二：搭建步骤"></a>二：搭建步骤</h3><h4 id="2-1-购买-ESC云服务器"><a href="#2-1-购买-ESC云服务器" class="headerlink" title="2.1 购买 ESC云服务器"></a>2.1 购买 ESC云服务器</h4><p>购买链接:<a href="https://www.aliyun.com/product/ecs?spm=5176.8499797.765261.239.9Uf4pK" target="_blank" rel="external">https://www.aliyun.com/product/ecs?spm=5176.8499797.765261.239.9Uf4pK</a>, 当然如果是学生的话可以使用上面的云翼计划(<a href="https://promotion.aliyun.com/ntms/campus2017.html?spm=5176.8789780.765430.4.246c0fa5bHX2oK)优惠的方式购买，当时购买还送了(CDN流量包)和(OSS资源包" target="_blank" rel="external">https://promotion.aliyun.com/ntms/campus2017.html?spm=5176.8789780.765430.4.246c0fa5bHX2oK)优惠的方式购买，当时购买还送了(CDN流量包)和(OSS资源包</a>) , 良心企业!!! </p><h4 id="2-2-查看系统参数，及配置参数"><a href="#2-2-查看系统参数，及配置参数" class="headerlink" title="2.2 查看系统参数，及配置参数"></a>2.2 查看系统参数，及配置参数</h4><p>下单完成之后在 控制台-&gt; 云服务器 ECS -&gt; 实例 可看到系统自动为我们创建的 服务器实例, 里面提供了一些系统参数，还展示了系统的一些运行状态参数。</p><p>我们需要的参数</p><p>1.公网ip</p><blockquote><p>访问实例需要用</p></blockquote><p>2.远程连接密码  </p><blockquote><p>这个在第一次使用浏览器远程连接主机的时候，阿里云会提供，记住只出现一次，可以用笔记本记录下来，以后每次用浏览器远程控制访问主机的时候需要提供</p></blockquote><p>3.登入系统的密码 </p><p>在实例信息面板中有一个重置密码的功能，第一次需要自己设置，这个是主机系统的登入密码。 一开始用浏览器远程连接主机的时候，进入到了命令行界面, 要求输入密码的时候一直输入的是远程连接密码，导致一直登不进，查了一下资料发现系统登入密码需要自己创建, 登入用户 <code>root</code></p><p>4.安全组配置</p><p>安全组配置是阿里云在系统做了一次网关过滤，外网访问主机，主机访问外网都需要配置这个参数，否则访问不到, 安全组配置分为入口和出口</p><p>入口配置:</p><ul><li>把一些常用端口打开:<code>80 22(ssh, sftp) 23(telnet)</code> , 使用xshell和ftp都是使用的是22端口</li><li>添加 <code>全部 ICMP</code> 协议类型, 端口范围为<code>-1/-1</code>, 没有这条规则则ping 不通主机</li></ul><h4 id="2-3-连接主机进行配置"><a href="#2-3-连接主机进行配置" class="headerlink" title="2.3 连接主机进行配置"></a>2.3 连接主机进行配置</h4><p>有了上面的配置就可以通过远程连接主机了, 我是使用<code>xshell</code> 进行远程连接, 使用<code>fileZilla</code>进行传输文件</p><h5 id="2-3-1-配置-Java环境"><a href="#2-3-1-配置-Java环境" class="headerlink" title="2.3.1 配置 Java环境"></a>2.3.1 配置 Java环境</h5><p>参考: <a href="https://www.cnblogs.com/sxdcgaq8080/p/7492426.html" target="_blank" rel="external">https://www.cnblogs.com/sxdcgaq8080/p/7492426.html</a></p><p>注: 如果出现<code>export =&#39; not a valid identifier</code><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">原因就是你修改的 /etc/profile 文件里</div><div class="line">你加过空格</div><div class="line"></div><div class="line">我的代码如下：</div><div class="line">export JAVA_HOME = /usr/java/jdk1.7.0_75</div><div class="line">export PATH = $JAVA_HOME/bin:$PATH</div><div class="line">export CLASSPATH = .:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</div><div class="line"></div><div class="line">修改为如下：</div><div class="line">export JAVA_HOME=/usr/java/jdk1.7.0_75</div><div class="line">export PATH=$JAVA_HOME/bin:$PATH</div><div class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</div><div class="line">将等号两边的空格去掉就可以了 ，大家要注意</div></pre></td></tr></table></figure></p><h5 id="2-3-2-配置-Tomcat环境"><a href="#2-3-2-配置-Tomcat环境" class="headerlink" title="2.3.2 配置 Tomcat环境"></a>2.3.2 配置 Tomcat环境</h5><p>参考： <a href="http://www.linuxidc.com/Linux/2015-09/123118.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2015-09/123118.htm</a></p><p>注:<br>1.在ECS上启动tomcat后，第一次访问时间特别长<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">2017-04-25 10:16:04 INFO com.world.socket.ServerSocketListener  </div><div class="line">25-Apr-2017 10:18:48.171 INFO [localhost-startStop-1] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom CreaecureRandom instance for session ID generation using [SHA1PRNG] took [163,521] milliseconds. </div><div class="line"> </div><div class="line"> </div><div class="line">这个session ID引起的 </div><div class="line"></div><div class="line">解决办法：在JVM环境中解决 </div><div class="line">打开$JAVA_PATH/jre/lib/security/java.security这个文件，找到下面的内容：securerandom.source=file:/dev/urandom </div><div class="line">替换成securerandom.source=file:/dev/./urandom</div></pre></td></tr></table></figure></p><p>2.Centos打开、关闭、结束tomcat，及查看tomcat运行日志<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">启动：一般是执行sh tomcat/bin/startup.sh </div><div class="line">停止：一般是执行sh tomcat/bin/shutdown.sh脚本命令 </div><div class="line">查看：执行ps -ef |grep tomcat 输出如下 *** 5144 。。。等等.Bootstrap start 说明tomcat已经正常启动， 5144 就为进程号 pid = 5144 </div><div class="line">杀死：<span class="keyword">kill</span> <span class="number">-9</span> <span class="number">5144</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">------------------------linux下实时查看tomcat运行日志-------------------------</span></div><div class="line"><span class="number">1</span>、先切换到：cd tomcat/<span class="keyword">logs</span></div><div class="line"><span class="number">2</span>、tail -f catalina.out</div><div class="line"><span class="number">3</span>、这样运行时就可以实时查看运行日志了</div><div class="line">Ctrl+c 是退出tail命令。</div></pre></td></tr></table></figure></p><h5 id="2-3-3-配置-Mysql环境"><a href="#2-3-3-配置-Mysql环境" class="headerlink" title="2.3.3 配置 Mysql环境"></a>2.3.3 配置 Mysql环境</h5><p>参考： <a href="http://www.linuxidc.com/Linux/2016-09/134992.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2016-09/134992.htm</a></p><h4 id="2-4-投放项目文件"><a href="#2-4-投放项目文件" class="headerlink" title="2.4 投放项目文件"></a>2.4 投放项目文件</h4><p>使用<code>fileZilla</code>进行传输文件<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Tomcat中部署web项目的三种方式：</div><div class="line">1.部署解包的webapp目录</div><div class="line">2.打包的war文件</div><div class="line">3.Manager Web应用程序</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一：前言&quot;&gt;&lt;a href=&quot;#一：前言&quot; class=&quot;headerlink&quot; title=&quot;一：前言&quot;&gt;&lt;/a&gt;一：前言&lt;/h3&gt;&lt;p&gt;借助阿里云的云翼计划的梯子买了个 阿里的ESC云服务器，学生专享优惠10块钱/月，原价一百多一个月，超级划算，当然服务器配置
      
    
    </summary>
    
      <category term="server" scheme="http://www.songshuiyang.site/categories/server/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot</title>
    <link href="http://www.songshuiyang.site/2018/01/15/Web%E5%90%8E%E5%8F%B0/Spring/spring-boot/spring-boot/"/>
    <id>http://www.songshuiyang.site/2018/01/15/Web后台/Spring/spring-boot/spring-boot/</id>
    <published>2018-01-15T12:01:44.000Z</published>
    <updated>2018-02-26T12:31:59.454Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是Spring-boot"><a href="#什么是Spring-boot" class="headerlink" title="什么是Spring-boot"></a>什么是Spring-boot</h3><p>Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程(习惯优于配置)。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Spring Boot致力于在蓬勃发展的快速应用开发领域(rapid application development)成为领导者。</p><h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h3><ol><li>独立运行的Spring项目,可以以jar包的形式独立运行, 运行一个Spring boot项目只要通过 <code>java -jar xx.jar</code></li><li>内嵌Tomcat, Jetty, Undertow 无需以war包形式部署项目</li><li>提供starter简化Maven配置</li><li>自动配置Bean, 极大的减少了我们要使用的配置</li></ol><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li>快速构建项目</li><li>对主流开发框架的无配置集成</li><li>项目可独立运行</li><li>提供运行时的应用监控</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是Spring-boot&quot;&gt;&lt;a href=&quot;#什么是Spring-boot&quot; class=&quot;headerlink&quot; title=&quot;什么是Spring-boot&quot;&gt;&lt;/a&gt;什么是Spring-boot&lt;/h3&gt;&lt;p&gt;Spring Boot是由Pivotal团队
      
    
    </summary>
    
      <category term="服务器" scheme="http://www.songshuiyang.site/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="java" scheme="http://www.songshuiyang.site/tags/java/"/>
    
      <category term="Spring" scheme="http://www.songshuiyang.site/tags/Spring/"/>
    
  </entry>
  
</feed>
